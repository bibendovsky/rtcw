/*
RTCW: Unofficial source port of Return to Castle Wolfenstein and Wolfenstein: Enemy Territory
Copyright (C) 1999-2010 id Software LLC, a ZeniMax Media company.
Copyright (c) 2012-2025 Boris I. Bendovsky bibendovsky@hotmail.com and Contributors
SPDX-License-Identifier: GPL-3.0
*/

/* This file was generated by bstone_glapigen v1.0.1. */

#ifndef QGL_H_INCLUDED
#define QGL_H_INCLUDED

#include <KHR/khrplatform.h>

#ifndef GL_APIENTRY
#define GL_APIENTRY KHRONOS_APIENTRY
#endif /* GL_APIENTRY */

typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef khronos_int8_t GLbyte;
typedef khronos_uint8_t GLubyte;
typedef khronos_int16_t GLshort;
typedef khronos_uint16_t GLushort;
typedef int GLint;
typedef unsigned int GLuint;
typedef khronos_int32_t GLclampx;
typedef int GLsizei;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void *GLeglClientBufferEXT;
typedef void *GLeglImageOES;
typedef char GLchar;
typedef char GLcharARB;
#ifdef __APPLE__
typedef void *GLhandleARB;
#else
typedef unsigned int GLhandleARB;
#endif
typedef khronos_uint16_t GLhalf;
typedef khronos_uint16_t GLhalfARB;
typedef khronos_int32_t GLfixed;
typedef khronos_intptr_t GLintptr;
typedef khronos_intptr_t GLintptrARB;
typedef khronos_ssize_t GLsizeiptr;
typedef khronos_ssize_t GLsizeiptrARB;
typedef khronos_int64_t GLint64;
typedef khronos_int64_t GLint64EXT;
typedef khronos_uint64_t GLuint64;
typedef khronos_uint64_t GLuint64EXT;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef void (GL_APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GL_APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GL_APIENTRY *GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GL_APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
typedef void (GL_APIENTRY *GLVULKANPROCNV)(void);

#define GL_CURRENT_BIT 0x00000001
#define GL_POINT_BIT 0x00000002
#define GL_LINE_BIT 0x00000004
#define GL_POLYGON_BIT 0x00000008
#define GL_POLYGON_STIPPLE_BIT 0x00000010
#define GL_PIXEL_MODE_BIT 0x00000020
#define GL_LIGHTING_BIT 0x00000040
#define GL_FOG_BIT 0x00000080
#define GL_DEPTH_BUFFER_BIT 0x00000100
#define GL_ACCUM_BUFFER_BIT 0x00000200
#define GL_STENCIL_BUFFER_BIT 0x00000400
#define GL_VIEWPORT_BIT 0x00000800
#define GL_TRANSFORM_BIT 0x00001000
#define GL_ENABLE_BIT 0x00002000
#define GL_COLOR_BUFFER_BIT 0x00004000
#define GL_HINT_BIT 0x00008000
#define GL_EVAL_BIT 0x00010000
#define GL_LIST_BIT 0x00020000
#define GL_TEXTURE_BIT 0x00040000
#define GL_SCISSOR_BIT 0x00080000
#define GL_MULTISAMPLE_BIT 0x20000000
#define GL_MULTISAMPLE_BIT_ARB 0x20000000
#define GL_MULTISAMPLE_BIT_EXT 0x20000000
#define GL_MULTISAMPLE_BIT_3DFX 0x20000000
#define GL_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_DYNAMIC_STORAGE_BIT 0x0100
#define GL_DYNAMIC_STORAGE_BIT_EXT 0x0100
#define GL_CLIENT_STORAGE_BIT 0x0200
#define GL_CLIENT_STORAGE_BIT_EXT 0x0200
#define GL_SPARSE_STORAGE_BIT_ARB 0x0400
#define GL_LGPU_SEPARATE_STORAGE_BIT_NVX 0x0800
#define GL_PER_GPU_STORAGE_BIT_NV 0x0800
#define GL_EXTERNAL_STORAGE_BIT_NVX 0x2000
#define GL_COVERAGE_BUFFER_BIT_NV 0x00008000
#define GL_CLIENT_PIXEL_STORE_BIT 0x00000001
#define GL_CLIENT_VERTEX_ARRAY_BIT 0x00000002
#define GL_CLIENT_ALL_ATTRIB_BITS 0xFFFFFFFF
#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT 0x00000001
#define GL_CONTEXT_FLAG_DEBUG_BIT 0x00000002
#define GL_CONTEXT_FLAG_DEBUG_BIT_KHR 0x00000002
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT 0x00000004
#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB 0x00000004
#define GL_CONTEXT_FLAG_NO_ERROR_BIT 0x00000008
#define GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR 0x00000008
#define GL_CONTEXT_FLAG_PROTECTED_CONTENT_BIT_EXT 0x00000010
#define GL_CONTEXT_CORE_PROFILE_BIT 0x00000001
#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT 0x00000002
#define GL_MAP_READ_BIT 0x0001
#define GL_MAP_READ_BIT_EXT 0x0001
#define GL_MAP_WRITE_BIT 0x0002
#define GL_MAP_WRITE_BIT_EXT 0x0002
#define GL_MAP_INVALIDATE_RANGE_BIT 0x0004
#define GL_MAP_INVALIDATE_RANGE_BIT_EXT 0x0004
#define GL_MAP_INVALIDATE_BUFFER_BIT 0x0008
#define GL_MAP_INVALIDATE_BUFFER_BIT_EXT 0x0008
#define GL_MAP_FLUSH_EXPLICIT_BIT 0x0010
#define GL_MAP_FLUSH_EXPLICIT_BIT_EXT 0x0010
#define GL_MAP_UNSYNCHRONIZED_BIT 0x0020
#define GL_MAP_UNSYNCHRONIZED_BIT_EXT 0x0020
#define GL_MAP_PERSISTENT_BIT 0x0040
#define GL_MAP_PERSISTENT_BIT_EXT 0x0040
#define GL_MAP_COHERENT_BIT 0x0080
#define GL_MAP_COHERENT_BIT_EXT 0x0080
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT 0x00000001
#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT 0x00000001
#define GL_ELEMENT_ARRAY_BARRIER_BIT 0x00000002
#define GL_ELEMENT_ARRAY_BARRIER_BIT_EXT 0x00000002
#define GL_UNIFORM_BARRIER_BIT 0x00000004
#define GL_UNIFORM_BARRIER_BIT_EXT 0x00000004
#define GL_TEXTURE_FETCH_BARRIER_BIT 0x00000008
#define GL_TEXTURE_FETCH_BARRIER_BIT_EXT 0x00000008
#define GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV 0x00000010
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT 0x00000020
#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT 0x00000020
#define GL_COMMAND_BARRIER_BIT 0x00000040
#define GL_COMMAND_BARRIER_BIT_EXT 0x00000040
#define GL_PIXEL_BUFFER_BARRIER_BIT 0x00000080
#define GL_PIXEL_BUFFER_BARRIER_BIT_EXT 0x00000080
#define GL_TEXTURE_UPDATE_BARRIER_BIT 0x00000100
#define GL_TEXTURE_UPDATE_BARRIER_BIT_EXT 0x00000100
#define GL_BUFFER_UPDATE_BARRIER_BIT 0x00000200
#define GL_BUFFER_UPDATE_BARRIER_BIT_EXT 0x00000200
#define GL_FRAMEBUFFER_BARRIER_BIT 0x00000400
#define GL_FRAMEBUFFER_BARRIER_BIT_EXT 0x00000400
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT 0x00000800
#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT 0x00000800
#define GL_ATOMIC_COUNTER_BARRIER_BIT 0x00001000
#define GL_ATOMIC_COUNTER_BARRIER_BIT_EXT 0x00001000
#define GL_SHADER_STORAGE_BARRIER_BIT 0x00002000
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT 0x00004000
#define GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT_EXT 0x00004000
#define GL_QUERY_BUFFER_BARRIER_BIT 0x00008000
#define GL_ALL_BARRIER_BITS 0xFFFFFFFF
#define GL_ALL_BARRIER_BITS_EXT 0xFFFFFFFF
#define GL_QUERY_DEPTH_PASS_EVENT_BIT_AMD 0x00000001
#define GL_QUERY_DEPTH_FAIL_EVENT_BIT_AMD 0x00000002
#define GL_QUERY_STENCIL_FAIL_EVENT_BIT_AMD 0x00000004
#define GL_QUERY_DEPTH_BOUNDS_FAIL_EVENT_BIT_AMD 0x00000008
#define GL_QUERY_ALL_EVENT_BITS_AMD 0xFFFFFFFF
#define GL_SYNC_FLUSH_COMMANDS_BIT 0x00000001
#define GL_SYNC_FLUSH_COMMANDS_BIT_APPLE 0x00000001
#define GL_VERTEX_SHADER_BIT 0x00000001
#define GL_VERTEX_SHADER_BIT_EXT 0x00000001
#define GL_FRAGMENT_SHADER_BIT 0x00000002
#define GL_FRAGMENT_SHADER_BIT_EXT 0x00000002
#define GL_GEOMETRY_SHADER_BIT 0x00000004
#define GL_GEOMETRY_SHADER_BIT_EXT 0x00000004
#define GL_GEOMETRY_SHADER_BIT_OES 0x00000004
#define GL_TESS_CONTROL_SHADER_BIT 0x00000008
#define GL_TESS_CONTROL_SHADER_BIT_EXT 0x00000008
#define GL_TESS_CONTROL_SHADER_BIT_OES 0x00000008
#define GL_TESS_EVALUATION_SHADER_BIT 0x00000010
#define GL_TESS_EVALUATION_SHADER_BIT_EXT 0x00000010
#define GL_TESS_EVALUATION_SHADER_BIT_OES 0x00000010
#define GL_COMPUTE_SHADER_BIT 0x00000020
#define GL_MESH_SHADER_BIT_NV 0x00000040
#define GL_TASK_SHADER_BIT_NV 0x00000080
#define GL_ALL_SHADER_BITS 0xFFFFFFFF
#define GL_ALL_SHADER_BITS_EXT 0xFFFFFFFF
#define GL_SUBGROUP_FEATURE_BASIC_BIT_KHR 0x00000001
#define GL_SUBGROUP_FEATURE_VOTE_BIT_KHR 0x00000002
#define GL_SUBGROUP_FEATURE_ARITHMETIC_BIT_KHR 0x00000004
#define GL_SUBGROUP_FEATURE_BALLOT_BIT_KHR 0x00000008
#define GL_SUBGROUP_FEATURE_SHUFFLE_BIT_KHR 0x00000010
#define GL_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT_KHR 0x00000020
#define GL_SUBGROUP_FEATURE_CLUSTERED_BIT_KHR 0x00000040
#define GL_SUBGROUP_FEATURE_QUAD_BIT_KHR 0x00000080
#define GL_SUBGROUP_FEATURE_PARTITIONED_BIT_NV 0x00000100
#define GL_TEXTURE_STORAGE_SPARSE_BIT_AMD 0x00000001
#define GL_RED_BIT_ATI 0x00000001
#define GL_GREEN_BIT_ATI 0x00000002
#define GL_BLUE_BIT_ATI 0x00000004
#define GL_2X_BIT_ATI 0x00000001
#define GL_4X_BIT_ATI 0x00000002
#define GL_8X_BIT_ATI 0x00000004
#define GL_HALF_BIT_ATI 0x00000008
#define GL_QUARTER_BIT_ATI 0x00000010
#define GL_EIGHTH_BIT_ATI 0x00000020
#define GL_SATURATE_BIT_ATI 0x00000040
#define GL_COMP_BIT_ATI 0x00000002
#define GL_NEGATE_BIT_ATI 0x00000004
#define GL_BIAS_BIT_ATI 0x00000008
#define GL_TRACE_OPERATIONS_BIT_MESA 0x0001
#define GL_TRACE_PRIMITIVES_BIT_MESA 0x0002
#define GL_TRACE_ARRAYS_BIT_MESA 0x0004
#define GL_TRACE_TEXTURES_BIT_MESA 0x0008
#define GL_TRACE_PIXELS_BIT_MESA 0x0010
#define GL_TRACE_ERRORS_BIT_MESA 0x0020
#define GL_TRACE_ALL_BITS_MESA 0xFFFF
#define GL_BOLD_BIT_NV 0x01
#define GL_ITALIC_BIT_NV 0x02
#define GL_GLYPH_WIDTH_BIT_NV 0x01
#define GL_GLYPH_HEIGHT_BIT_NV 0x02
#define GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV 0x04
#define GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV 0x08
#define GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV 0x10
#define GL_GLYPH_VERTICAL_BEARING_X_BIT_NV 0x20
#define GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV 0x40
#define GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV 0x80
#define GL_GLYPH_HAS_KERNING_BIT_NV 0x100
#define GL_FONT_X_MIN_BOUNDS_BIT_NV 0x00010000
#define GL_FONT_Y_MIN_BOUNDS_BIT_NV 0x00020000
#define GL_FONT_X_MAX_BOUNDS_BIT_NV 0x00040000
#define GL_FONT_Y_MAX_BOUNDS_BIT_NV 0x00080000
#define GL_FONT_UNITS_PER_EM_BIT_NV 0x00100000
#define GL_FONT_ASCENDER_BIT_NV 0x00200000
#define GL_FONT_DESCENDER_BIT_NV 0x00400000
#define GL_FONT_HEIGHT_BIT_NV 0x00800000
#define GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV 0x01000000
#define GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV 0x02000000
#define GL_FONT_UNDERLINE_POSITION_BIT_NV 0x04000000
#define GL_FONT_UNDERLINE_THICKNESS_BIT_NV 0x08000000
#define GL_FONT_HAS_KERNING_BIT_NV 0x10000000
#define GL_FONT_NUM_GLYPH_INDICES_BIT_NV 0x20000000
#define GL_PERFQUERY_SINGLE_CONTEXT_INTEL 0x00000000
#define GL_PERFQUERY_GLOBAL_CONTEXT_INTEL 0x00000001
#define GL_VERTEX23_BIT_PGI 0x00000004
#define GL_VERTEX4_BIT_PGI 0x00000008
#define GL_COLOR3_BIT_PGI 0x00010000
#define GL_COLOR4_BIT_PGI 0x00020000
#define GL_EDGEFLAG_BIT_PGI 0x00040000
#define GL_INDEX_BIT_PGI 0x00080000
#define GL_MAT_AMBIENT_BIT_PGI 0x00100000
#define GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI 0x00200000
#define GL_MAT_DIFFUSE_BIT_PGI 0x00400000
#define GL_MAT_EMISSION_BIT_PGI 0x00800000
#define GL_MAT_COLOR_INDEXES_BIT_PGI 0x01000000
#define GL_MAT_SHININESS_BIT_PGI 0x02000000
#define GL_MAT_SPECULAR_BIT_PGI 0x04000000
#define GL_NORMAL_BIT_PGI 0x08000000
#define GL_TEXCOORD1_BIT_PGI 0x10000000
#define GL_TEXCOORD2_BIT_PGI 0x20000000
#define GL_TEXCOORD3_BIT_PGI 0x40000000
#define GL_TEXCOORD4_BIT_PGI 0x80000000
#define GL_COLOR_BUFFER_BIT0_QCOM 0x00000001
#define GL_COLOR_BUFFER_BIT1_QCOM 0x00000002
#define GL_COLOR_BUFFER_BIT2_QCOM 0x00000004
#define GL_COLOR_BUFFER_BIT3_QCOM 0x00000008
#define GL_COLOR_BUFFER_BIT4_QCOM 0x00000010
#define GL_COLOR_BUFFER_BIT5_QCOM 0x00000020
#define GL_COLOR_BUFFER_BIT6_QCOM 0x00000040
#define GL_COLOR_BUFFER_BIT7_QCOM 0x00000080
#define GL_DEPTH_BUFFER_BIT0_QCOM 0x00000100
#define GL_DEPTH_BUFFER_BIT1_QCOM 0x00000200
#define GL_DEPTH_BUFFER_BIT2_QCOM 0x00000400
#define GL_DEPTH_BUFFER_BIT3_QCOM 0x00000800
#define GL_DEPTH_BUFFER_BIT4_QCOM 0x00001000
#define GL_DEPTH_BUFFER_BIT5_QCOM 0x00002000
#define GL_DEPTH_BUFFER_BIT6_QCOM 0x00004000
#define GL_DEPTH_BUFFER_BIT7_QCOM 0x00008000
#define GL_STENCIL_BUFFER_BIT0_QCOM 0x00010000
#define GL_STENCIL_BUFFER_BIT1_QCOM 0x00020000
#define GL_STENCIL_BUFFER_BIT2_QCOM 0x00040000
#define GL_STENCIL_BUFFER_BIT3_QCOM 0x00080000
#define GL_STENCIL_BUFFER_BIT4_QCOM 0x00100000
#define GL_STENCIL_BUFFER_BIT5_QCOM 0x00200000
#define GL_STENCIL_BUFFER_BIT6_QCOM 0x00400000
#define GL_STENCIL_BUFFER_BIT7_QCOM 0x00800000
#define GL_MULTISAMPLE_BUFFER_BIT0_QCOM 0x01000000
#define GL_MULTISAMPLE_BUFFER_BIT1_QCOM 0x02000000
#define GL_MULTISAMPLE_BUFFER_BIT2_QCOM 0x04000000
#define GL_MULTISAMPLE_BUFFER_BIT3_QCOM 0x08000000
#define GL_MULTISAMPLE_BUFFER_BIT4_QCOM 0x10000000
#define GL_MULTISAMPLE_BUFFER_BIT5_QCOM 0x20000000
#define GL_MULTISAMPLE_BUFFER_BIT6_QCOM 0x40000000
#define GL_MULTISAMPLE_BUFFER_BIT7_QCOM 0x80000000
#define GL_FOVEATION_ENABLE_BIT_QCOM 0x00000001
#define GL_FOVEATION_SCALED_BIN_METHOD_BIT_QCOM 0x00000002
#define GL_FOVEATION_SUBSAMPLED_LAYOUT_METHOD_BIT_QCOM 0x00000004
#define GL_TEXTURE_DEFORMATION_BIT_SGIX 0x00000001
#define GL_GEOMETRY_DEFORMATION_BIT_SGIX 0x00000002
#define GL_TERMINATE_SEQUENCE_COMMAND_NV 0x0000
#define GL_NOP_COMMAND_NV 0x0001
#define GL_DRAW_ELEMENTS_COMMAND_NV 0x0002
#define GL_DRAW_ARRAYS_COMMAND_NV 0x0003
#define GL_DRAW_ELEMENTS_STRIP_COMMAND_NV 0x0004
#define GL_DRAW_ARRAYS_STRIP_COMMAND_NV 0x0005
#define GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV 0x0006
#define GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV 0x0007
#define GL_ELEMENT_ADDRESS_COMMAND_NV 0x0008
#define GL_ATTRIBUTE_ADDRESS_COMMAND_NV 0x0009
#define GL_UNIFORM_ADDRESS_COMMAND_NV 0x000A
#define GL_BLEND_COLOR_COMMAND_NV 0x000B
#define GL_STENCIL_REF_COMMAND_NV 0x000C
#define GL_LINE_WIDTH_COMMAND_NV 0x000D
#define GL_POLYGON_OFFSET_COMMAND_NV 0x000E
#define GL_ALPHA_REF_COMMAND_NV 0x000F
#define GL_VIEWPORT_COMMAND_NV 0x0010
#define GL_SCISSOR_COMMAND_NV 0x0011
#define GL_FRONT_FACE_COMMAND_NV 0x0012
#define GL_LAYOUT_DEFAULT_INTEL 0
#define GL_LAYOUT_LINEAR_INTEL 1
#define GL_LAYOUT_LINEAR_CPU_CACHED_INTEL 2
#define GL_CLOSE_PATH_NV 0x00
#define GL_MOVE_TO_NV 0x02
#define GL_RELATIVE_MOVE_TO_NV 0x03
#define GL_LINE_TO_NV 0x04
#define GL_RELATIVE_LINE_TO_NV 0x05
#define GL_HORIZONTAL_LINE_TO_NV 0x06
#define GL_RELATIVE_HORIZONTAL_LINE_TO_NV 0x07
#define GL_VERTICAL_LINE_TO_NV 0x08
#define GL_RELATIVE_VERTICAL_LINE_TO_NV 0x09
#define GL_QUADRATIC_CURVE_TO_NV 0x0A
#define GL_RELATIVE_QUADRATIC_CURVE_TO_NV 0x0B
#define GL_CUBIC_CURVE_TO_NV 0x0C
#define GL_RELATIVE_CUBIC_CURVE_TO_NV 0x0D
#define GL_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0E
#define GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV 0x0F
#define GL_SMOOTH_CUBIC_CURVE_TO_NV 0x10
#define GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV 0x11
#define GL_SMALL_CCW_ARC_TO_NV 0x12
#define GL_RELATIVE_SMALL_CCW_ARC_TO_NV 0x13
#define GL_SMALL_CW_ARC_TO_NV 0x14
#define GL_RELATIVE_SMALL_CW_ARC_TO_NV 0x15
#define GL_LARGE_CCW_ARC_TO_NV 0x16
#define GL_RELATIVE_LARGE_CCW_ARC_TO_NV 0x17
#define GL_LARGE_CW_ARC_TO_NV 0x18
#define GL_RELATIVE_LARGE_CW_ARC_TO_NV 0x19
#define GL_CONIC_CURVE_TO_NV 0x1A
#define GL_RELATIVE_CONIC_CURVE_TO_NV 0x1B
#define GL_SHARED_EDGE_NV 0xC0
#define GL_ROUNDED_RECT_NV 0xE8
#define GL_RELATIVE_ROUNDED_RECT_NV 0xE9
#define GL_ROUNDED_RECT2_NV 0xEA
#define GL_RELATIVE_ROUNDED_RECT2_NV 0xEB
#define GL_ROUNDED_RECT4_NV 0xEC
#define GL_RELATIVE_ROUNDED_RECT4_NV 0xED
#define GL_ROUNDED_RECT8_NV 0xEE
#define GL_RELATIVE_ROUNDED_RECT8_NV 0xEF
#define GL_RESTART_PATH_NV 0xF0
#define GL_DUP_FIRST_CUBIC_CURVE_TO_NV 0xF2
#define GL_DUP_LAST_CUBIC_CURVE_TO_NV 0xF4
#define GL_RECT_NV 0xF6
#define GL_RELATIVE_RECT_NV 0xF7
#define GL_CIRCULAR_CCW_ARC_TO_NV 0xF8
#define GL_CIRCULAR_CW_ARC_TO_NV 0xFA
#define GL_CIRCULAR_TANGENT_ARC_TO_NV 0xFC
#define GL_ARC_TO_NV 0xFE
#define GL_RELATIVE_ARC_TO_NV 0xFF
#define GL_NEXT_BUFFER_NV -2
#define GL_SKIP_COMPONENTS4_NV -3
#define GL_SKIP_COMPONENTS3_NV -4
#define GL_SKIP_COMPONENTS2_NV -5
#define GL_SKIP_COMPONENTS1_NV -6
#define GL_RESTART_SUN 0x0001
#define GL_REPLACE_MIDDLE_SUN 0x0002
#define GL_REPLACE_OLDEST_SUN 0x0003
#define GL_FALSE 0
#define GL_NO_ERROR 0
#define GL_ZERO 0
#define GL_NONE 0
#define GL_NONE_OES 0
#define GL_TRUE 1
#define GL_ONE 1
#define GL_INVALID_INDEX 0xFFFFFFFFU
#define GL_ALL_PIXELS_AMD 0xFFFFFFFF
#define GL_TIMEOUT_IGNORED 0xFFFFFFFFFFFFFFFFULL
#define GL_TIMEOUT_IGNORED_APPLE 0xFFFFFFFFFFFFFFFFULL
#define GL_VERSION_ES_CL_1_0 1
#define GL_VERSION_ES_CM_1_1 1
#define GL_VERSION_ES_CL_1_1 1
#define GL_UUID_SIZE_EXT 16
#define GL_LUID_SIZE_EXT 8
#define GL_POINTS 0x0000
#define GL_LINES 0x0001
#define GL_LINE_LOOP 0x0002
#define GL_LINE_STRIP 0x0003
#define GL_TRIANGLES 0x0004
#define GL_TRIANGLE_STRIP 0x0005
#define GL_TRIANGLE_FAN 0x0006
#define GL_QUADS 0x0007
#define GL_QUADS_EXT 0x0007
#define GL_QUADS_OES 0x0007
#define GL_QUAD_STRIP 0x0008
#define GL_POLYGON 0x0009
#define GL_LINES_ADJACENCY 0x000A
#define GL_LINES_ADJACENCY_ARB 0x000A
#define GL_LINES_ADJACENCY_EXT 0x000A
#define GL_LINES_ADJACENCY_OES 0x000A
#define GL_LINE_STRIP_ADJACENCY 0x000B
#define GL_LINE_STRIP_ADJACENCY_ARB 0x000B
#define GL_LINE_STRIP_ADJACENCY_EXT 0x000B
#define GL_LINE_STRIP_ADJACENCY_OES 0x000B
#define GL_TRIANGLES_ADJACENCY 0x000C
#define GL_TRIANGLES_ADJACENCY_ARB 0x000C
#define GL_TRIANGLES_ADJACENCY_EXT 0x000C
#define GL_TRIANGLES_ADJACENCY_OES 0x000C
#define GL_TRIANGLE_STRIP_ADJACENCY 0x000D
#define GL_TRIANGLE_STRIP_ADJACENCY_ARB 0x000D
#define GL_TRIANGLE_STRIP_ADJACENCY_EXT 0x000D
#define GL_TRIANGLE_STRIP_ADJACENCY_OES 0x000D
#define GL_PATCHES 0x000E
#define GL_PATCHES_EXT 0x000E
#define GL_PATCHES_OES 0x000E
#define GL_ACCUM 0x0100
#define GL_LOAD 0x0101
#define GL_RETURN 0x0102
#define GL_MULT 0x0103
#define GL_ADD 0x0104
#define GL_NEVER 0x0200
#define GL_LESS 0x0201
#define GL_EQUAL 0x0202
#define GL_LEQUAL 0x0203
#define GL_GREATER 0x0204
#define GL_NOTEQUAL 0x0205
#define GL_GEQUAL 0x0206
#define GL_ALWAYS 0x0207
#define GL_SRC_COLOR 0x0300
#define GL_ONE_MINUS_SRC_COLOR 0x0301
#define GL_SRC_ALPHA 0x0302
#define GL_ONE_MINUS_SRC_ALPHA 0x0303
#define GL_DST_ALPHA 0x0304
#define GL_ONE_MINUS_DST_ALPHA 0x0305
#define GL_DST_COLOR 0x0306
#define GL_ONE_MINUS_DST_COLOR 0x0307
#define GL_SRC_ALPHA_SATURATE 0x0308
#define GL_SRC_ALPHA_SATURATE_EXT 0x0308
#define GL_FRONT_LEFT 0x0400
#define GL_FRONT_RIGHT 0x0401
#define GL_BACK_LEFT 0x0402
#define GL_BACK_RIGHT 0x0403
#define GL_FRONT 0x0404
#define GL_BACK 0x0405
#define GL_LEFT 0x0406
#define GL_RIGHT 0x0407
#define GL_FRONT_AND_BACK 0x0408
#define GL_AUX0 0x0409
#define GL_AUX1 0x040A
#define GL_AUX2 0x040B
#define GL_AUX3 0x040C
#define GL_INVALID_ENUM 0x0500
#define GL_INVALID_VALUE 0x0501
#define GL_INVALID_OPERATION 0x0502
#define GL_STACK_OVERFLOW 0x0503
#define GL_STACK_OVERFLOW_KHR 0x0503
#define GL_STACK_UNDERFLOW 0x0504
#define GL_STACK_UNDERFLOW_KHR 0x0504
#define GL_OUT_OF_MEMORY 0x0505
#define GL_INVALID_FRAMEBUFFER_OPERATION 0x0506
#define GL_INVALID_FRAMEBUFFER_OPERATION_EXT 0x0506
#define GL_INVALID_FRAMEBUFFER_OPERATION_OES 0x0506
#define GL_CONTEXT_LOST 0x0507
#define GL_CONTEXT_LOST_KHR 0x0507
#define GL_2D 0x0600
#define GL_3D 0x0601
#define GL_3D_COLOR 0x0602
#define GL_3D_COLOR_TEXTURE 0x0603
#define GL_4D_COLOR_TEXTURE 0x0604
#define GL_PASS_THROUGH_TOKEN 0x0700
#define GL_POINT_TOKEN 0x0701
#define GL_LINE_TOKEN 0x0702
#define GL_POLYGON_TOKEN 0x0703
#define GL_BITMAP_TOKEN 0x0704
#define GL_DRAW_PIXEL_TOKEN 0x0705
#define GL_COPY_PIXEL_TOKEN 0x0706
#define GL_LINE_RESET_TOKEN 0x0707
#define GL_EXP 0x0800
#define GL_EXP2 0x0801
#define GL_CW 0x0900
#define GL_CCW 0x0901
#define GL_COEFF 0x0A00
#define GL_ORDER 0x0A01
#define GL_DOMAIN 0x0A02
#define GL_CURRENT_COLOR 0x0B00
#define GL_CURRENT_INDEX 0x0B01
#define GL_CURRENT_NORMAL 0x0B02
#define GL_CURRENT_TEXTURE_COORDS 0x0B03
#define GL_CURRENT_RASTER_COLOR 0x0B04
#define GL_CURRENT_RASTER_INDEX 0x0B05
#define GL_CURRENT_RASTER_TEXTURE_COORDS 0x0B06
#define GL_CURRENT_RASTER_POSITION 0x0B07
#define GL_CURRENT_RASTER_POSITION_VALID 0x0B08
#define GL_CURRENT_RASTER_DISTANCE 0x0B09
#define GL_POINT_SMOOTH 0x0B10
#define GL_POINT_SIZE 0x0B11
#define GL_POINT_SIZE_RANGE 0x0B12
#define GL_SMOOTH_POINT_SIZE_RANGE 0x0B12
#define GL_POINT_SIZE_GRANULARITY 0x0B13
#define GL_SMOOTH_POINT_SIZE_GRANULARITY 0x0B13
#define GL_LINE_SMOOTH 0x0B20
#define GL_LINE_WIDTH 0x0B21
#define GL_LINE_WIDTH_RANGE 0x0B22
#define GL_SMOOTH_LINE_WIDTH_RANGE 0x0B22
#define GL_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_SMOOTH_LINE_WIDTH_GRANULARITY 0x0B23
#define GL_LINE_STIPPLE 0x0B24
#define GL_LINE_STIPPLE_PATTERN 0x0B25
#define GL_LINE_STIPPLE_REPEAT 0x0B26
#define GL_LIST_MODE 0x0B30
#define GL_MAX_LIST_NESTING 0x0B31
#define GL_LIST_BASE 0x0B32
#define GL_LIST_INDEX 0x0B33
#define GL_POLYGON_MODE 0x0B40
#define GL_POLYGON_MODE_NV 0x0B40
#define GL_POLYGON_SMOOTH 0x0B41
#define GL_POLYGON_STIPPLE 0x0B42
#define GL_EDGE_FLAG 0x0B43
#define GL_CULL_FACE 0x0B44
#define GL_CULL_FACE_MODE 0x0B45
#define GL_FRONT_FACE 0x0B46
#define GL_LIGHTING 0x0B50
#define GL_LIGHT_MODEL_LOCAL_VIEWER 0x0B51
#define GL_LIGHT_MODEL_TWO_SIDE 0x0B52
#define GL_LIGHT_MODEL_AMBIENT 0x0B53
#define GL_SHADE_MODEL 0x0B54
#define GL_COLOR_MATERIAL_FACE 0x0B55
#define GL_COLOR_MATERIAL_PARAMETER 0x0B56
#define GL_COLOR_MATERIAL 0x0B57
#define GL_FOG 0x0B60
#define GL_FOG_INDEX 0x0B61
#define GL_FOG_DENSITY 0x0B62
#define GL_FOG_START 0x0B63
#define GL_FOG_END 0x0B64
#define GL_FOG_MODE 0x0B65
#define GL_FOG_COLOR 0x0B66
#define GL_DEPTH_RANGE 0x0B70
#define GL_DEPTH_TEST 0x0B71
#define GL_DEPTH_WRITEMASK 0x0B72
#define GL_DEPTH_CLEAR_VALUE 0x0B73
#define GL_DEPTH_FUNC 0x0B74
#define GL_ACCUM_CLEAR_VALUE 0x0B80
#define GL_STENCIL_TEST 0x0B90
#define GL_STENCIL_CLEAR_VALUE 0x0B91
#define GL_STENCIL_FUNC 0x0B92
#define GL_STENCIL_VALUE_MASK 0x0B93
#define GL_STENCIL_FAIL 0x0B94
#define GL_STENCIL_PASS_DEPTH_FAIL 0x0B95
#define GL_STENCIL_PASS_DEPTH_PASS 0x0B96
#define GL_STENCIL_REF 0x0B97
#define GL_STENCIL_WRITEMASK 0x0B98
#define GL_MATRIX_MODE 0x0BA0
#define GL_NORMALIZE 0x0BA1
#define GL_VIEWPORT 0x0BA2
#define GL_MODELVIEW_STACK_DEPTH 0x0BA3
#define GL_MODELVIEW0_STACK_DEPTH_EXT 0x0BA3
#define GL_PATH_MODELVIEW_STACK_DEPTH_NV 0x0BA3
#define GL_PROJECTION_STACK_DEPTH 0x0BA4
#define GL_PATH_PROJECTION_STACK_DEPTH_NV 0x0BA4
#define GL_TEXTURE_STACK_DEPTH 0x0BA5
#define GL_MODELVIEW_MATRIX 0x0BA6
#define GL_MODELVIEW0_MATRIX_EXT 0x0BA6
#define GL_PATH_MODELVIEW_MATRIX_NV 0x0BA6
#define GL_PROJECTION_MATRIX 0x0BA7
#define GL_PATH_PROJECTION_MATRIX_NV 0x0BA7
#define GL_TEXTURE_MATRIX 0x0BA8
#define GL_ATTRIB_STACK_DEPTH 0x0BB0
#define GL_CLIENT_ATTRIB_STACK_DEPTH 0x0BB1
#define GL_ALPHA_TEST 0x0BC0
#define GL_ALPHA_TEST_QCOM 0x0BC0
#define GL_ALPHA_TEST_FUNC 0x0BC1
#define GL_ALPHA_TEST_FUNC_QCOM 0x0BC1
#define GL_ALPHA_TEST_REF 0x0BC2
#define GL_ALPHA_TEST_REF_QCOM 0x0BC2
#define GL_DITHER 0x0BD0
#define GL_BLEND_DST 0x0BE0
#define GL_BLEND_SRC 0x0BE1
#define GL_BLEND 0x0BE2
#define GL_LOGIC_OP_MODE 0x0BF0
#define GL_INDEX_LOGIC_OP 0x0BF1
#define GL_LOGIC_OP 0x0BF1
#define GL_COLOR_LOGIC_OP 0x0BF2
#define GL_AUX_BUFFERS 0x0C00
#define GL_DRAW_BUFFER 0x0C01
#define GL_DRAW_BUFFER_EXT 0x0C01
#define GL_READ_BUFFER 0x0C02
#define GL_READ_BUFFER_EXT 0x0C02
#define GL_READ_BUFFER_NV 0x0C02
#define GL_SCISSOR_BOX 0x0C10
#define GL_SCISSOR_TEST 0x0C11
#define GL_INDEX_CLEAR_VALUE 0x0C20
#define GL_INDEX_WRITEMASK 0x0C21
#define GL_COLOR_CLEAR_VALUE 0x0C22
#define GL_COLOR_WRITEMASK 0x0C23
#define GL_INDEX_MODE 0x0C30
#define GL_RGBA_MODE 0x0C31
#define GL_DOUBLEBUFFER 0x0C32
#define GL_STEREO 0x0C33
#define GL_RENDER_MODE 0x0C40
#define GL_PERSPECTIVE_CORRECTION_HINT 0x0C50
#define GL_POINT_SMOOTH_HINT 0x0C51
#define GL_LINE_SMOOTH_HINT 0x0C52
#define GL_POLYGON_SMOOTH_HINT 0x0C53
#define GL_FOG_HINT 0x0C54
#define GL_TEXTURE_GEN_S 0x0C60
#define GL_TEXTURE_GEN_T 0x0C61
#define GL_TEXTURE_GEN_R 0x0C62
#define GL_TEXTURE_GEN_Q 0x0C63
#define GL_PIXEL_MAP_I_TO_I 0x0C70
#define GL_PIXEL_MAP_S_TO_S 0x0C71
#define GL_PIXEL_MAP_I_TO_R 0x0C72
#define GL_PIXEL_MAP_I_TO_G 0x0C73
#define GL_PIXEL_MAP_I_TO_B 0x0C74
#define GL_PIXEL_MAP_I_TO_A 0x0C75
#define GL_PIXEL_MAP_R_TO_R 0x0C76
#define GL_PIXEL_MAP_G_TO_G 0x0C77
#define GL_PIXEL_MAP_B_TO_B 0x0C78
#define GL_PIXEL_MAP_A_TO_A 0x0C79
#define GL_PIXEL_MAP_I_TO_I_SIZE 0x0CB0
#define GL_PIXEL_MAP_S_TO_S_SIZE 0x0CB1
#define GL_PIXEL_MAP_I_TO_R_SIZE 0x0CB2
#define GL_PIXEL_MAP_I_TO_G_SIZE 0x0CB3
#define GL_PIXEL_MAP_I_TO_B_SIZE 0x0CB4
#define GL_PIXEL_MAP_I_TO_A_SIZE 0x0CB5
#define GL_PIXEL_MAP_R_TO_R_SIZE 0x0CB6
#define GL_PIXEL_MAP_G_TO_G_SIZE 0x0CB7
#define GL_PIXEL_MAP_B_TO_B_SIZE 0x0CB8
#define GL_PIXEL_MAP_A_TO_A_SIZE 0x0CB9
#define GL_UNPACK_SWAP_BYTES 0x0CF0
#define GL_UNPACK_LSB_FIRST 0x0CF1
#define GL_UNPACK_ROW_LENGTH 0x0CF2
#define GL_UNPACK_ROW_LENGTH_EXT 0x0CF2
#define GL_UNPACK_SKIP_ROWS 0x0CF3
#define GL_UNPACK_SKIP_ROWS_EXT 0x0CF3
#define GL_UNPACK_SKIP_PIXELS 0x0CF4
#define GL_UNPACK_SKIP_PIXELS_EXT 0x0CF4
#define GL_UNPACK_ALIGNMENT 0x0CF5
#define GL_PACK_SWAP_BYTES 0x0D00
#define GL_PACK_LSB_FIRST 0x0D01
#define GL_PACK_ROW_LENGTH 0x0D02
#define GL_PACK_ROW_LENGTH_NV 0x0D02
#define GL_PACK_SKIP_ROWS 0x0D03
#define GL_PACK_SKIP_ROWS_NV 0x0D03
#define GL_PACK_SKIP_PIXELS 0x0D04
#define GL_PACK_SKIP_PIXELS_NV 0x0D04
#define GL_PACK_ALIGNMENT 0x0D05
#define GL_MAP_COLOR 0x0D10
#define GL_MAP_STENCIL 0x0D11
#define GL_INDEX_SHIFT 0x0D12
#define GL_INDEX_OFFSET 0x0D13
#define GL_RED_SCALE 0x0D14
#define GL_RED_BIAS 0x0D15
#define GL_ZOOM_X 0x0D16
#define GL_ZOOM_Y 0x0D17
#define GL_GREEN_SCALE 0x0D18
#define GL_GREEN_BIAS 0x0D19
#define GL_BLUE_SCALE 0x0D1A
#define GL_BLUE_BIAS 0x0D1B
#define GL_ALPHA_SCALE 0x0D1C
#define GL_ALPHA_BIAS 0x0D1D
#define GL_DEPTH_SCALE 0x0D1E
#define GL_DEPTH_BIAS 0x0D1F
#define GL_MAX_EVAL_ORDER 0x0D30
#define GL_MAX_LIGHTS 0x0D31
#define GL_MAX_CLIP_PLANES 0x0D32
#define GL_MAX_CLIP_PLANES_IMG 0x0D32
#define GL_MAX_CLIP_DISTANCES 0x0D32
#define GL_MAX_CLIP_DISTANCES_EXT 0x0D32
#define GL_MAX_CLIP_DISTANCES_APPLE 0x0D32
#define GL_MAX_TEXTURE_SIZE 0x0D33
#define GL_MAX_PIXEL_MAP_TABLE 0x0D34
#define GL_MAX_ATTRIB_STACK_DEPTH 0x0D35
#define GL_MAX_MODELVIEW_STACK_DEPTH 0x0D36
#define GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV 0x0D36
#define GL_MAX_NAME_STACK_DEPTH 0x0D37
#define GL_MAX_PROJECTION_STACK_DEPTH 0x0D38
#define GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV 0x0D38
#define GL_MAX_TEXTURE_STACK_DEPTH 0x0D39
#define GL_MAX_VIEWPORT_DIMS 0x0D3A
#define GL_MAX_CLIENT_ATTRIB_STACK_DEPTH 0x0D3B
#define GL_SUBPIXEL_BITS 0x0D50
#define GL_INDEX_BITS 0x0D51
#define GL_RED_BITS 0x0D52
#define GL_GREEN_BITS 0x0D53
#define GL_BLUE_BITS 0x0D54
#define GL_ALPHA_BITS 0x0D55
#define GL_DEPTH_BITS 0x0D56
#define GL_STENCIL_BITS 0x0D57
#define GL_ACCUM_RED_BITS 0x0D58
#define GL_ACCUM_GREEN_BITS 0x0D59
#define GL_ACCUM_BLUE_BITS 0x0D5A
#define GL_ACCUM_ALPHA_BITS 0x0D5B
#define GL_NAME_STACK_DEPTH 0x0D70
#define GL_AUTO_NORMAL 0x0D80
#define GL_MAP1_COLOR_4 0x0D90
#define GL_MAP1_INDEX 0x0D91
#define GL_MAP1_NORMAL 0x0D92
#define GL_MAP1_TEXTURE_COORD_1 0x0D93
#define GL_MAP1_TEXTURE_COORD_2 0x0D94
#define GL_MAP1_TEXTURE_COORD_3 0x0D95
#define GL_MAP1_TEXTURE_COORD_4 0x0D96
#define GL_MAP1_VERTEX_3 0x0D97
#define GL_MAP1_VERTEX_4 0x0D98
#define GL_MAP2_COLOR_4 0x0DB0
#define GL_MAP2_INDEX 0x0DB1
#define GL_MAP2_NORMAL 0x0DB2
#define GL_MAP2_TEXTURE_COORD_1 0x0DB3
#define GL_MAP2_TEXTURE_COORD_2 0x0DB4
#define GL_MAP2_TEXTURE_COORD_3 0x0DB5
#define GL_MAP2_TEXTURE_COORD_4 0x0DB6
#define GL_MAP2_VERTEX_3 0x0DB7
#define GL_MAP2_VERTEX_4 0x0DB8
#define GL_MAP1_GRID_DOMAIN 0x0DD0
#define GL_MAP1_GRID_SEGMENTS 0x0DD1
#define GL_MAP2_GRID_DOMAIN 0x0DD2
#define GL_MAP2_GRID_SEGMENTS 0x0DD3
#define GL_TEXTURE_1D 0x0DE0
#define GL_TEXTURE_2D 0x0DE1
#define GL_FEEDBACK_BUFFER_POINTER 0x0DF0
#define GL_FEEDBACK_BUFFER_SIZE 0x0DF1
#define GL_FEEDBACK_BUFFER_TYPE 0x0DF2
#define GL_SELECTION_BUFFER_POINTER 0x0DF3
#define GL_SELECTION_BUFFER_SIZE 0x0DF4
#define GL_TEXTURE_WIDTH 0x1000
#define GL_TEXTURE_HEIGHT 0x1001
#define GL_TEXTURE_INTERNAL_FORMAT 0x1003
#define GL_TEXTURE_COMPONENTS 0x1003
#define GL_TEXTURE_BORDER_COLOR 0x1004
#define GL_TEXTURE_BORDER_COLOR_EXT 0x1004
#define GL_TEXTURE_BORDER_COLOR_NV 0x1004
#define GL_TEXTURE_BORDER_COLOR_OES 0x1004
#define GL_TEXTURE_BORDER 0x1005
#define GL_TEXTURE_TARGET 0x1006
#define GL_DONT_CARE 0x1100
#define GL_FASTEST 0x1101
#define GL_NICEST 0x1102
#define GL_AMBIENT 0x1200
#define GL_DIFFUSE 0x1201
#define GL_SPECULAR 0x1202
#define GL_POSITION 0x1203
#define GL_SPOT_DIRECTION 0x1204
#define GL_SPOT_EXPONENT 0x1205
#define GL_SPOT_CUTOFF 0x1206
#define GL_CONSTANT_ATTENUATION 0x1207
#define GL_LINEAR_ATTENUATION 0x1208
#define GL_QUADRATIC_ATTENUATION 0x1209
#define GL_COMPILE 0x1300
#define GL_COMPILE_AND_EXECUTE 0x1301
#define GL_BYTE 0x1400
#define GL_UNSIGNED_BYTE 0x1401
#define GL_SHORT 0x1402
#define GL_UNSIGNED_SHORT 0x1403
#define GL_INT 0x1404
#define GL_UNSIGNED_INT 0x1405
#define GL_FLOAT 0x1406
#define GL_2_BYTES 0x1407
#define GL_2_BYTES_NV 0x1407
#define GL_3_BYTES 0x1408
#define GL_3_BYTES_NV 0x1408
#define GL_4_BYTES 0x1409
#define GL_4_BYTES_NV 0x1409
#define GL_DOUBLE 0x140A
#define GL_DOUBLE_EXT 0x140A
#define GL_HALF_FLOAT 0x140B
#define GL_HALF_FLOAT_ARB 0x140B
#define GL_HALF_FLOAT_NV 0x140B
#define GL_HALF_APPLE 0x140B
#define GL_FIXED 0x140C
#define GL_FIXED_OES 0x140C
#define GL_INT64_ARB 0x140E
#define GL_INT64_NV 0x140E
#define GL_UNSIGNED_INT64_ARB 0x140F
#define GL_UNSIGNED_INT64_NV 0x140F
#define GL_CLEAR 0x1500
#define GL_AND 0x1501
#define GL_AND_REVERSE 0x1502
#define GL_COPY 0x1503
#define GL_AND_INVERTED 0x1504
#define GL_NOOP 0x1505
#define GL_XOR 0x1506
#define GL_XOR_NV 0x1506
#define GL_OR 0x1507
#define GL_NOR 0x1508
#define GL_EQUIV 0x1509
#define GL_INVERT 0x150A
#define GL_OR_REVERSE 0x150B
#define GL_COPY_INVERTED 0x150C
#define GL_OR_INVERTED 0x150D
#define GL_NAND 0x150E
#define GL_SET 0x150F
#define GL_EMISSION 0x1600
#define GL_SHININESS 0x1601
#define GL_AMBIENT_AND_DIFFUSE 0x1602
#define GL_COLOR_INDEXES 0x1603
#define GL_MODELVIEW 0x1700
#define GL_MODELVIEW0_ARB 0x1700
#define GL_MODELVIEW0_EXT 0x1700
#define GL_PATH_MODELVIEW_NV 0x1700
#define GL_PROJECTION 0x1701
#define GL_PATH_PROJECTION_NV 0x1701
#define GL_TEXTURE 0x1702
#define GL_COLOR 0x1800
#define GL_COLOR_EXT 0x1800
#define GL_DEPTH 0x1801
#define GL_DEPTH_EXT 0x1801
#define GL_STENCIL 0x1802
#define GL_STENCIL_EXT 0x1802
#define GL_COLOR_INDEX 0x1900
#define GL_STENCIL_INDEX 0x1901
#define GL_STENCIL_INDEX_OES 0x1901
#define GL_DEPTH_COMPONENT 0x1902
#define GL_RED 0x1903
#define GL_RED_EXT 0x1903
#define GL_RED_NV 0x1903
#define GL_GREEN 0x1904
#define GL_GREEN_NV 0x1904
#define GL_BLUE 0x1905
#define GL_BLUE_NV 0x1905
#define GL_ALPHA 0x1906
#define GL_RGB 0x1907
#define GL_RGBA 0x1908
#define GL_LUMINANCE 0x1909
#define GL_LUMINANCE_ALPHA 0x190A
#define GL_BITMAP 0x1A00
#define GL_POINT 0x1B00
#define GL_POINT_NV 0x1B00
#define GL_LINE 0x1B01
#define GL_LINE_NV 0x1B01
#define GL_FILL 0x1B02
#define GL_FILL_NV 0x1B02
#define GL_RENDER 0x1C00
#define GL_FEEDBACK 0x1C01
#define GL_SELECT 0x1C02
#define GL_FLAT 0x1D00
#define GL_SMOOTH 0x1D01
#define GL_KEEP 0x1E00
#define GL_REPLACE 0x1E01
#define GL_INCR 0x1E02
#define GL_DECR 0x1E03
#define GL_VENDOR 0x1F00
#define GL_RENDERER 0x1F01
#define GL_VERSION 0x1F02
#define GL_EXTENSIONS 0x1F03
#define GL_S 0x2000
#define GL_T 0x2001
#define GL_R 0x2002
#define GL_Q 0x2003
#define GL_MODULATE 0x2100
#define GL_DECAL 0x2101
#define GL_TEXTURE_ENV_MODE 0x2200
#define GL_TEXTURE_ENV_COLOR 0x2201
#define GL_TEXTURE_ENV 0x2300
#define GL_EYE_LINEAR 0x2400
#define GL_EYE_LINEAR_NV 0x2400
#define GL_OBJECT_LINEAR 0x2401
#define GL_OBJECT_LINEAR_NV 0x2401
#define GL_SPHERE_MAP 0x2402
#define GL_TEXTURE_GEN_MODE 0x2500
#define GL_TEXTURE_GEN_MODE_OES 0x2500
#define GL_OBJECT_PLANE 0x2501
#define GL_EYE_PLANE 0x2502
#define GL_NEAREST 0x2600
#define GL_LINEAR 0x2601
#define GL_NEAREST_MIPMAP_NEAREST 0x2700
#define GL_LINEAR_MIPMAP_NEAREST 0x2701
#define GL_NEAREST_MIPMAP_LINEAR 0x2702
#define GL_LINEAR_MIPMAP_LINEAR 0x2703
#define GL_TEXTURE_MAG_FILTER 0x2800
#define GL_TEXTURE_MIN_FILTER 0x2801
#define GL_TEXTURE_WRAP_S 0x2802
#define GL_TEXTURE_WRAP_T 0x2803
#define GL_CLAMP 0x2900
#define GL_REPEAT 0x2901
#define GL_POLYGON_OFFSET_UNITS 0x2A00
#define GL_POLYGON_OFFSET_POINT 0x2A01
#define GL_POLYGON_OFFSET_POINT_NV 0x2A01
#define GL_POLYGON_OFFSET_LINE 0x2A02
#define GL_POLYGON_OFFSET_LINE_NV 0x2A02
#define GL_R3_G3_B2 0x2A10
#define GL_V2F 0x2A20
#define GL_V3F 0x2A21
#define GL_C4UB_V2F 0x2A22
#define GL_C4UB_V3F 0x2A23
#define GL_C3F_V3F 0x2A24
#define GL_N3F_V3F 0x2A25
#define GL_C4F_N3F_V3F 0x2A26
#define GL_T2F_V3F 0x2A27
#define GL_T4F_V4F 0x2A28
#define GL_T2F_C4UB_V3F 0x2A29
#define GL_T2F_C3F_V3F 0x2A2A
#define GL_T2F_N3F_V3F 0x2A2B
#define GL_T2F_C4F_N3F_V3F 0x2A2C
#define GL_T4F_C4F_N3F_V4F 0x2A2D
#define GL_CLIP_PLANE0 0x3000
#define GL_CLIP_PLANE0_IMG 0x3000
#define GL_CLIP_DISTANCE0 0x3000
#define GL_CLIP_DISTANCE0_EXT 0x3000
#define GL_CLIP_DISTANCE0_APPLE 0x3000
#define GL_CLIP_PLANE1 0x3001
#define GL_CLIP_PLANE1_IMG 0x3001
#define GL_CLIP_DISTANCE1 0x3001
#define GL_CLIP_DISTANCE1_EXT 0x3001
#define GL_CLIP_DISTANCE1_APPLE 0x3001
#define GL_CLIP_PLANE2 0x3002
#define GL_CLIP_PLANE2_IMG 0x3002
#define GL_CLIP_DISTANCE2 0x3002
#define GL_CLIP_DISTANCE2_EXT 0x3002
#define GL_CLIP_DISTANCE2_APPLE 0x3002
#define GL_CLIP_PLANE3 0x3003
#define GL_CLIP_PLANE3_IMG 0x3003
#define GL_CLIP_DISTANCE3 0x3003
#define GL_CLIP_DISTANCE3_EXT 0x3003
#define GL_CLIP_DISTANCE3_APPLE 0x3003
#define GL_CLIP_PLANE4 0x3004
#define GL_CLIP_PLANE4_IMG 0x3004
#define GL_CLIP_DISTANCE4 0x3004
#define GL_CLIP_DISTANCE4_EXT 0x3004
#define GL_CLIP_DISTANCE4_APPLE 0x3004
#define GL_CLIP_PLANE5 0x3005
#define GL_CLIP_PLANE5_IMG 0x3005
#define GL_CLIP_DISTANCE5 0x3005
#define GL_CLIP_DISTANCE5_EXT 0x3005
#define GL_CLIP_DISTANCE5_APPLE 0x3005
#define GL_CLIP_DISTANCE6 0x3006
#define GL_CLIP_DISTANCE6_EXT 0x3006
#define GL_CLIP_DISTANCE6_APPLE 0x3006
#define GL_CLIP_DISTANCE7 0x3007
#define GL_CLIP_DISTANCE7_EXT 0x3007
#define GL_CLIP_DISTANCE7_APPLE 0x3007
#define GL_LIGHT0 0x4000
#define GL_LIGHT1 0x4001
#define GL_LIGHT2 0x4002
#define GL_LIGHT3 0x4003
#define GL_LIGHT4 0x4004
#define GL_LIGHT5 0x4005
#define GL_LIGHT6 0x4006
#define GL_LIGHT7 0x4007
#define GL_ABGR_EXT 0x8000
#define GL_CONSTANT_COLOR 0x8001
#define GL_CONSTANT_COLOR_EXT 0x8001
#define GL_ONE_MINUS_CONSTANT_COLOR 0x8002
#define GL_ONE_MINUS_CONSTANT_COLOR_EXT 0x8002
#define GL_CONSTANT_ALPHA 0x8003
#define GL_CONSTANT_ALPHA_EXT 0x8003
#define GL_ONE_MINUS_CONSTANT_ALPHA 0x8004
#define GL_ONE_MINUS_CONSTANT_ALPHA_EXT 0x8004
#define GL_BLEND_COLOR 0x8005
#define GL_BLEND_COLOR_EXT 0x8005
#define GL_FUNC_ADD 0x8006
#define GL_FUNC_ADD_EXT 0x8006
#define GL_FUNC_ADD_OES 0x8006
#define GL_MIN 0x8007
#define GL_MIN_EXT 0x8007
#define GL_MAX 0x8008
#define GL_MAX_EXT 0x8008
#define GL_BLEND_EQUATION 0x8009
#define GL_BLEND_EQUATION_EXT 0x8009
#define GL_BLEND_EQUATION_OES 0x8009
#define GL_BLEND_EQUATION_RGB 0x8009
#define GL_BLEND_EQUATION_RGB_EXT 0x8009
#define GL_BLEND_EQUATION_RGB_OES 0x8009
#define GL_FUNC_SUBTRACT 0x800A
#define GL_FUNC_SUBTRACT_EXT 0x800A
#define GL_FUNC_SUBTRACT_OES 0x800A
#define GL_FUNC_REVERSE_SUBTRACT 0x800B
#define GL_FUNC_REVERSE_SUBTRACT_EXT 0x800B
#define GL_FUNC_REVERSE_SUBTRACT_OES 0x800B
#define GL_CMYK_EXT 0x800C
#define GL_CMYKA_EXT 0x800D
#define GL_PACK_CMYK_HINT_EXT 0x800E
#define GL_UNPACK_CMYK_HINT_EXT 0x800F
#define GL_CONVOLUTION_1D 0x8010
#define GL_CONVOLUTION_1D_EXT 0x8010
#define GL_CONVOLUTION_2D 0x8011
#define GL_CONVOLUTION_2D_EXT 0x8011
#define GL_SEPARABLE_2D 0x8012
#define GL_SEPARABLE_2D_EXT 0x8012
#define GL_CONVOLUTION_BORDER_MODE 0x8013
#define GL_CONVOLUTION_BORDER_MODE_EXT 0x8013
#define GL_CONVOLUTION_FILTER_SCALE 0x8014
#define GL_CONVOLUTION_FILTER_SCALE_EXT 0x8014
#define GL_CONVOLUTION_FILTER_BIAS 0x8015
#define GL_CONVOLUTION_FILTER_BIAS_EXT 0x8015
#define GL_REDUCE 0x8016
#define GL_REDUCE_EXT 0x8016
#define GL_CONVOLUTION_FORMAT 0x8017
#define GL_CONVOLUTION_FORMAT_EXT 0x8017
#define GL_CONVOLUTION_WIDTH 0x8018
#define GL_CONVOLUTION_WIDTH_EXT 0x8018
#define GL_CONVOLUTION_HEIGHT 0x8019
#define GL_CONVOLUTION_HEIGHT_EXT 0x8019
#define GL_MAX_CONVOLUTION_WIDTH 0x801A
#define GL_MAX_CONVOLUTION_WIDTH_EXT 0x801A
#define GL_MAX_CONVOLUTION_HEIGHT 0x801B
#define GL_MAX_CONVOLUTION_HEIGHT_EXT 0x801B
#define GL_POST_CONVOLUTION_RED_SCALE 0x801C
#define GL_POST_CONVOLUTION_RED_SCALE_EXT 0x801C
#define GL_POST_CONVOLUTION_GREEN_SCALE 0x801D
#define GL_POST_CONVOLUTION_GREEN_SCALE_EXT 0x801D
#define GL_POST_CONVOLUTION_BLUE_SCALE 0x801E
#define GL_POST_CONVOLUTION_BLUE_SCALE_EXT 0x801E
#define GL_POST_CONVOLUTION_ALPHA_SCALE 0x801F
#define GL_POST_CONVOLUTION_ALPHA_SCALE_EXT 0x801F
#define GL_POST_CONVOLUTION_RED_BIAS 0x8020
#define GL_POST_CONVOLUTION_RED_BIAS_EXT 0x8020
#define GL_POST_CONVOLUTION_GREEN_BIAS 0x8021
#define GL_POST_CONVOLUTION_GREEN_BIAS_EXT 0x8021
#define GL_POST_CONVOLUTION_BLUE_BIAS 0x8022
#define GL_POST_CONVOLUTION_BLUE_BIAS_EXT 0x8022
#define GL_POST_CONVOLUTION_ALPHA_BIAS 0x8023
#define GL_POST_CONVOLUTION_ALPHA_BIAS_EXT 0x8023
#define GL_HISTOGRAM 0x8024
#define GL_HISTOGRAM_EXT 0x8024
#define GL_PROXY_HISTOGRAM 0x8025
#define GL_PROXY_HISTOGRAM_EXT 0x8025
#define GL_HISTOGRAM_WIDTH 0x8026
#define GL_HISTOGRAM_WIDTH_EXT 0x8026
#define GL_HISTOGRAM_FORMAT 0x8027
#define GL_HISTOGRAM_FORMAT_EXT 0x8027
#define GL_HISTOGRAM_RED_SIZE 0x8028
#define GL_HISTOGRAM_RED_SIZE_EXT 0x8028
#define GL_HISTOGRAM_GREEN_SIZE 0x8029
#define GL_HISTOGRAM_GREEN_SIZE_EXT 0x8029
#define GL_HISTOGRAM_BLUE_SIZE 0x802A
#define GL_HISTOGRAM_BLUE_SIZE_EXT 0x802A
#define GL_HISTOGRAM_ALPHA_SIZE 0x802B
#define GL_HISTOGRAM_ALPHA_SIZE_EXT 0x802B
#define GL_HISTOGRAM_LUMINANCE_SIZE 0x802C
#define GL_HISTOGRAM_LUMINANCE_SIZE_EXT 0x802C
#define GL_HISTOGRAM_SINK 0x802D
#define GL_HISTOGRAM_SINK_EXT 0x802D
#define GL_MINMAX 0x802E
#define GL_MINMAX_EXT 0x802E
#define GL_MINMAX_FORMAT 0x802F
#define GL_MINMAX_FORMAT_EXT 0x802F
#define GL_MINMAX_SINK 0x8030
#define GL_MINMAX_SINK_EXT 0x8030
#define GL_TABLE_TOO_LARGE_EXT 0x8031
#define GL_TABLE_TOO_LARGE 0x8031
#define GL_UNSIGNED_BYTE_3_3_2 0x8032
#define GL_UNSIGNED_BYTE_3_3_2_EXT 0x8032
#define GL_UNSIGNED_SHORT_4_4_4_4 0x8033
#define GL_UNSIGNED_SHORT_4_4_4_4_EXT 0x8033
#define GL_UNSIGNED_SHORT_5_5_5_1 0x8034
#define GL_UNSIGNED_SHORT_5_5_5_1_EXT 0x8034
#define GL_UNSIGNED_INT_8_8_8_8 0x8035
#define GL_UNSIGNED_INT_8_8_8_8_EXT 0x8035
#define GL_UNSIGNED_INT_10_10_10_2 0x8036
#define GL_UNSIGNED_INT_10_10_10_2_EXT 0x8036
#define GL_POLYGON_OFFSET_EXT 0x8037
#define GL_POLYGON_OFFSET_FILL 0x8037
#define GL_POLYGON_OFFSET_FACTOR 0x8038
#define GL_POLYGON_OFFSET_FACTOR_EXT 0x8038
#define GL_POLYGON_OFFSET_BIAS_EXT 0x8039
#define GL_RESCALE_NORMAL 0x803A
#define GL_RESCALE_NORMAL_EXT 0x803A
#define GL_ALPHA4 0x803B
#define GL_ALPHA4_EXT 0x803B
#define GL_ALPHA8 0x803C
#define GL_ALPHA8_EXT 0x803C
#define GL_ALPHA8_OES 0x803C
#define GL_ALPHA12 0x803D
#define GL_ALPHA12_EXT 0x803D
#define GL_ALPHA16 0x803E
#define GL_ALPHA16_EXT 0x803E
#define GL_LUMINANCE4 0x803F
#define GL_LUMINANCE4_EXT 0x803F
#define GL_LUMINANCE8 0x8040
#define GL_LUMINANCE8_EXT 0x8040
#define GL_LUMINANCE8_OES 0x8040
#define GL_LUMINANCE12 0x8041
#define GL_LUMINANCE12_EXT 0x8041
#define GL_LUMINANCE16 0x8042
#define GL_LUMINANCE16_EXT 0x8042
#define GL_LUMINANCE4_ALPHA4 0x8043
#define GL_LUMINANCE4_ALPHA4_EXT 0x8043
#define GL_LUMINANCE4_ALPHA4_OES 0x8043
#define GL_LUMINANCE6_ALPHA2 0x8044
#define GL_LUMINANCE6_ALPHA2_EXT 0x8044
#define GL_LUMINANCE8_ALPHA8 0x8045
#define GL_LUMINANCE8_ALPHA8_EXT 0x8045
#define GL_LUMINANCE8_ALPHA8_OES 0x8045
#define GL_LUMINANCE12_ALPHA4 0x8046
#define GL_LUMINANCE12_ALPHA4_EXT 0x8046
#define GL_LUMINANCE12_ALPHA12 0x8047
#define GL_LUMINANCE12_ALPHA12_EXT 0x8047
#define GL_LUMINANCE16_ALPHA16 0x8048
#define GL_LUMINANCE16_ALPHA16_EXT 0x8048
#define GL_INTENSITY 0x8049
#define GL_INTENSITY_EXT 0x8049
#define GL_INTENSITY4 0x804A
#define GL_INTENSITY4_EXT 0x804A
#define GL_INTENSITY8 0x804B
#define GL_INTENSITY8_EXT 0x804B
#define GL_INTENSITY12 0x804C
#define GL_INTENSITY12_EXT 0x804C
#define GL_INTENSITY16 0x804D
#define GL_INTENSITY16_EXT 0x804D
#define GL_RGB2_EXT 0x804E
#define GL_RGB4 0x804F
#define GL_RGB4_EXT 0x804F
#define GL_RGB5 0x8050
#define GL_RGB5_EXT 0x8050
#define GL_RGB8 0x8051
#define GL_RGB8_EXT 0x8051
#define GL_RGB8_OES 0x8051
#define GL_RGB10 0x8052
#define GL_RGB10_EXT 0x8052
#define GL_RGB12 0x8053
#define GL_RGB12_EXT 0x8053
#define GL_RGB16 0x8054
#define GL_RGB16_EXT 0x8054
#define GL_RGBA2 0x8055
#define GL_RGBA2_EXT 0x8055
#define GL_RGBA4 0x8056
#define GL_RGBA4_EXT 0x8056
#define GL_RGBA4_OES 0x8056
#define GL_RGB5_A1 0x8057
#define GL_RGB5_A1_EXT 0x8057
#define GL_RGB5_A1_OES 0x8057
#define GL_RGBA8 0x8058
#define GL_RGBA8_EXT 0x8058
#define GL_RGBA8_OES 0x8058
#define GL_RGB10_A2 0x8059
#define GL_RGB10_A2_EXT 0x8059
#define GL_RGBA12 0x805A
#define GL_RGBA12_EXT 0x805A
#define GL_RGBA16 0x805B
#define GL_RGBA16_EXT 0x805B
#define GL_TEXTURE_RED_SIZE 0x805C
#define GL_TEXTURE_RED_SIZE_EXT 0x805C
#define GL_TEXTURE_GREEN_SIZE 0x805D
#define GL_TEXTURE_GREEN_SIZE_EXT 0x805D
#define GL_TEXTURE_BLUE_SIZE 0x805E
#define GL_TEXTURE_BLUE_SIZE_EXT 0x805E
#define GL_TEXTURE_ALPHA_SIZE 0x805F
#define GL_TEXTURE_ALPHA_SIZE_EXT 0x805F
#define GL_TEXTURE_LUMINANCE_SIZE 0x8060
#define GL_TEXTURE_LUMINANCE_SIZE_EXT 0x8060
#define GL_TEXTURE_INTENSITY_SIZE 0x8061
#define GL_TEXTURE_INTENSITY_SIZE_EXT 0x8061
#define GL_REPLACE_EXT 0x8062
#define GL_PROXY_TEXTURE_1D 0x8063
#define GL_PROXY_TEXTURE_1D_EXT 0x8063
#define GL_PROXY_TEXTURE_2D 0x8064
#define GL_PROXY_TEXTURE_2D_EXT 0x8064
#define GL_TEXTURE_TOO_LARGE_EXT 0x8065
#define GL_TEXTURE_PRIORITY 0x8066
#define GL_TEXTURE_PRIORITY_EXT 0x8066
#define GL_TEXTURE_RESIDENT 0x8067
#define GL_TEXTURE_RESIDENT_EXT 0x8067
#define GL_TEXTURE_1D_BINDING_EXT 0x8068
#define GL_TEXTURE_BINDING_1D 0x8068
#define GL_TEXTURE_2D_BINDING_EXT 0x8069
#define GL_TEXTURE_BINDING_2D 0x8069
#define GL_TEXTURE_3D_BINDING_EXT 0x806A
#define GL_TEXTURE_3D_BINDING_OES 0x806A
#define GL_TEXTURE_BINDING_3D 0x806A
#define GL_TEXTURE_BINDING_3D_OES 0x806A
#define GL_PACK_SKIP_IMAGES 0x806B
#define GL_PACK_SKIP_IMAGES_EXT 0x806B
#define GL_PACK_IMAGE_HEIGHT 0x806C
#define GL_PACK_IMAGE_HEIGHT_EXT 0x806C
#define GL_UNPACK_SKIP_IMAGES 0x806D
#define GL_UNPACK_SKIP_IMAGES_EXT 0x806D
#define GL_UNPACK_IMAGE_HEIGHT 0x806E
#define GL_UNPACK_IMAGE_HEIGHT_EXT 0x806E
#define GL_TEXTURE_3D 0x806F
#define GL_TEXTURE_3D_EXT 0x806F
#define GL_TEXTURE_3D_OES 0x806F
#define GL_PROXY_TEXTURE_3D 0x8070
#define GL_PROXY_TEXTURE_3D_EXT 0x8070
#define GL_TEXTURE_DEPTH 0x8071
#define GL_TEXTURE_DEPTH_EXT 0x8071
#define GL_TEXTURE_WRAP_R 0x8072
#define GL_TEXTURE_WRAP_R_EXT 0x8072
#define GL_TEXTURE_WRAP_R_OES 0x8072
#define GL_MAX_3D_TEXTURE_SIZE 0x8073
#define GL_MAX_3D_TEXTURE_SIZE_EXT 0x8073
#define GL_MAX_3D_TEXTURE_SIZE_OES 0x8073
#define GL_VERTEX_ARRAY 0x8074
#define GL_VERTEX_ARRAY_EXT 0x8074
#define GL_VERTEX_ARRAY_KHR 0x8074
#define GL_NORMAL_ARRAY 0x8075
#define GL_NORMAL_ARRAY_EXT 0x8075
#define GL_COLOR_ARRAY 0x8076
#define GL_COLOR_ARRAY_EXT 0x8076
#define GL_INDEX_ARRAY 0x8077
#define GL_INDEX_ARRAY_EXT 0x8077
#define GL_TEXTURE_COORD_ARRAY 0x8078
#define GL_TEXTURE_COORD_ARRAY_EXT 0x8078
#define GL_EDGE_FLAG_ARRAY 0x8079
#define GL_EDGE_FLAG_ARRAY_EXT 0x8079
#define GL_VERTEX_ARRAY_SIZE 0x807A
#define GL_VERTEX_ARRAY_SIZE_EXT 0x807A
#define GL_VERTEX_ARRAY_TYPE 0x807B
#define GL_VERTEX_ARRAY_TYPE_EXT 0x807B
#define GL_VERTEX_ARRAY_STRIDE 0x807C
#define GL_VERTEX_ARRAY_STRIDE_EXT 0x807C
#define GL_VERTEX_ARRAY_COUNT_EXT 0x807D
#define GL_NORMAL_ARRAY_TYPE 0x807E
#define GL_NORMAL_ARRAY_TYPE_EXT 0x807E
#define GL_NORMAL_ARRAY_STRIDE 0x807F
#define GL_NORMAL_ARRAY_STRIDE_EXT 0x807F
#define GL_NORMAL_ARRAY_COUNT_EXT 0x8080
#define GL_COLOR_ARRAY_SIZE 0x8081
#define GL_COLOR_ARRAY_SIZE_EXT 0x8081
#define GL_COLOR_ARRAY_TYPE 0x8082
#define GL_COLOR_ARRAY_TYPE_EXT 0x8082
#define GL_COLOR_ARRAY_STRIDE 0x8083
#define GL_COLOR_ARRAY_STRIDE_EXT 0x8083
#define GL_COLOR_ARRAY_COUNT_EXT 0x8084
#define GL_INDEX_ARRAY_TYPE 0x8085
#define GL_INDEX_ARRAY_TYPE_EXT 0x8085
#define GL_INDEX_ARRAY_STRIDE 0x8086
#define GL_INDEX_ARRAY_STRIDE_EXT 0x8086
#define GL_INDEX_ARRAY_COUNT_EXT 0x8087
#define GL_TEXTURE_COORD_ARRAY_SIZE 0x8088
#define GL_TEXTURE_COORD_ARRAY_SIZE_EXT 0x8088
#define GL_TEXTURE_COORD_ARRAY_TYPE 0x8089
#define GL_TEXTURE_COORD_ARRAY_TYPE_EXT 0x8089
#define GL_TEXTURE_COORD_ARRAY_STRIDE 0x808A
#define GL_TEXTURE_COORD_ARRAY_STRIDE_EXT 0x808A
#define GL_TEXTURE_COORD_ARRAY_COUNT_EXT 0x808B
#define GL_EDGE_FLAG_ARRAY_STRIDE 0x808C
#define GL_EDGE_FLAG_ARRAY_STRIDE_EXT 0x808C
#define GL_EDGE_FLAG_ARRAY_COUNT_EXT 0x808D
#define GL_VERTEX_ARRAY_POINTER 0x808E
#define GL_VERTEX_ARRAY_POINTER_EXT 0x808E
#define GL_NORMAL_ARRAY_POINTER 0x808F
#define GL_NORMAL_ARRAY_POINTER_EXT 0x808F
#define GL_COLOR_ARRAY_POINTER 0x8090
#define GL_COLOR_ARRAY_POINTER_EXT 0x8090
#define GL_INDEX_ARRAY_POINTER 0x8091
#define GL_INDEX_ARRAY_POINTER_EXT 0x8091
#define GL_TEXTURE_COORD_ARRAY_POINTER 0x8092
#define GL_TEXTURE_COORD_ARRAY_POINTER_EXT 0x8092
#define GL_EDGE_FLAG_ARRAY_POINTER 0x8093
#define GL_EDGE_FLAG_ARRAY_POINTER_EXT 0x8093
#define GL_INTERLACE_SGIX 0x8094
#define GL_DETAIL_TEXTURE_2D_SGIS 0x8095
#define GL_DETAIL_TEXTURE_2D_BINDING_SGIS 0x8096
#define GL_LINEAR_DETAIL_SGIS 0x8097
#define GL_LINEAR_DETAIL_ALPHA_SGIS 0x8098
#define GL_LINEAR_DETAIL_COLOR_SGIS 0x8099
#define GL_DETAIL_TEXTURE_LEVEL_SGIS 0x809A
#define GL_DETAIL_TEXTURE_MODE_SGIS 0x809B
#define GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS 0x809C
#define GL_MULTISAMPLE 0x809D
#define GL_MULTISAMPLE_ARB 0x809D
#define GL_MULTISAMPLE_EXT 0x809D
#define GL_MULTISAMPLE_SGIS 0x809D
#define GL_SAMPLE_ALPHA_TO_COVERAGE 0x809E
#define GL_SAMPLE_ALPHA_TO_COVERAGE_ARB 0x809E
#define GL_SAMPLE_ALPHA_TO_MASK_EXT 0x809E
#define GL_SAMPLE_ALPHA_TO_MASK_SGIS 0x809E
#define GL_SAMPLE_ALPHA_TO_ONE 0x809F
#define GL_SAMPLE_ALPHA_TO_ONE_ARB 0x809F
#define GL_SAMPLE_ALPHA_TO_ONE_EXT 0x809F
#define GL_SAMPLE_ALPHA_TO_ONE_SGIS 0x809F
#define GL_SAMPLE_COVERAGE 0x80A0
#define GL_SAMPLE_COVERAGE_ARB 0x80A0
#define GL_SAMPLE_MASK_EXT 0x80A0
#define GL_SAMPLE_MASK_SGIS 0x80A0
#define GL_1PASS_EXT 0x80A1
#define GL_1PASS_SGIS 0x80A1
#define GL_2PASS_0_EXT 0x80A2
#define GL_2PASS_0_SGIS 0x80A2
#define GL_2PASS_1_EXT 0x80A3
#define GL_2PASS_1_SGIS 0x80A3
#define GL_4PASS_0_EXT 0x80A4
#define GL_4PASS_0_SGIS 0x80A4
#define GL_4PASS_1_EXT 0x80A5
#define GL_4PASS_1_SGIS 0x80A5
#define GL_4PASS_2_EXT 0x80A6
#define GL_4PASS_2_SGIS 0x80A6
#define GL_4PASS_3_EXT 0x80A7
#define GL_4PASS_3_SGIS 0x80A7
#define GL_SAMPLE_BUFFERS 0x80A8
#define GL_SAMPLE_BUFFERS_ARB 0x80A8
#define GL_SAMPLE_BUFFERS_EXT 0x80A8
#define GL_SAMPLE_BUFFERS_SGIS 0x80A8
#define GL_SAMPLES 0x80A9
#define GL_SAMPLES_ARB 0x80A9
#define GL_SAMPLES_EXT 0x80A9
#define GL_SAMPLES_SGIS 0x80A9
#define GL_SAMPLE_COVERAGE_VALUE 0x80AA
#define GL_SAMPLE_COVERAGE_VALUE_ARB 0x80AA
#define GL_SAMPLE_MASK_VALUE_EXT 0x80AA
#define GL_SAMPLE_MASK_VALUE_SGIS 0x80AA
#define GL_SAMPLE_COVERAGE_INVERT 0x80AB
#define GL_SAMPLE_COVERAGE_INVERT_ARB 0x80AB
#define GL_SAMPLE_MASK_INVERT_EXT 0x80AB
#define GL_SAMPLE_MASK_INVERT_SGIS 0x80AB
#define GL_SAMPLE_PATTERN_EXT 0x80AC
#define GL_SAMPLE_PATTERN_SGIS 0x80AC
#define GL_LINEAR_SHARPEN_SGIS 0x80AD
#define GL_LINEAR_SHARPEN_ALPHA_SGIS 0x80AE
#define GL_LINEAR_SHARPEN_COLOR_SGIS 0x80AF
#define GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS 0x80B0
#define GL_COLOR_MATRIX 0x80B1
#define GL_COLOR_MATRIX_SGI 0x80B1
#define GL_COLOR_MATRIX_STACK_DEPTH 0x80B2
#define GL_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B2
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH 0x80B3
#define GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI 0x80B3
#define GL_POST_COLOR_MATRIX_RED_SCALE 0x80B4
#define GL_POST_COLOR_MATRIX_RED_SCALE_SGI 0x80B4
#define GL_POST_COLOR_MATRIX_GREEN_SCALE 0x80B5
#define GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI 0x80B5
#define GL_POST_COLOR_MATRIX_BLUE_SCALE 0x80B6
#define GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI 0x80B6
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE 0x80B7
#define GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI 0x80B7
#define GL_POST_COLOR_MATRIX_RED_BIAS 0x80B8
#define GL_POST_COLOR_MATRIX_RED_BIAS_SGI 0x80B8
#define GL_POST_COLOR_MATRIX_GREEN_BIAS 0x80B9
#define GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI 0x80B9
#define GL_POST_COLOR_MATRIX_BLUE_BIAS 0x80BA
#define GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI 0x80BA
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS 0x80BB
#define GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI 0x80BB
#define GL_TEXTURE_COLOR_TABLE_SGI 0x80BC
#define GL_PROXY_TEXTURE_COLOR_TABLE_SGI 0x80BD
#define GL_TEXTURE_ENV_BIAS_SGIX 0x80BE
#define GL_SHADOW_AMBIENT_SGIX 0x80BF
#define GL_TEXTURE_COMPARE_FAIL_VALUE_ARB 0x80BF
#define GL_BLEND_DST_RGB 0x80C8
#define GL_BLEND_DST_RGB_EXT 0x80C8
#define GL_BLEND_DST_RGB_OES 0x80C8
#define GL_BLEND_SRC_RGB 0x80C9
#define GL_BLEND_SRC_RGB_EXT 0x80C9
#define GL_BLEND_SRC_RGB_OES 0x80C9
#define GL_BLEND_DST_ALPHA 0x80CA
#define GL_BLEND_DST_ALPHA_EXT 0x80CA
#define GL_BLEND_DST_ALPHA_OES 0x80CA
#define GL_BLEND_SRC_ALPHA 0x80CB
#define GL_BLEND_SRC_ALPHA_EXT 0x80CB
#define GL_BLEND_SRC_ALPHA_OES 0x80CB
#define GL_422_EXT 0x80CC
#define GL_422_REV_EXT 0x80CD
#define GL_422_AVERAGE_EXT 0x80CE
#define GL_422_REV_AVERAGE_EXT 0x80CF
#define GL_COLOR_TABLE 0x80D0
#define GL_COLOR_TABLE_SGI 0x80D0
#define GL_POST_CONVOLUTION_COLOR_TABLE 0x80D1
#define GL_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D1
#define GL_POST_COLOR_MATRIX_COLOR_TABLE 0x80D2
#define GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D2
#define GL_PROXY_COLOR_TABLE 0x80D3
#define GL_PROXY_COLOR_TABLE_SGI 0x80D3
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE 0x80D4
#define GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI 0x80D4
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE 0x80D5
#define GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI 0x80D5
#define GL_COLOR_TABLE_SCALE 0x80D6
#define GL_COLOR_TABLE_SCALE_SGI 0x80D6
#define GL_COLOR_TABLE_BIAS 0x80D7
#define GL_COLOR_TABLE_BIAS_SGI 0x80D7
#define GL_COLOR_TABLE_FORMAT 0x80D8
#define GL_COLOR_TABLE_FORMAT_SGI 0x80D8
#define GL_COLOR_TABLE_WIDTH 0x80D9
#define GL_COLOR_TABLE_WIDTH_SGI 0x80D9
#define GL_COLOR_TABLE_RED_SIZE 0x80DA
#define GL_COLOR_TABLE_RED_SIZE_SGI 0x80DA
#define GL_COLOR_TABLE_GREEN_SIZE 0x80DB
#define GL_COLOR_TABLE_GREEN_SIZE_SGI 0x80DB
#define GL_COLOR_TABLE_BLUE_SIZE 0x80DC
#define GL_COLOR_TABLE_BLUE_SIZE_SGI 0x80DC
#define GL_COLOR_TABLE_ALPHA_SIZE 0x80DD
#define GL_COLOR_TABLE_ALPHA_SIZE_SGI 0x80DD
#define GL_COLOR_TABLE_LUMINANCE_SIZE 0x80DE
#define GL_COLOR_TABLE_LUMINANCE_SIZE_SGI 0x80DE
#define GL_COLOR_TABLE_INTENSITY_SIZE 0x80DF
#define GL_COLOR_TABLE_INTENSITY_SIZE_SGI 0x80DF
#define GL_BGR 0x80E0
#define GL_BGR_EXT 0x80E0
#define GL_BGRA 0x80E1
#define GL_BGRA_EXT 0x80E1
#define GL_BGRA_IMG 0x80E1
#define GL_COLOR_INDEX1_EXT 0x80E2
#define GL_COLOR_INDEX2_EXT 0x80E3
#define GL_COLOR_INDEX4_EXT 0x80E4
#define GL_COLOR_INDEX8_EXT 0x80E5
#define GL_COLOR_INDEX12_EXT 0x80E6
#define GL_COLOR_INDEX16_EXT 0x80E7
#define GL_MAX_ELEMENTS_VERTICES 0x80E8
#define GL_MAX_ELEMENTS_VERTICES_EXT 0x80E8
#define GL_MAX_ELEMENTS_INDICES 0x80E9
#define GL_MAX_ELEMENTS_INDICES_EXT 0x80E9
#define GL_PHONG_WIN 0x80EA
#define GL_PHONG_HINT_WIN 0x80EB
#define GL_FOG_SPECULAR_TEXTURE_WIN 0x80EC
#define GL_TEXTURE_INDEX_SIZE_EXT 0x80ED
#define GL_PARAMETER_BUFFER 0x80EE
#define GL_PARAMETER_BUFFER_ARB 0x80EE
#define GL_PARAMETER_BUFFER_BINDING 0x80EF
#define GL_PARAMETER_BUFFER_BINDING_ARB 0x80EF
#define GL_CLIP_VOLUME_CLIPPING_HINT_EXT 0x80F0
#define GL_DUAL_ALPHA4_SGIS 0x8110
#define GL_DUAL_ALPHA8_SGIS 0x8111
#define GL_DUAL_ALPHA12_SGIS 0x8112
#define GL_DUAL_ALPHA16_SGIS 0x8113
#define GL_DUAL_LUMINANCE4_SGIS 0x8114
#define GL_DUAL_LUMINANCE8_SGIS 0x8115
#define GL_DUAL_LUMINANCE12_SGIS 0x8116
#define GL_DUAL_LUMINANCE16_SGIS 0x8117
#define GL_DUAL_INTENSITY4_SGIS 0x8118
#define GL_DUAL_INTENSITY8_SGIS 0x8119
#define GL_DUAL_INTENSITY12_SGIS 0x811A
#define GL_DUAL_INTENSITY16_SGIS 0x811B
#define GL_DUAL_LUMINANCE_ALPHA4_SGIS 0x811C
#define GL_DUAL_LUMINANCE_ALPHA8_SGIS 0x811D
#define GL_QUAD_ALPHA4_SGIS 0x811E
#define GL_QUAD_ALPHA8_SGIS 0x811F
#define GL_QUAD_LUMINANCE4_SGIS 0x8120
#define GL_QUAD_LUMINANCE8_SGIS 0x8121
#define GL_QUAD_INTENSITY4_SGIS 0x8122
#define GL_QUAD_INTENSITY8_SGIS 0x8123
#define GL_DUAL_TEXTURE_SELECT_SGIS 0x8124
#define GL_QUAD_TEXTURE_SELECT_SGIS 0x8125
#define GL_POINT_SIZE_MIN 0x8126
#define GL_POINT_SIZE_MIN_ARB 0x8126
#define GL_POINT_SIZE_MIN_EXT 0x8126
#define GL_POINT_SIZE_MIN_SGIS 0x8126
#define GL_POINT_SIZE_MAX 0x8127
#define GL_POINT_SIZE_MAX_ARB 0x8127
#define GL_POINT_SIZE_MAX_EXT 0x8127
#define GL_POINT_SIZE_MAX_SGIS 0x8127
#define GL_POINT_FADE_THRESHOLD_SIZE 0x8128
#define GL_POINT_FADE_THRESHOLD_SIZE_ARB 0x8128
#define GL_POINT_FADE_THRESHOLD_SIZE_EXT 0x8128
#define GL_POINT_FADE_THRESHOLD_SIZE_SGIS 0x8128
#define GL_DISTANCE_ATTENUATION_EXT 0x8129
#define GL_DISTANCE_ATTENUATION_SGIS 0x8129
#define GL_POINT_DISTANCE_ATTENUATION 0x8129
#define GL_POINT_DISTANCE_ATTENUATION_ARB 0x8129
#define GL_FOG_FUNC_SGIS 0x812A
#define GL_FOG_FUNC_POINTS_SGIS 0x812B
#define GL_MAX_FOG_FUNC_POINTS_SGIS 0x812C
#define GL_CLAMP_TO_BORDER 0x812D
#define GL_CLAMP_TO_BORDER_ARB 0x812D
#define GL_CLAMP_TO_BORDER_EXT 0x812D
#define GL_CLAMP_TO_BORDER_NV 0x812D
#define GL_CLAMP_TO_BORDER_SGIS 0x812D
#define GL_CLAMP_TO_BORDER_OES 0x812D
#define GL_TEXTURE_MULTI_BUFFER_HINT_SGIX 0x812E
#define GL_CLAMP_TO_EDGE 0x812F
#define GL_CLAMP_TO_EDGE_SGIS 0x812F
#define GL_PACK_SKIP_VOLUMES_SGIS 0x8130
#define GL_PACK_IMAGE_DEPTH_SGIS 0x8131
#define GL_UNPACK_SKIP_VOLUMES_SGIS 0x8132
#define GL_UNPACK_IMAGE_DEPTH_SGIS 0x8133
#define GL_TEXTURE_4D_SGIS 0x8134
#define GL_PROXY_TEXTURE_4D_SGIS 0x8135
#define GL_TEXTURE_4DSIZE_SGIS 0x8136
#define GL_TEXTURE_WRAP_Q_SGIS 0x8137
#define GL_MAX_4D_TEXTURE_SIZE_SGIS 0x8138
#define GL_PIXEL_TEX_GEN_SGIX 0x8139
#define GL_TEXTURE_MIN_LOD 0x813A
#define GL_TEXTURE_MIN_LOD_SGIS 0x813A
#define GL_TEXTURE_MAX_LOD 0x813B
#define GL_TEXTURE_MAX_LOD_SGIS 0x813B
#define GL_TEXTURE_BASE_LEVEL 0x813C
#define GL_TEXTURE_BASE_LEVEL_SGIS 0x813C
#define GL_TEXTURE_MAX_LEVEL 0x813D
#define GL_TEXTURE_MAX_LEVEL_APPLE 0x813D
#define GL_TEXTURE_MAX_LEVEL_SGIS 0x813D
#define GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX 0x813E
#define GL_PIXEL_TILE_CACHE_INCREMENT_SGIX 0x813F
#define GL_PIXEL_TILE_WIDTH_SGIX 0x8140
#define GL_PIXEL_TILE_HEIGHT_SGIX 0x8141
#define GL_PIXEL_TILE_GRID_WIDTH_SGIX 0x8142
#define GL_PIXEL_TILE_GRID_HEIGHT_SGIX 0x8143
#define GL_PIXEL_TILE_GRID_DEPTH_SGIX 0x8144
#define GL_PIXEL_TILE_CACHE_SIZE_SGIX 0x8145
#define GL_FILTER4_SGIS 0x8146
#define GL_TEXTURE_FILTER4_SIZE_SGIS 0x8147
#define GL_SPRITE_SGIX 0x8148
#define GL_SPRITE_MODE_SGIX 0x8149
#define GL_SPRITE_AXIS_SGIX 0x814A
#define GL_SPRITE_TRANSLATION_SGIX 0x814B
#define GL_SPRITE_AXIAL_SGIX 0x814C
#define GL_SPRITE_OBJECT_ALIGNED_SGIX 0x814D
#define GL_SPRITE_EYE_ALIGNED_SGIX 0x814E
#define GL_TEXTURE_4D_BINDING_SGIS 0x814F
#define GL_IGNORE_BORDER_HP 0x8150
#define GL_CONSTANT_BORDER 0x8151
#define GL_CONSTANT_BORDER_HP 0x8151
#define GL_REPLICATE_BORDER 0x8153
#define GL_REPLICATE_BORDER_HP 0x8153
#define GL_CONVOLUTION_BORDER_COLOR 0x8154
#define GL_CONVOLUTION_BORDER_COLOR_HP 0x8154
#define GL_IMAGE_SCALE_X_HP 0x8155
#define GL_IMAGE_SCALE_Y_HP 0x8156
#define GL_IMAGE_TRANSLATE_X_HP 0x8157
#define GL_IMAGE_TRANSLATE_Y_HP 0x8158
#define GL_IMAGE_ROTATE_ANGLE_HP 0x8159
#define GL_IMAGE_ROTATE_ORIGIN_X_HP 0x815A
#define GL_IMAGE_ROTATE_ORIGIN_Y_HP 0x815B
#define GL_IMAGE_MAG_FILTER_HP 0x815C
#define GL_IMAGE_MIN_FILTER_HP 0x815D
#define GL_IMAGE_CUBIC_WEIGHT_HP 0x815E
#define GL_CUBIC_HP 0x815F
#define GL_AVERAGE_HP 0x8160
#define GL_IMAGE_TRANSFORM_2D_HP 0x8161
#define GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8162
#define GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP 0x8163
#define GL_OCCLUSION_TEST_HP 0x8165
#define GL_OCCLUSION_TEST_RESULT_HP 0x8166
#define GL_TEXTURE_LIGHTING_MODE_HP 0x8167
#define GL_TEXTURE_POST_SPECULAR_HP 0x8168
#define GL_TEXTURE_PRE_SPECULAR_HP 0x8169
#define GL_LINEAR_CLIPMAP_LINEAR_SGIX 0x8170
#define GL_TEXTURE_CLIPMAP_CENTER_SGIX 0x8171
#define GL_TEXTURE_CLIPMAP_FRAME_SGIX 0x8172
#define GL_TEXTURE_CLIPMAP_OFFSET_SGIX 0x8173
#define GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8174
#define GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX 0x8175
#define GL_TEXTURE_CLIPMAP_DEPTH_SGIX 0x8176
#define GL_MAX_CLIPMAP_DEPTH_SGIX 0x8177
#define GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX 0x8178
#define GL_POST_TEXTURE_FILTER_BIAS_SGIX 0x8179
#define GL_POST_TEXTURE_FILTER_SCALE_SGIX 0x817A
#define GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX 0x817B
#define GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX 0x817C
#define GL_REFERENCE_PLANE_SGIX 0x817D
#define GL_REFERENCE_PLANE_EQUATION_SGIX 0x817E
#define GL_IR_INSTRUMENT1_SGIX 0x817F
#define GL_INSTRUMENT_BUFFER_POINTER_SGIX 0x8180
#define GL_INSTRUMENT_MEASUREMENTS_SGIX 0x8181
#define GL_LIST_PRIORITY_SGIX 0x8182
#define GL_CALLIGRAPHIC_FRAGMENT_SGIX 0x8183
#define GL_PIXEL_TEX_GEN_Q_CEILING_SGIX 0x8184
#define GL_PIXEL_TEX_GEN_Q_ROUND_SGIX 0x8185
#define GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX 0x8186
#define GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX 0x8189
#define GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX 0x818A
#define GL_FRAMEZOOM_SGIX 0x818B
#define GL_FRAMEZOOM_FACTOR_SGIX 0x818C
#define GL_MAX_FRAMEZOOM_FACTOR_SGIX 0x818D
#define GL_TEXTURE_LOD_BIAS_S_SGIX 0x818E
#define GL_TEXTURE_LOD_BIAS_T_SGIX 0x818F
#define GL_TEXTURE_LOD_BIAS_R_SGIX 0x8190
#define GL_GENERATE_MIPMAP 0x8191
#define GL_GENERATE_MIPMAP_SGIS 0x8191
#define GL_GENERATE_MIPMAP_HINT 0x8192
#define GL_GENERATE_MIPMAP_HINT_SGIS 0x8192
#define GL_GEOMETRY_DEFORMATION_SGIX 0x8194
#define GL_TEXTURE_DEFORMATION_SGIX 0x8195
#define GL_DEFORMATIONS_MASK_SGIX 0x8196
#define GL_MAX_DEFORMATION_ORDER_SGIX 0x8197
#define GL_FOG_OFFSET_SGIX 0x8198
#define GL_FOG_OFFSET_VALUE_SGIX 0x8199
#define GL_TEXTURE_COMPARE_SGIX 0x819A
#define GL_TEXTURE_COMPARE_OPERATOR_SGIX 0x819B
#define GL_TEXTURE_LEQUAL_R_SGIX 0x819C
#define GL_TEXTURE_GEQUAL_R_SGIX 0x819D
#define GL_DEPTH_COMPONENT16 0x81A5
#define GL_DEPTH_COMPONENT16_ARB 0x81A5
#define GL_DEPTH_COMPONENT16_OES 0x81A5
#define GL_DEPTH_COMPONENT16_SGIX 0x81A5
#define GL_DEPTH_COMPONENT24 0x81A6
#define GL_DEPTH_COMPONENT24_ARB 0x81A6
#define GL_DEPTH_COMPONENT24_OES 0x81A6
#define GL_DEPTH_COMPONENT24_SGIX 0x81A6
#define GL_DEPTH_COMPONENT32 0x81A7
#define GL_DEPTH_COMPONENT32_ARB 0x81A7
#define GL_DEPTH_COMPONENT32_OES 0x81A7
#define GL_DEPTH_COMPONENT32_SGIX 0x81A7
#define GL_ARRAY_ELEMENT_LOCK_FIRST_EXT 0x81A8
#define GL_ARRAY_ELEMENT_LOCK_COUNT_EXT 0x81A9
#define GL_CULL_VERTEX_EXT 0x81AA
#define GL_CULL_VERTEX_EYE_POSITION_EXT 0x81AB
#define GL_CULL_VERTEX_OBJECT_POSITION_EXT 0x81AC
#define GL_IUI_V2F_EXT 0x81AD
#define GL_IUI_V3F_EXT 0x81AE
#define GL_IUI_N3F_V2F_EXT 0x81AF
#define GL_IUI_N3F_V3F_EXT 0x81B0
#define GL_T2F_IUI_V2F_EXT 0x81B1
#define GL_T2F_IUI_V3F_EXT 0x81B2
#define GL_T2F_IUI_N3F_V2F_EXT 0x81B3
#define GL_T2F_IUI_N3F_V3F_EXT 0x81B4
#define GL_INDEX_TEST_EXT 0x81B5
#define GL_INDEX_TEST_FUNC_EXT 0x81B6
#define GL_INDEX_TEST_REF_EXT 0x81B7
#define GL_INDEX_MATERIAL_EXT 0x81B8
#define GL_INDEX_MATERIAL_PARAMETER_EXT 0x81B9
#define GL_INDEX_MATERIAL_FACE_EXT 0x81BA
#define GL_YCRCB_422_SGIX 0x81BB
#define GL_YCRCB_444_SGIX 0x81BC
#define GL_WRAP_BORDER_SUN 0x81D4
#define GL_UNPACK_CONSTANT_DATA_SUNX 0x81D5
#define GL_TEXTURE_CONSTANT_DATA_SUNX 0x81D6
#define GL_TRIANGLE_LIST_SUN 0x81D7
#define GL_REPLACEMENT_CODE_SUN 0x81D8
#define GL_GLOBAL_ALPHA_SUN 0x81D9
#define GL_GLOBAL_ALPHA_FACTOR_SUN 0x81DA
#define GL_TEXTURE_COLOR_WRITEMASK_SGIS 0x81EF
#define GL_EYE_DISTANCE_TO_POINT_SGIS 0x81F0
#define GL_OBJECT_DISTANCE_TO_POINT_SGIS 0x81F1
#define GL_EYE_DISTANCE_TO_LINE_SGIS 0x81F2
#define GL_OBJECT_DISTANCE_TO_LINE_SGIS 0x81F3
#define GL_EYE_POINT_SGIS 0x81F4
#define GL_OBJECT_POINT_SGIS 0x81F5
#define GL_EYE_LINE_SGIS 0x81F6
#define GL_OBJECT_LINE_SGIS 0x81F7
#define GL_LIGHT_MODEL_COLOR_CONTROL 0x81F8
#define GL_LIGHT_MODEL_COLOR_CONTROL_EXT 0x81F8
#define GL_SINGLE_COLOR 0x81F9
#define GL_SINGLE_COLOR_EXT 0x81F9
#define GL_SEPARATE_SPECULAR_COLOR 0x81FA
#define GL_SEPARATE_SPECULAR_COLOR_EXT 0x81FA
#define GL_SHARED_TEXTURE_PALETTE_EXT 0x81FB
#define GL_TEXT_FRAGMENT_SHADER_ATI 0x8200
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT 0x8210
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT 0x8211
#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE 0x8212
#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE 0x8213
#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE 0x8214
#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE 0x8215
#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE 0x8216
#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE 0x8217
#define GL_FRAMEBUFFER_DEFAULT 0x8218
#define GL_FRAMEBUFFER_UNDEFINED 0x8219
#define GL_FRAMEBUFFER_UNDEFINED_OES 0x8219
#define GL_DEPTH_STENCIL_ATTACHMENT 0x821A
#define GL_MAJOR_VERSION 0x821B
#define GL_MINOR_VERSION 0x821C
#define GL_NUM_EXTENSIONS 0x821D
#define GL_CONTEXT_FLAGS 0x821E
#define GL_BUFFER_IMMUTABLE_STORAGE 0x821F
#define GL_BUFFER_IMMUTABLE_STORAGE_EXT 0x821F
#define GL_BUFFER_STORAGE_FLAGS 0x8220
#define GL_BUFFER_STORAGE_FLAGS_EXT 0x8220
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED 0x8221
#define GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED_OES 0x8221
#define GL_INDEX 0x8222
#define GL_COMPRESSED_RED 0x8225
#define GL_COMPRESSED_RG 0x8226
#define GL_RG 0x8227
#define GL_RG_EXT 0x8227
#define GL_RG_INTEGER 0x8228
#define GL_R8 0x8229
#define GL_R8_EXT 0x8229
#define GL_R16 0x822A
#define GL_R16_EXT 0x822A
#define GL_RG8 0x822B
#define GL_RG8_EXT 0x822B
#define GL_RG16 0x822C
#define GL_RG16_EXT 0x822C
#define GL_R16F 0x822D
#define GL_R16F_EXT 0x822D
#define GL_R32F 0x822E
#define GL_R32F_EXT 0x822E
#define GL_RG16F 0x822F
#define GL_RG16F_EXT 0x822F
#define GL_RG32F 0x8230
#define GL_RG32F_EXT 0x8230
#define GL_R8I 0x8231
#define GL_R8UI 0x8232
#define GL_R16I 0x8233
#define GL_R16UI 0x8234
#define GL_R32I 0x8235
#define GL_R32UI 0x8236
#define GL_RG8I 0x8237
#define GL_RG8UI 0x8238
#define GL_RG16I 0x8239
#define GL_RG16UI 0x823A
#define GL_RG32I 0x823B
#define GL_RG32UI 0x823C
#define GL_SYNC_CL_EVENT_ARB 0x8240
#define GL_SYNC_CL_EVENT_COMPLETE_ARB 0x8241
#define GL_DEBUG_OUTPUT_SYNCHRONOUS 0x8242
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB 0x8242
#define GL_DEBUG_OUTPUT_SYNCHRONOUS_KHR 0x8242
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH 0x8243
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB 0x8243
#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_KHR 0x8243
#define GL_DEBUG_CALLBACK_FUNCTION 0x8244
#define GL_DEBUG_CALLBACK_FUNCTION_ARB 0x8244
#define GL_DEBUG_CALLBACK_FUNCTION_KHR 0x8244
#define GL_DEBUG_CALLBACK_USER_PARAM 0x8245
#define GL_DEBUG_CALLBACK_USER_PARAM_ARB 0x8245
#define GL_DEBUG_CALLBACK_USER_PARAM_KHR 0x8245
#define GL_DEBUG_SOURCE_API 0x8246
#define GL_DEBUG_SOURCE_API_ARB 0x8246
#define GL_DEBUG_SOURCE_API_KHR 0x8246
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM 0x8247
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB 0x8247
#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_KHR 0x8247
#define GL_DEBUG_SOURCE_SHADER_COMPILER 0x8248
#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB 0x8248
#define GL_DEBUG_SOURCE_SHADER_COMPILER_KHR 0x8248
#define GL_DEBUG_SOURCE_THIRD_PARTY 0x8249
#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB 0x8249
#define GL_DEBUG_SOURCE_THIRD_PARTY_KHR 0x8249
#define GL_DEBUG_SOURCE_APPLICATION 0x824A
#define GL_DEBUG_SOURCE_APPLICATION_ARB 0x824A
#define GL_DEBUG_SOURCE_APPLICATION_KHR 0x824A
#define GL_DEBUG_SOURCE_OTHER 0x824B
#define GL_DEBUG_SOURCE_OTHER_ARB 0x824B
#define GL_DEBUG_SOURCE_OTHER_KHR 0x824B
#define GL_DEBUG_TYPE_ERROR 0x824C
#define GL_DEBUG_TYPE_ERROR_ARB 0x824C
#define GL_DEBUG_TYPE_ERROR_KHR 0x824C
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR 0x824D
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB 0x824D
#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_KHR 0x824D
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR 0x824E
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB 0x824E
#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_KHR 0x824E
#define GL_DEBUG_TYPE_PORTABILITY 0x824F
#define GL_DEBUG_TYPE_PORTABILITY_ARB 0x824F
#define GL_DEBUG_TYPE_PORTABILITY_KHR 0x824F
#define GL_DEBUG_TYPE_PERFORMANCE 0x8250
#define GL_DEBUG_TYPE_PERFORMANCE_ARB 0x8250
#define GL_DEBUG_TYPE_PERFORMANCE_KHR 0x8250
#define GL_DEBUG_TYPE_OTHER 0x8251
#define GL_DEBUG_TYPE_OTHER_ARB 0x8251
#define GL_DEBUG_TYPE_OTHER_KHR 0x8251
#define GL_LOSE_CONTEXT_ON_RESET 0x8252
#define GL_LOSE_CONTEXT_ON_RESET_ARB 0x8252
#define GL_LOSE_CONTEXT_ON_RESET_EXT 0x8252
#define GL_LOSE_CONTEXT_ON_RESET_KHR 0x8252
#define GL_GUILTY_CONTEXT_RESET 0x8253
#define GL_GUILTY_CONTEXT_RESET_ARB 0x8253
#define GL_GUILTY_CONTEXT_RESET_EXT 0x8253
#define GL_GUILTY_CONTEXT_RESET_KHR 0x8253
#define GL_INNOCENT_CONTEXT_RESET 0x8254
#define GL_INNOCENT_CONTEXT_RESET_ARB 0x8254
#define GL_INNOCENT_CONTEXT_RESET_EXT 0x8254
#define GL_INNOCENT_CONTEXT_RESET_KHR 0x8254
#define GL_UNKNOWN_CONTEXT_RESET 0x8255
#define GL_UNKNOWN_CONTEXT_RESET_ARB 0x8255
#define GL_UNKNOWN_CONTEXT_RESET_EXT 0x8255
#define GL_UNKNOWN_CONTEXT_RESET_KHR 0x8255
#define GL_RESET_NOTIFICATION_STRATEGY 0x8256
#define GL_RESET_NOTIFICATION_STRATEGY_ARB 0x8256
#define GL_RESET_NOTIFICATION_STRATEGY_EXT 0x8256
#define GL_RESET_NOTIFICATION_STRATEGY_KHR 0x8256
#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT 0x8257
#define GL_PROGRAM_SEPARABLE 0x8258
#define GL_PROGRAM_SEPARABLE_EXT 0x8258
#define GL_ACTIVE_PROGRAM 0x8259
extern GLenum GL_ACTIVE_PROGRAM_EXT; /* gles2=0x8259; gl=0x8B8D */
#define GL_PROGRAM_PIPELINE_BINDING 0x825A
#define GL_PROGRAM_PIPELINE_BINDING_EXT 0x825A
#define GL_MAX_VIEWPORTS 0x825B
#define GL_MAX_VIEWPORTS_NV 0x825B
#define GL_MAX_VIEWPORTS_OES 0x825B
#define GL_VIEWPORT_SUBPIXEL_BITS 0x825C
#define GL_VIEWPORT_SUBPIXEL_BITS_EXT 0x825C
#define GL_VIEWPORT_SUBPIXEL_BITS_NV 0x825C
#define GL_VIEWPORT_SUBPIXEL_BITS_OES 0x825C
#define GL_VIEWPORT_BOUNDS_RANGE 0x825D
#define GL_VIEWPORT_BOUNDS_RANGE_EXT 0x825D
#define GL_VIEWPORT_BOUNDS_RANGE_NV 0x825D
#define GL_VIEWPORT_BOUNDS_RANGE_OES 0x825D
#define GL_LAYER_PROVOKING_VERTEX 0x825E
#define GL_LAYER_PROVOKING_VERTEX_EXT 0x825E
#define GL_LAYER_PROVOKING_VERTEX_OES 0x825E
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX 0x825F
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_EXT 0x825F
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_NV 0x825F
#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX_OES 0x825F
#define GL_UNDEFINED_VERTEX 0x8260
#define GL_UNDEFINED_VERTEX_EXT 0x8260
#define GL_UNDEFINED_VERTEX_OES 0x8260
#define GL_NO_RESET_NOTIFICATION 0x8261
#define GL_NO_RESET_NOTIFICATION_ARB 0x8261
#define GL_NO_RESET_NOTIFICATION_EXT 0x8261
#define GL_NO_RESET_NOTIFICATION_KHR 0x8261
#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE 0x8262
#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS 0x8263
#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS 0x8264
#define GL_MAX_COMPUTE_ATOMIC_COUNTERS 0x8265
#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS 0x8266
#define GL_COMPUTE_WORK_GROUP_SIZE 0x8267
#define GL_DEBUG_TYPE_MARKER 0x8268
#define GL_DEBUG_TYPE_MARKER_KHR 0x8268
#define GL_DEBUG_TYPE_PUSH_GROUP 0x8269
#define GL_DEBUG_TYPE_PUSH_GROUP_KHR 0x8269
#define GL_DEBUG_TYPE_POP_GROUP 0x826A
#define GL_DEBUG_TYPE_POP_GROUP_KHR 0x826A
#define GL_DEBUG_SEVERITY_NOTIFICATION 0x826B
#define GL_DEBUG_SEVERITY_NOTIFICATION_KHR 0x826B
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH 0x826C
#define GL_MAX_DEBUG_GROUP_STACK_DEPTH_KHR 0x826C
#define GL_DEBUG_GROUP_STACK_DEPTH 0x826D
#define GL_DEBUG_GROUP_STACK_DEPTH_KHR 0x826D
#define GL_MAX_UNIFORM_LOCATIONS 0x826E
#define GL_INTERNALFORMAT_SUPPORTED 0x826F
#define GL_INTERNALFORMAT_PREFERRED 0x8270
#define GL_INTERNALFORMAT_RED_SIZE 0x8271
#define GL_INTERNALFORMAT_GREEN_SIZE 0x8272
#define GL_INTERNALFORMAT_BLUE_SIZE 0x8273
#define GL_INTERNALFORMAT_ALPHA_SIZE 0x8274
#define GL_INTERNALFORMAT_DEPTH_SIZE 0x8275
#define GL_INTERNALFORMAT_STENCIL_SIZE 0x8276
#define GL_INTERNALFORMAT_SHARED_SIZE 0x8277
#define GL_INTERNALFORMAT_RED_TYPE 0x8278
#define GL_INTERNALFORMAT_GREEN_TYPE 0x8279
#define GL_INTERNALFORMAT_BLUE_TYPE 0x827A
#define GL_INTERNALFORMAT_ALPHA_TYPE 0x827B
#define GL_INTERNALFORMAT_DEPTH_TYPE 0x827C
#define GL_INTERNALFORMAT_STENCIL_TYPE 0x827D
#define GL_MAX_WIDTH 0x827E
#define GL_MAX_HEIGHT 0x827F
#define GL_MAX_DEPTH 0x8280
#define GL_MAX_LAYERS 0x8281
#define GL_MAX_COMBINED_DIMENSIONS 0x8282
#define GL_COLOR_COMPONENTS 0x8283
#define GL_DEPTH_COMPONENTS 0x8284
#define GL_STENCIL_COMPONENTS 0x8285
#define GL_COLOR_RENDERABLE 0x8286
#define GL_DEPTH_RENDERABLE 0x8287
#define GL_STENCIL_RENDERABLE 0x8288
#define GL_FRAMEBUFFER_RENDERABLE 0x8289
#define GL_FRAMEBUFFER_RENDERABLE_LAYERED 0x828A
#define GL_FRAMEBUFFER_BLEND 0x828B
#define GL_READ_PIXELS 0x828C
#define GL_READ_PIXELS_FORMAT 0x828D
#define GL_READ_PIXELS_TYPE 0x828E
#define GL_TEXTURE_IMAGE_FORMAT 0x828F
#define GL_TEXTURE_IMAGE_TYPE 0x8290
#define GL_GET_TEXTURE_IMAGE_FORMAT 0x8291
#define GL_GET_TEXTURE_IMAGE_TYPE 0x8292
#define GL_MIPMAP 0x8293
#define GL_MANUAL_GENERATE_MIPMAP 0x8294
#define GL_AUTO_GENERATE_MIPMAP 0x8295
#define GL_COLOR_ENCODING 0x8296
#define GL_SRGB_READ 0x8297
#define GL_SRGB_WRITE 0x8298
#define GL_SRGB_DECODE_ARB 0x8299
#define GL_FILTER 0x829A
#define GL_VERTEX_TEXTURE 0x829B
#define GL_TESS_CONTROL_TEXTURE 0x829C
#define GL_TESS_EVALUATION_TEXTURE 0x829D
#define GL_GEOMETRY_TEXTURE 0x829E
#define GL_FRAGMENT_TEXTURE 0x829F
#define GL_COMPUTE_TEXTURE 0x82A0
#define GL_TEXTURE_SHADOW 0x82A1
#define GL_TEXTURE_GATHER 0x82A2
#define GL_TEXTURE_GATHER_SHADOW 0x82A3
#define GL_SHADER_IMAGE_LOAD 0x82A4
#define GL_SHADER_IMAGE_STORE 0x82A5
#define GL_SHADER_IMAGE_ATOMIC 0x82A6
#define GL_IMAGE_TEXEL_SIZE 0x82A7
#define GL_IMAGE_COMPATIBILITY_CLASS 0x82A8
#define GL_IMAGE_PIXEL_FORMAT 0x82A9
#define GL_IMAGE_PIXEL_TYPE 0x82AA
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST 0x82AC
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST 0x82AD
#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE 0x82AE
#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE 0x82AF
#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH 0x82B1
#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT 0x82B2
#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE 0x82B3
#define GL_CLEAR_BUFFER 0x82B4
#define GL_TEXTURE_VIEW 0x82B5
#define GL_VIEW_COMPATIBILITY_CLASS 0x82B6
#define GL_FULL_SUPPORT 0x82B7
#define GL_CAVEAT_SUPPORT 0x82B8
#define GL_IMAGE_CLASS_4_X_32 0x82B9
#define GL_IMAGE_CLASS_2_X_32 0x82BA
#define GL_IMAGE_CLASS_1_X_32 0x82BB
#define GL_IMAGE_CLASS_4_X_16 0x82BC
#define GL_IMAGE_CLASS_2_X_16 0x82BD
#define GL_IMAGE_CLASS_1_X_16 0x82BE
#define GL_IMAGE_CLASS_4_X_8 0x82BF
#define GL_IMAGE_CLASS_2_X_8 0x82C0
#define GL_IMAGE_CLASS_1_X_8 0x82C1
#define GL_IMAGE_CLASS_11_11_10 0x82C2
#define GL_IMAGE_CLASS_10_10_10_2 0x82C3
#define GL_VIEW_CLASS_128_BITS 0x82C4
#define GL_VIEW_CLASS_96_BITS 0x82C5
#define GL_VIEW_CLASS_64_BITS 0x82C6
#define GL_VIEW_CLASS_48_BITS 0x82C7
#define GL_VIEW_CLASS_32_BITS 0x82C8
#define GL_VIEW_CLASS_24_BITS 0x82C9
#define GL_VIEW_CLASS_16_BITS 0x82CA
#define GL_VIEW_CLASS_8_BITS 0x82CB
#define GL_VIEW_CLASS_S3TC_DXT1_RGB 0x82CC
#define GL_VIEW_CLASS_S3TC_DXT1_RGBA 0x82CD
#define GL_VIEW_CLASS_S3TC_DXT3_RGBA 0x82CE
#define GL_VIEW_CLASS_S3TC_DXT5_RGBA 0x82CF
#define GL_VIEW_CLASS_RGTC1_RED 0x82D0
#define GL_VIEW_CLASS_RGTC2_RG 0x82D1
#define GL_VIEW_CLASS_BPTC_UNORM 0x82D2
#define GL_VIEW_CLASS_BPTC_FLOAT 0x82D3
#define GL_VERTEX_ATTRIB_BINDING 0x82D4
#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D5
#define GL_VERTEX_BINDING_DIVISOR 0x82D6
#define GL_VERTEX_BINDING_OFFSET 0x82D7
#define GL_VERTEX_BINDING_STRIDE 0x82D8
#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET 0x82D9
#define GL_MAX_VERTEX_ATTRIB_BINDINGS 0x82DA
#define GL_TEXTURE_VIEW_MIN_LEVEL 0x82DB
#define GL_TEXTURE_VIEW_MIN_LEVEL_EXT 0x82DB
#define GL_TEXTURE_VIEW_MIN_LEVEL_OES 0x82DB
#define GL_TEXTURE_VIEW_NUM_LEVELS 0x82DC
#define GL_TEXTURE_VIEW_NUM_LEVELS_EXT 0x82DC
#define GL_TEXTURE_VIEW_NUM_LEVELS_OES 0x82DC
#define GL_TEXTURE_VIEW_MIN_LAYER 0x82DD
#define GL_TEXTURE_VIEW_MIN_LAYER_EXT 0x82DD
#define GL_TEXTURE_VIEW_MIN_LAYER_OES 0x82DD
#define GL_TEXTURE_VIEW_NUM_LAYERS 0x82DE
#define GL_TEXTURE_VIEW_NUM_LAYERS_EXT 0x82DE
#define GL_TEXTURE_VIEW_NUM_LAYERS_OES 0x82DE
#define GL_TEXTURE_IMMUTABLE_LEVELS 0x82DF
#define GL_BUFFER 0x82E0
#define GL_BUFFER_KHR 0x82E0
#define GL_SHADER 0x82E1
#define GL_SHADER_KHR 0x82E1
#define GL_PROGRAM 0x82E2
#define GL_PROGRAM_KHR 0x82E2
#define GL_QUERY 0x82E3
#define GL_QUERY_KHR 0x82E3
#define GL_PROGRAM_PIPELINE 0x82E4
#define GL_PROGRAM_PIPELINE_KHR 0x82E4
#define GL_MAX_VERTEX_ATTRIB_STRIDE 0x82E5
#define GL_SAMPLER 0x82E6
#define GL_SAMPLER_KHR 0x82E6
#define GL_DISPLAY_LIST 0x82E7
#define GL_MAX_LABEL_LENGTH 0x82E8
#define GL_MAX_LABEL_LENGTH_KHR 0x82E8
#define GL_NUM_SHADING_LANGUAGE_VERSIONS 0x82E9
#define GL_QUERY_TARGET 0x82EA
#define GL_TRANSFORM_FEEDBACK_OVERFLOW 0x82EC
#define GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB 0x82EC
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW 0x82ED
#define GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB 0x82ED
#define GL_VERTICES_SUBMITTED 0x82EE
#define GL_VERTICES_SUBMITTED_ARB 0x82EE
#define GL_PRIMITIVES_SUBMITTED 0x82EF
#define GL_PRIMITIVES_SUBMITTED_ARB 0x82EF
#define GL_VERTEX_SHADER_INVOCATIONS 0x82F0
#define GL_VERTEX_SHADER_INVOCATIONS_ARB 0x82F0
#define GL_TESS_CONTROL_SHADER_PATCHES 0x82F1
#define GL_TESS_CONTROL_SHADER_PATCHES_ARB 0x82F1
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS 0x82F2
#define GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB 0x82F2
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED 0x82F3
#define GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB 0x82F3
#define GL_FRAGMENT_SHADER_INVOCATIONS 0x82F4
#define GL_FRAGMENT_SHADER_INVOCATIONS_ARB 0x82F4
#define GL_COMPUTE_SHADER_INVOCATIONS 0x82F5
#define GL_COMPUTE_SHADER_INVOCATIONS_ARB 0x82F5
#define GL_CLIPPING_INPUT_PRIMITIVES 0x82F6
#define GL_CLIPPING_INPUT_PRIMITIVES_ARB 0x82F6
#define GL_CLIPPING_OUTPUT_PRIMITIVES 0x82F7
#define GL_CLIPPING_OUTPUT_PRIMITIVES_ARB 0x82F7
#define GL_SPARSE_BUFFER_PAGE_SIZE_ARB 0x82F8
#define GL_MAX_CULL_DISTANCES 0x82F9
#define GL_MAX_CULL_DISTANCES_EXT 0x82F9
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES 0x82FA
#define GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES_EXT 0x82FA
#define GL_CONTEXT_RELEASE_BEHAVIOR 0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_KHR 0x82FB
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH 0x82FC
#define GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH_KHR 0x82FC
#define GL_ROBUST_GPU_TIMEOUT_MS_KHR 0x82FD
#define GL_DEPTH_PASS_INSTRUMENT_SGIX 0x8310
#define GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX 0x8311
#define GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX 0x8312
#define GL_FRAGMENTS_INSTRUMENT_SGIX 0x8313
#define GL_FRAGMENTS_INSTRUMENT_COUNTERS_SGIX 0x8314
#define GL_FRAGMENTS_INSTRUMENT_MAX_SGIX 0x8315
#define GL_CONVOLUTION_HINT_SGIX 0x8316
#define GL_YCRCB_SGIX 0x8318
#define GL_YCRCBA_SGIX 0x8319
#define GL_UNPACK_COMPRESSED_SIZE_SGIX 0x831A
#define GL_PACK_MAX_COMPRESSED_SIZE_SGIX 0x831B
#define GL_PACK_COMPRESSED_SIZE_SGIX 0x831C
#define GL_SLIM8U_SGIX 0x831D
#define GL_SLIM10U_SGIX 0x831E
#define GL_SLIM12S_SGIX 0x831F
#define GL_ALPHA_MIN_SGIX 0x8320
#define GL_ALPHA_MAX_SGIX 0x8321
#define GL_SCALEBIAS_HINT_SGIX 0x8322
#define GL_ASYNC_MARKER_SGIX 0x8329
#define GL_PIXEL_TEX_GEN_MODE_SGIX 0x832B
#define GL_ASYNC_HISTOGRAM_SGIX 0x832C
#define GL_MAX_ASYNC_HISTOGRAM_SGIX 0x832D
#define GL_PIXEL_TRANSFORM_2D_EXT 0x8330
#define GL_PIXEL_MAG_FILTER_EXT 0x8331
#define GL_PIXEL_MIN_FILTER_EXT 0x8332
#define GL_PIXEL_CUBIC_WEIGHT_EXT 0x8333
#define GL_CUBIC_EXT 0x8334
#define GL_AVERAGE_EXT 0x8335
#define GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8336
#define GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT 0x8337
#define GL_PIXEL_TRANSFORM_2D_MATRIX_EXT 0x8338
#define GL_FRAGMENT_MATERIAL_EXT 0x8349
#define GL_FRAGMENT_NORMAL_EXT 0x834A
#define GL_FRAGMENT_COLOR_EXT 0x834C
#define GL_ATTENUATION_EXT 0x834D
#define GL_SHADOW_ATTENUATION_EXT 0x834E
#define GL_TEXTURE_APPLICATION_MODE_EXT 0x834F
#define GL_TEXTURE_LIGHT_EXT 0x8350
#define GL_TEXTURE_MATERIAL_FACE_EXT 0x8351
#define GL_TEXTURE_MATERIAL_PARAMETER_EXT 0x8352
#define GL_PIXEL_TEXTURE_SGIS 0x8353
#define GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS 0x8354
#define GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS 0x8355
#define GL_PIXEL_GROUP_COLOR_SGIS 0x8356
#define GL_LINE_QUALITY_HINT_SGIX 0x835B
#define GL_ASYNC_TEX_IMAGE_SGIX 0x835C
#define GL_ASYNC_DRAW_PIXELS_SGIX 0x835D
#define GL_ASYNC_READ_PIXELS_SGIX 0x835E
#define GL_MAX_ASYNC_TEX_IMAGE_SGIX 0x835F
#define GL_MAX_ASYNC_DRAW_PIXELS_SGIX 0x8360
#define GL_MAX_ASYNC_READ_PIXELS_SGIX 0x8361
#define GL_UNSIGNED_BYTE_2_3_3_REV 0x8362
#define GL_UNSIGNED_BYTE_2_3_3_REV_EXT 0x8362
#define GL_UNSIGNED_SHORT_5_6_5 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_EXT 0x8363
#define GL_UNSIGNED_SHORT_5_6_5_REV 0x8364
#define GL_UNSIGNED_SHORT_5_6_5_REV_EXT 0x8364
#define GL_UNSIGNED_SHORT_4_4_4_4_REV 0x8365
#define GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT 0x8365
#define GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG 0x8365
#define GL_UNSIGNED_SHORT_1_5_5_5_REV 0x8366
#define GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT 0x8366
#define GL_UNSIGNED_INT_8_8_8_8_REV 0x8367
#define GL_UNSIGNED_INT_8_8_8_8_REV_EXT 0x8367
#define GL_UNSIGNED_INT_2_10_10_10_REV 0x8368
#define GL_UNSIGNED_INT_2_10_10_10_REV_EXT 0x8368
#define GL_TEXTURE_MAX_CLAMP_S_SGIX 0x8369
#define GL_TEXTURE_MAX_CLAMP_T_SGIX 0x836A
#define GL_TEXTURE_MAX_CLAMP_R_SGIX 0x836B
#define GL_MIRRORED_REPEAT 0x8370
#define GL_MIRRORED_REPEAT_ARB 0x8370
#define GL_MIRRORED_REPEAT_IBM 0x8370
#define GL_MIRRORED_REPEAT_OES 0x8370
#define GL_RGB_S3TC 0x83A0
#define GL_RGB4_S3TC 0x83A1
#define GL_RGBA_S3TC 0x83A2
#define GL_RGBA4_S3TC 0x83A3
#define GL_RGBA_DXT5_S3TC 0x83A4
#define GL_RGBA4_DXT5_S3TC 0x83A5
#define GL_VERTEX_PRECLIP_SGIX 0x83EE
#define GL_VERTEX_PRECLIP_HINT_SGIX 0x83EF
#define GL_COMPRESSED_RGB_S3TC_DXT1_EXT 0x83F0
#define GL_COMPRESSED_RGBA_S3TC_DXT1_EXT 0x83F1
#define GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE 0x83F2
#define GL_COMPRESSED_RGBA_S3TC_DXT3_EXT 0x83F2
#define GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE 0x83F3
#define GL_COMPRESSED_RGBA_S3TC_DXT5_EXT 0x83F3
#define GL_PARALLEL_ARRAYS_INTEL 0x83F4
#define GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL 0x83F5
#define GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL 0x83F6
#define GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL 0x83F7
#define GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL 0x83F8
#define GL_PERFQUERY_DONOT_FLUSH_INTEL 0x83F9
#define GL_PERFQUERY_FLUSH_INTEL 0x83FA
#define GL_PERFQUERY_WAIT_INTEL 0x83FB
#define GL_BLACKHOLE_RENDER_INTEL 0x83FC
#define GL_CONSERVATIVE_RASTERIZATION_INTEL 0x83FE
#define GL_TEXTURE_MEMORY_LAYOUT_INTEL 0x83FF
#define GL_FRAGMENT_LIGHTING_SGIX 0x8400
#define GL_FRAGMENT_COLOR_MATERIAL_SGIX 0x8401
#define GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX 0x8402
#define GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX 0x8403
#define GL_MAX_FRAGMENT_LIGHTS_SGIX 0x8404
#define GL_MAX_ACTIVE_LIGHTS_SGIX 0x8405
#define GL_CURRENT_RASTER_NORMAL_SGIX 0x8406
#define GL_LIGHT_ENV_MODE_SGIX 0x8407
#define GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX 0x8408
#define GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX 0x8409
#define GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX 0x840A
#define GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX 0x840B
#define GL_FRAGMENT_LIGHT0_SGIX 0x840C
#define GL_FRAGMENT_LIGHT1_SGIX 0x840D
#define GL_FRAGMENT_LIGHT2_SGIX 0x840E
#define GL_FRAGMENT_LIGHT3_SGIX 0x840F
#define GL_FRAGMENT_LIGHT4_SGIX 0x8410
#define GL_FRAGMENT_LIGHT5_SGIX 0x8411
#define GL_FRAGMENT_LIGHT6_SGIX 0x8412
#define GL_FRAGMENT_LIGHT7_SGIX 0x8413
#define GL_PACK_RESAMPLE_SGIX 0x842E
#define GL_UNPACK_RESAMPLE_SGIX 0x842F
#define GL_RESAMPLE_DECIMATE_SGIX 0x8430
#define GL_RESAMPLE_REPLICATE_SGIX 0x8433
#define GL_RESAMPLE_ZERO_FILL_SGIX 0x8434
#define GL_TANGENT_ARRAY_EXT 0x8439
#define GL_BINORMAL_ARRAY_EXT 0x843A
#define GL_CURRENT_TANGENT_EXT 0x843B
#define GL_CURRENT_BINORMAL_EXT 0x843C
#define GL_TANGENT_ARRAY_TYPE_EXT 0x843E
#define GL_TANGENT_ARRAY_STRIDE_EXT 0x843F
#define GL_BINORMAL_ARRAY_TYPE_EXT 0x8440
#define GL_BINORMAL_ARRAY_STRIDE_EXT 0x8441
#define GL_TANGENT_ARRAY_POINTER_EXT 0x8442
#define GL_BINORMAL_ARRAY_POINTER_EXT 0x8443
#define GL_MAP1_TANGENT_EXT 0x8444
#define GL_MAP2_TANGENT_EXT 0x8445
#define GL_MAP1_BINORMAL_EXT 0x8446
#define GL_MAP2_BINORMAL_EXT 0x8447
#define GL_NEAREST_CLIPMAP_NEAREST_SGIX 0x844D
#define GL_NEAREST_CLIPMAP_LINEAR_SGIX 0x844E
#define GL_LINEAR_CLIPMAP_NEAREST_SGIX 0x844F
#define GL_FOG_COORDINATE_SOURCE 0x8450
#define GL_FOG_COORDINATE_SOURCE_EXT 0x8450
#define GL_FOG_COORD_SRC 0x8450
#define GL_FOG_COORDINATE 0x8451
#define GL_FOG_COORDINATE_EXT 0x8451
#define GL_FOG_COORD 0x8451
#define GL_FRAGMENT_DEPTH 0x8452
#define GL_FRAGMENT_DEPTH_EXT 0x8452
#define GL_CURRENT_FOG_COORDINATE 0x8453
#define GL_CURRENT_FOG_COORD 0x8453
#define GL_CURRENT_FOG_COORDINATE_EXT 0x8453
#define GL_FOG_COORDINATE_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_ARRAY_TYPE_EXT 0x8454
#define GL_FOG_COORD_ARRAY_TYPE 0x8454
#define GL_FOG_COORDINATE_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_STRIDE_EXT 0x8455
#define GL_FOG_COORD_ARRAY_STRIDE 0x8455
#define GL_FOG_COORDINATE_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY_POINTER_EXT 0x8456
#define GL_FOG_COORD_ARRAY_POINTER 0x8456
#define GL_FOG_COORDINATE_ARRAY 0x8457
#define GL_FOG_COORDINATE_ARRAY_EXT 0x8457
#define GL_FOG_COORD_ARRAY 0x8457
#define GL_COLOR_SUM 0x8458
#define GL_COLOR_SUM_ARB 0x8458
#define GL_COLOR_SUM_EXT 0x8458
#define GL_CURRENT_SECONDARY_COLOR 0x8459
#define GL_CURRENT_SECONDARY_COLOR_EXT 0x8459
#define GL_SECONDARY_COLOR_ARRAY_SIZE 0x845A
#define GL_SECONDARY_COLOR_ARRAY_SIZE_EXT 0x845A
#define GL_SECONDARY_COLOR_ARRAY_TYPE 0x845B
#define GL_SECONDARY_COLOR_ARRAY_TYPE_EXT 0x845B
#define GL_SECONDARY_COLOR_ARRAY_STRIDE 0x845C
#define GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT 0x845C
#define GL_SECONDARY_COLOR_ARRAY_POINTER 0x845D
#define GL_SECONDARY_COLOR_ARRAY_POINTER_EXT 0x845D
#define GL_SECONDARY_COLOR_ARRAY 0x845E
#define GL_SECONDARY_COLOR_ARRAY_EXT 0x845E
#define GL_CURRENT_RASTER_SECONDARY_COLOR 0x845F
#define GL_ALIASED_POINT_SIZE_RANGE 0x846D
#define GL_ALIASED_LINE_WIDTH_RANGE 0x846E
#define GL_SCREEN_COORDINATES_REND 0x8490
#define GL_INVERTED_SCREEN_W_REND 0x8491
#define GL_TEXTURE0 0x84C0
#define GL_TEXTURE0_ARB 0x84C0
#define GL_TEXTURE1 0x84C1
#define GL_TEXTURE1_ARB 0x84C1
#define GL_TEXTURE2 0x84C2
#define GL_TEXTURE2_ARB 0x84C2
#define GL_TEXTURE3 0x84C3
#define GL_TEXTURE3_ARB 0x84C3
#define GL_TEXTURE4 0x84C4
#define GL_TEXTURE4_ARB 0x84C4
#define GL_TEXTURE5 0x84C5
#define GL_TEXTURE5_ARB 0x84C5
#define GL_TEXTURE6 0x84C6
#define GL_TEXTURE6_ARB 0x84C6
#define GL_TEXTURE7 0x84C7
#define GL_TEXTURE7_ARB 0x84C7
#define GL_TEXTURE8 0x84C8
#define GL_TEXTURE8_ARB 0x84C8
#define GL_TEXTURE9 0x84C9
#define GL_TEXTURE9_ARB 0x84C9
#define GL_TEXTURE10 0x84CA
#define GL_TEXTURE10_ARB 0x84CA
#define GL_TEXTURE11 0x84CB
#define GL_TEXTURE11_ARB 0x84CB
#define GL_TEXTURE12 0x84CC
#define GL_TEXTURE12_ARB 0x84CC
#define GL_TEXTURE13 0x84CD
#define GL_TEXTURE13_ARB 0x84CD
#define GL_TEXTURE14 0x84CE
#define GL_TEXTURE14_ARB 0x84CE
#define GL_TEXTURE15 0x84CF
#define GL_TEXTURE15_ARB 0x84CF
#define GL_TEXTURE16 0x84D0
#define GL_TEXTURE16_ARB 0x84D0
#define GL_TEXTURE17 0x84D1
#define GL_TEXTURE17_ARB 0x84D1
#define GL_TEXTURE18 0x84D2
#define GL_TEXTURE18_ARB 0x84D2
#define GL_TEXTURE19 0x84D3
#define GL_TEXTURE19_ARB 0x84D3
#define GL_TEXTURE20 0x84D4
#define GL_TEXTURE20_ARB 0x84D4
#define GL_TEXTURE21 0x84D5
#define GL_TEXTURE21_ARB 0x84D5
#define GL_TEXTURE22 0x84D6
#define GL_TEXTURE22_ARB 0x84D6
#define GL_TEXTURE23 0x84D7
#define GL_TEXTURE23_ARB 0x84D7
#define GL_TEXTURE24 0x84D8
#define GL_TEXTURE24_ARB 0x84D8
#define GL_TEXTURE25 0x84D9
#define GL_TEXTURE25_ARB 0x84D9
#define GL_TEXTURE26 0x84DA
#define GL_TEXTURE26_ARB 0x84DA
#define GL_TEXTURE27 0x84DB
#define GL_TEXTURE27_ARB 0x84DB
#define GL_TEXTURE28 0x84DC
#define GL_TEXTURE28_ARB 0x84DC
#define GL_TEXTURE29 0x84DD
#define GL_TEXTURE29_ARB 0x84DD
#define GL_TEXTURE30 0x84DE
#define GL_TEXTURE30_ARB 0x84DE
#define GL_TEXTURE31 0x84DF
#define GL_TEXTURE31_ARB 0x84DF
#define GL_ACTIVE_TEXTURE 0x84E0
#define GL_ACTIVE_TEXTURE_ARB 0x84E0
#define GL_CLIENT_ACTIVE_TEXTURE 0x84E1
#define GL_CLIENT_ACTIVE_TEXTURE_ARB 0x84E1
#define GL_MAX_TEXTURE_UNITS 0x84E2
#define GL_MAX_TEXTURE_UNITS_ARB 0x84E2
#define GL_TRANSPOSE_MODELVIEW_MATRIX 0x84E3
#define GL_TRANSPOSE_MODELVIEW_MATRIX_ARB 0x84E3
#define GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV 0x84E3
#define GL_TRANSPOSE_PROJECTION_MATRIX 0x84E4
#define GL_TRANSPOSE_PROJECTION_MATRIX_ARB 0x84E4
#define GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV 0x84E4
#define GL_TRANSPOSE_TEXTURE_MATRIX 0x84E5
#define GL_TRANSPOSE_TEXTURE_MATRIX_ARB 0x84E5
#define GL_TRANSPOSE_COLOR_MATRIX 0x84E6
#define GL_TRANSPOSE_COLOR_MATRIX_ARB 0x84E6
#define GL_SUBTRACT 0x84E7
#define GL_SUBTRACT_ARB 0x84E7
#define GL_MAX_RENDERBUFFER_SIZE 0x84E8
#define GL_MAX_RENDERBUFFER_SIZE_EXT 0x84E8
#define GL_MAX_RENDERBUFFER_SIZE_OES 0x84E8
#define GL_COMPRESSED_ALPHA 0x84E9
#define GL_COMPRESSED_ALPHA_ARB 0x84E9
#define GL_COMPRESSED_LUMINANCE 0x84EA
#define GL_COMPRESSED_LUMINANCE_ARB 0x84EA
#define GL_COMPRESSED_LUMINANCE_ALPHA 0x84EB
#define GL_COMPRESSED_LUMINANCE_ALPHA_ARB 0x84EB
#define GL_COMPRESSED_INTENSITY 0x84EC
#define GL_COMPRESSED_INTENSITY_ARB 0x84EC
#define GL_COMPRESSED_RGB 0x84ED
#define GL_COMPRESSED_RGB_ARB 0x84ED
#define GL_COMPRESSED_RGBA 0x84EE
#define GL_COMPRESSED_RGBA_ARB 0x84EE
#define GL_TEXTURE_COMPRESSION_HINT 0x84EF
#define GL_TEXTURE_COMPRESSION_HINT_ARB 0x84EF
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER 0x84F0
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER 0x84F1
#define GL_ALL_COMPLETED_NV 0x84F2
#define GL_FENCE_STATUS_NV 0x84F3
#define GL_FENCE_CONDITION_NV 0x84F4
#define GL_TEXTURE_RECTANGLE 0x84F5
#define GL_TEXTURE_RECTANGLE_ARB 0x84F5
#define GL_TEXTURE_RECTANGLE_NV 0x84F5
#define GL_TEXTURE_BINDING_RECTANGLE 0x84F6
#define GL_TEXTURE_BINDING_RECTANGLE_ARB 0x84F6
#define GL_TEXTURE_BINDING_RECTANGLE_NV 0x84F6
#define GL_PROXY_TEXTURE_RECTANGLE 0x84F7
#define GL_PROXY_TEXTURE_RECTANGLE_ARB 0x84F7
#define GL_PROXY_TEXTURE_RECTANGLE_NV 0x84F7
#define GL_MAX_RECTANGLE_TEXTURE_SIZE 0x84F8
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB 0x84F8
#define GL_MAX_RECTANGLE_TEXTURE_SIZE_NV 0x84F8
#define GL_DEPTH_STENCIL 0x84F9
#define GL_DEPTH_STENCIL_EXT 0x84F9
#define GL_DEPTH_STENCIL_NV 0x84F9
#define GL_DEPTH_STENCIL_OES 0x84F9
#define GL_UNSIGNED_INT_24_8 0x84FA
#define GL_UNSIGNED_INT_24_8_EXT 0x84FA
#define GL_UNSIGNED_INT_24_8_NV 0x84FA
#define GL_UNSIGNED_INT_24_8_OES 0x84FA
#define GL_MAX_TEXTURE_LOD_BIAS 0x84FD
#define GL_MAX_TEXTURE_LOD_BIAS_EXT 0x84FD
#define GL_TEXTURE_MAX_ANISOTROPY 0x84FE
#define GL_TEXTURE_MAX_ANISOTROPY_EXT 0x84FE
#define GL_MAX_TEXTURE_MAX_ANISOTROPY 0x84FF
#define GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT 0x84FF
#define GL_TEXTURE_FILTER_CONTROL 0x8500
#define GL_TEXTURE_FILTER_CONTROL_EXT 0x8500
#define GL_TEXTURE_LOD_BIAS 0x8501
#define GL_TEXTURE_LOD_BIAS_EXT 0x8501
#define GL_MODELVIEW1_STACK_DEPTH_EXT 0x8502
#define GL_COMBINE4_NV 0x8503
#define GL_MAX_SHININESS_NV 0x8504
#define GL_MAX_SPOT_EXPONENT_NV 0x8505
#define GL_MODELVIEW1_MATRIX_EXT 0x8506
#define GL_INCR_WRAP 0x8507
#define GL_INCR_WRAP_EXT 0x8507
#define GL_INCR_WRAP_OES 0x8507
#define GL_DECR_WRAP 0x8508
#define GL_DECR_WRAP_EXT 0x8508
#define GL_DECR_WRAP_OES 0x8508
#define GL_VERTEX_WEIGHTING_EXT 0x8509
#define GL_MODELVIEW1_ARB 0x850A
#define GL_MODELVIEW1_EXT 0x850A
#define GL_CURRENT_VERTEX_WEIGHT_EXT 0x850B
#define GL_VERTEX_WEIGHT_ARRAY_EXT 0x850C
#define GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT 0x850D
#define GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT 0x850E
#define GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT 0x850F
#define GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT 0x8510
#define GL_NORMAL_MAP 0x8511
#define GL_NORMAL_MAP_ARB 0x8511
#define GL_NORMAL_MAP_EXT 0x8511
#define GL_NORMAL_MAP_NV 0x8511
#define GL_NORMAL_MAP_OES 0x8511
#define GL_REFLECTION_MAP 0x8512
#define GL_REFLECTION_MAP_ARB 0x8512
#define GL_REFLECTION_MAP_EXT 0x8512
#define GL_REFLECTION_MAP_NV 0x8512
#define GL_REFLECTION_MAP_OES 0x8512
#define GL_TEXTURE_CUBE_MAP 0x8513
#define GL_TEXTURE_CUBE_MAP_ARB 0x8513
#define GL_TEXTURE_CUBE_MAP_EXT 0x8513
#define GL_TEXTURE_CUBE_MAP_OES 0x8513
#define GL_TEXTURE_BINDING_CUBE_MAP 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_ARB 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_EXT 0x8514
#define GL_TEXTURE_BINDING_CUBE_MAP_OES 0x8514
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT 0x8515
#define GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES 0x8515
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT 0x8516
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES 0x8516
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT 0x8517
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES 0x8517
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT 0x8518
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES 0x8518
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z 0x8519
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x8519
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT 0x8519
#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES 0x8519
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z 0x851A
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x851A
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT 0x851A
#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES 0x851A
#define GL_PROXY_TEXTURE_CUBE_MAP 0x851B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARB 0x851B
#define GL_PROXY_TEXTURE_CUBE_MAP_EXT 0x851B
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE 0x851C
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB 0x851C
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT 0x851C
#define GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES 0x851C
#define GL_VERTEX_ARRAY_RANGE_APPLE 0x851D
#define GL_VERTEX_ARRAY_RANGE_NV 0x851D
#define GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE 0x851E
#define GL_VERTEX_ARRAY_RANGE_LENGTH_NV 0x851E
#define GL_VERTEX_ARRAY_RANGE_VALID_NV 0x851F
#define GL_VERTEX_ARRAY_STORAGE_HINT_APPLE 0x851F
#define GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV 0x8520
#define GL_VERTEX_ARRAY_RANGE_POINTER_APPLE 0x8521
#define GL_VERTEX_ARRAY_RANGE_POINTER_NV 0x8521
#define GL_REGISTER_COMBINERS_NV 0x8522
#define GL_VARIABLE_A_NV 0x8523
#define GL_VARIABLE_B_NV 0x8524
#define GL_VARIABLE_C_NV 0x8525
#define GL_VARIABLE_D_NV 0x8526
#define GL_VARIABLE_E_NV 0x8527
#define GL_VARIABLE_F_NV 0x8528
#define GL_VARIABLE_G_NV 0x8529
#define GL_CONSTANT_COLOR0_NV 0x852A
#define GL_CONSTANT_COLOR1_NV 0x852B
#define GL_PRIMARY_COLOR_NV 0x852C
#define GL_SECONDARY_COLOR_NV 0x852D
#define GL_SPARE0_NV 0x852E
#define GL_SPARE1_NV 0x852F
#define GL_DISCARD_NV 0x8530
#define GL_E_TIMES_F_NV 0x8531
#define GL_SPARE0_PLUS_SECONDARY_COLOR_NV 0x8532
#define GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV 0x8533
#define GL_MULTISAMPLE_FILTER_HINT_NV 0x8534
#define GL_PER_STAGE_CONSTANTS_NV 0x8535
#define GL_UNSIGNED_IDENTITY_NV 0x8536
#define GL_UNSIGNED_INVERT_NV 0x8537
#define GL_EXPAND_NORMAL_NV 0x8538
#define GL_EXPAND_NEGATE_NV 0x8539
#define GL_HALF_BIAS_NORMAL_NV 0x853A
#define GL_HALF_BIAS_NEGATE_NV 0x853B
#define GL_SIGNED_IDENTITY_NV 0x853C
#define GL_SIGNED_NEGATE_NV 0x853D
#define GL_SCALE_BY_TWO_NV 0x853E
#define GL_SCALE_BY_FOUR_NV 0x853F
#define GL_SCALE_BY_ONE_HALF_NV 0x8540
#define GL_BIAS_BY_NEGATIVE_ONE_HALF_NV 0x8541
#define GL_COMBINER_INPUT_NV 0x8542
#define GL_COMBINER_MAPPING_NV 0x8543
#define GL_COMBINER_COMPONENT_USAGE_NV 0x8544
#define GL_COMBINER_AB_DOT_PRODUCT_NV 0x8545
#define GL_COMBINER_CD_DOT_PRODUCT_NV 0x8546
#define GL_COMBINER_MUX_SUM_NV 0x8547
#define GL_COMBINER_SCALE_NV 0x8548
#define GL_COMBINER_BIAS_NV 0x8549
#define GL_COMBINER_AB_OUTPUT_NV 0x854A
#define GL_COMBINER_CD_OUTPUT_NV 0x854B
#define GL_COMBINER_SUM_OUTPUT_NV 0x854C
#define GL_MAX_GENERAL_COMBINERS_NV 0x854D
#define GL_NUM_GENERAL_COMBINERS_NV 0x854E
#define GL_COLOR_SUM_CLAMP_NV 0x854F
#define GL_COMBINER0_NV 0x8550
#define GL_COMBINER1_NV 0x8551
#define GL_COMBINER2_NV 0x8552
#define GL_COMBINER3_NV 0x8553
#define GL_COMBINER4_NV 0x8554
#define GL_COMBINER5_NV 0x8555
#define GL_COMBINER6_NV 0x8556
#define GL_COMBINER7_NV 0x8557
#define GL_PRIMITIVE_RESTART_NV 0x8558
#define GL_PRIMITIVE_RESTART_INDEX_NV 0x8559
#define GL_FOG_DISTANCE_MODE_NV 0x855A
#define GL_EYE_RADIAL_NV 0x855B
#define GL_EYE_PLANE_ABSOLUTE_NV 0x855C
#define GL_EMBOSS_LIGHT_NV 0x855D
#define GL_EMBOSS_CONSTANT_NV 0x855E
#define GL_EMBOSS_MAP_NV 0x855F
#define GL_RED_MIN_CLAMP_INGR 0x8560
#define GL_GREEN_MIN_CLAMP_INGR 0x8561
#define GL_BLUE_MIN_CLAMP_INGR 0x8562
#define GL_ALPHA_MIN_CLAMP_INGR 0x8563
#define GL_RED_MAX_CLAMP_INGR 0x8564
#define GL_GREEN_MAX_CLAMP_INGR 0x8565
#define GL_BLUE_MAX_CLAMP_INGR 0x8566
#define GL_ALPHA_MAX_CLAMP_INGR 0x8567
#define GL_INTERLACE_READ_INGR 0x8568
#define GL_COMBINE 0x8570
#define GL_COMBINE_ARB 0x8570
#define GL_COMBINE_EXT 0x8570
#define GL_COMBINE_RGB 0x8571
#define GL_COMBINE_RGB_ARB 0x8571
#define GL_COMBINE_RGB_EXT 0x8571
#define GL_COMBINE_ALPHA 0x8572
#define GL_COMBINE_ALPHA_ARB 0x8572
#define GL_COMBINE_ALPHA_EXT 0x8572
#define GL_RGB_SCALE 0x8573
#define GL_RGB_SCALE_ARB 0x8573
#define GL_RGB_SCALE_EXT 0x8573
#define GL_ADD_SIGNED 0x8574
#define GL_ADD_SIGNED_ARB 0x8574
#define GL_ADD_SIGNED_EXT 0x8574
#define GL_INTERPOLATE 0x8575
#define GL_INTERPOLATE_ARB 0x8575
#define GL_INTERPOLATE_EXT 0x8575
#define GL_CONSTANT 0x8576
#define GL_CONSTANT_ARB 0x8576
#define GL_CONSTANT_EXT 0x8576
#define GL_CONSTANT_NV 0x8576
#define GL_PRIMARY_COLOR 0x8577
#define GL_PRIMARY_COLOR_ARB 0x8577
#define GL_PRIMARY_COLOR_EXT 0x8577
#define GL_PREVIOUS 0x8578
#define GL_PREVIOUS_ARB 0x8578
#define GL_PREVIOUS_EXT 0x8578
#define GL_SOURCE0_RGB 0x8580
#define GL_SOURCE0_RGB_ARB 0x8580
#define GL_SOURCE0_RGB_EXT 0x8580
#define GL_SRC0_RGB 0x8580
#define GL_SOURCE1_RGB 0x8581
#define GL_SOURCE1_RGB_ARB 0x8581
#define GL_SOURCE1_RGB_EXT 0x8581
#define GL_SRC1_RGB 0x8581
#define GL_SOURCE2_RGB 0x8582
#define GL_SOURCE2_RGB_ARB 0x8582
#define GL_SOURCE2_RGB_EXT 0x8582
#define GL_SRC2_RGB 0x8582
#define GL_SOURCE3_RGB_NV 0x8583
#define GL_SOURCE0_ALPHA 0x8588
#define GL_SOURCE0_ALPHA_ARB 0x8588
#define GL_SOURCE0_ALPHA_EXT 0x8588
#define GL_SRC0_ALPHA 0x8588
#define GL_SOURCE1_ALPHA 0x8589
#define GL_SOURCE1_ALPHA_ARB 0x8589
#define GL_SOURCE1_ALPHA_EXT 0x8589
#define GL_SRC1_ALPHA 0x8589
#define GL_SRC1_ALPHA_EXT 0x8589
#define GL_SOURCE2_ALPHA 0x858A
#define GL_SOURCE2_ALPHA_ARB 0x858A
#define GL_SOURCE2_ALPHA_EXT 0x858A
#define GL_SRC2_ALPHA 0x858A
#define GL_SOURCE3_ALPHA_NV 0x858B
#define GL_OPERAND0_RGB 0x8590
#define GL_OPERAND0_RGB_ARB 0x8590
#define GL_OPERAND0_RGB_EXT 0x8590
#define GL_OPERAND1_RGB 0x8591
#define GL_OPERAND1_RGB_ARB 0x8591
#define GL_OPERAND1_RGB_EXT 0x8591
#define GL_OPERAND2_RGB 0x8592
#define GL_OPERAND2_RGB_ARB 0x8592
#define GL_OPERAND2_RGB_EXT 0x8592
#define GL_OPERAND3_RGB_NV 0x8593
#define GL_OPERAND0_ALPHA 0x8598
#define GL_OPERAND0_ALPHA_ARB 0x8598
#define GL_OPERAND0_ALPHA_EXT 0x8598
#define GL_OPERAND1_ALPHA 0x8599
#define GL_OPERAND1_ALPHA_ARB 0x8599
#define GL_OPERAND1_ALPHA_EXT 0x8599
#define GL_OPERAND2_ALPHA 0x859A
#define GL_OPERAND2_ALPHA_ARB 0x859A
#define GL_OPERAND2_ALPHA_EXT 0x859A
#define GL_OPERAND3_ALPHA_NV 0x859B
#define GL_PACK_SUBSAMPLE_RATE_SGIX 0x85A0
#define GL_UNPACK_SUBSAMPLE_RATE_SGIX 0x85A1
#define GL_PIXEL_SUBSAMPLE_4444_SGIX 0x85A2
#define GL_PIXEL_SUBSAMPLE_2424_SGIX 0x85A3
#define GL_PIXEL_SUBSAMPLE_4242_SGIX 0x85A4
#define GL_PERTURB_EXT 0x85AE
#define GL_TEXTURE_NORMAL_EXT 0x85AF
#define GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE 0x85B0
#define GL_TRANSFORM_HINT_APPLE 0x85B1
#define GL_UNPACK_CLIENT_STORAGE_APPLE 0x85B2
#define GL_BUFFER_OBJECT_APPLE 0x85B3
#define GL_STORAGE_CLIENT_APPLE 0x85B4
#define GL_VERTEX_ARRAY_BINDING 0x85B5
#define GL_VERTEX_ARRAY_BINDING_APPLE 0x85B5
#define GL_VERTEX_ARRAY_BINDING_OES 0x85B5
#define GL_TEXTURE_RANGE_LENGTH_APPLE 0x85B7
#define GL_TEXTURE_RANGE_POINTER_APPLE 0x85B8
#define GL_YCBCR_422_APPLE 0x85B9
#define GL_UNSIGNED_SHORT_8_8_APPLE 0x85BA
#define GL_UNSIGNED_SHORT_8_8_MESA 0x85BA
#define GL_UNSIGNED_SHORT_8_8_REV_APPLE 0x85BB
#define GL_UNSIGNED_SHORT_8_8_REV_MESA 0x85BB
#define GL_TEXTURE_STORAGE_HINT_APPLE 0x85BC
#define GL_STORAGE_PRIVATE_APPLE 0x85BD
#define GL_STORAGE_CACHED_APPLE 0x85BE
#define GL_STORAGE_SHARED_APPLE 0x85BF
#define GL_REPLACEMENT_CODE_ARRAY_SUN 0x85C0
#define GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN 0x85C1
#define GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN 0x85C2
#define GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN 0x85C3
#define GL_R1UI_V3F_SUN 0x85C4
#define GL_R1UI_C4UB_V3F_SUN 0x85C5
#define GL_R1UI_C3F_V3F_SUN 0x85C6
#define GL_R1UI_N3F_V3F_SUN 0x85C7
#define GL_R1UI_C4F_N3F_V3F_SUN 0x85C8
#define GL_R1UI_T2F_V3F_SUN 0x85C9
#define GL_R1UI_T2F_N3F_V3F_SUN 0x85CA
#define GL_R1UI_T2F_C4F_N3F_V3F_SUN 0x85CB
#define GL_SLICE_ACCUM_SUN 0x85CC
#define GL_QUAD_MESH_SUN 0x8614
#define GL_TRIANGLE_MESH_SUN 0x8615
#define GL_VERTEX_PROGRAM_ARB 0x8620
#define GL_VERTEX_PROGRAM_NV 0x8620
#define GL_VERTEX_STATE_PROGRAM_NV 0x8621
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED 0x8622
#define GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB 0x8622
#define GL_ATTRIB_ARRAY_SIZE_NV 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_SIZE 0x8623
#define GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB 0x8623
#define GL_ATTRIB_ARRAY_STRIDE_NV 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE 0x8624
#define GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB 0x8624
#define GL_ATTRIB_ARRAY_TYPE_NV 0x8625
#define GL_VERTEX_ATTRIB_ARRAY_TYPE 0x8625
#define GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB 0x8625
#define GL_CURRENT_ATTRIB_NV 0x8626
#define GL_CURRENT_VERTEX_ATTRIB 0x8626
#define GL_CURRENT_VERTEX_ATTRIB_ARB 0x8626
#define GL_PROGRAM_LENGTH_ARB 0x8627
#define GL_PROGRAM_LENGTH_NV 0x8627
#define GL_PROGRAM_STRING_ARB 0x8628
#define GL_PROGRAM_STRING_NV 0x8628
#define GL_MODELVIEW_PROJECTION_NV 0x8629
#define GL_IDENTITY_NV 0x862A
#define GL_INVERSE_NV 0x862B
#define GL_TRANSPOSE_NV 0x862C
#define GL_INVERSE_TRANSPOSE_NV 0x862D
#define GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB 0x862E
#define GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV 0x862E
#define GL_MAX_PROGRAM_MATRICES_ARB 0x862F
#define GL_MAX_TRACK_MATRICES_NV 0x862F
#define GL_MATRIX0_NV 0x8630
#define GL_MATRIX1_NV 0x8631
#define GL_MATRIX2_NV 0x8632
#define GL_MATRIX3_NV 0x8633
#define GL_MATRIX4_NV 0x8634
#define GL_MATRIX5_NV 0x8635
#define GL_MATRIX6_NV 0x8636
#define GL_MATRIX7_NV 0x8637
#define GL_CURRENT_MATRIX_STACK_DEPTH_ARB 0x8640
#define GL_CURRENT_MATRIX_STACK_DEPTH_NV 0x8640
#define GL_CURRENT_MATRIX_ARB 0x8641
#define GL_CURRENT_MATRIX_NV 0x8641
#define GL_VERTEX_PROGRAM_POINT_SIZE 0x8642
#define GL_VERTEX_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_VERTEX_PROGRAM_POINT_SIZE_NV 0x8642
#define GL_PROGRAM_POINT_SIZE 0x8642
#define GL_PROGRAM_POINT_SIZE_ARB 0x8642
#define GL_PROGRAM_POINT_SIZE_EXT 0x8642
#define GL_VERTEX_PROGRAM_TWO_SIDE 0x8643
#define GL_VERTEX_PROGRAM_TWO_SIDE_ARB 0x8643
#define GL_VERTEX_PROGRAM_TWO_SIDE_NV 0x8643
#define GL_PROGRAM_PARAMETER_NV 0x8644
#define GL_ATTRIB_ARRAY_POINTER_NV 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_POINTER 0x8645
#define GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB 0x8645
#define GL_PROGRAM_TARGET_NV 0x8646
#define GL_PROGRAM_RESIDENT_NV 0x8647
#define GL_TRACK_MATRIX_NV 0x8648
#define GL_TRACK_MATRIX_TRANSFORM_NV 0x8649
#define GL_VERTEX_PROGRAM_BINDING_NV 0x864A
#define GL_PROGRAM_ERROR_POSITION_ARB 0x864B
#define GL_PROGRAM_ERROR_POSITION_NV 0x864B
#define GL_OFFSET_TEXTURE_RECTANGLE_NV 0x864C
#define GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV 0x864D
#define GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV 0x864E
#define GL_DEPTH_CLAMP 0x864F
#define GL_DEPTH_CLAMP_NV 0x864F
#define GL_DEPTH_CLAMP_EXT 0x864F
#define GL_VERTEX_ATTRIB_ARRAY0_NV 0x8650
#define GL_VERTEX_ATTRIB_ARRAY1_NV 0x8651
#define GL_VERTEX_ATTRIB_ARRAY2_NV 0x8652
#define GL_VERTEX_ATTRIB_ARRAY3_NV 0x8653
#define GL_VERTEX_ATTRIB_ARRAY4_NV 0x8654
#define GL_VERTEX_ATTRIB_ARRAY5_NV 0x8655
#define GL_VERTEX_ATTRIB_ARRAY6_NV 0x8656
#define GL_VERTEX_ATTRIB_ARRAY7_NV 0x8657
#define GL_VERTEX_ATTRIB_ARRAY8_NV 0x8658
#define GL_VERTEX_ATTRIB_ARRAY9_NV 0x8659
#define GL_VERTEX_ATTRIB_ARRAY10_NV 0x865A
#define GL_VERTEX_ATTRIB_ARRAY11_NV 0x865B
#define GL_VERTEX_ATTRIB_ARRAY12_NV 0x865C
#define GL_VERTEX_ATTRIB_ARRAY13_NV 0x865D
#define GL_VERTEX_ATTRIB_ARRAY14_NV 0x865E
#define GL_VERTEX_ATTRIB_ARRAY15_NV 0x865F
#define GL_MAP1_VERTEX_ATTRIB0_4_NV 0x8660
#define GL_MAP1_VERTEX_ATTRIB1_4_NV 0x8661
#define GL_MAP1_VERTEX_ATTRIB2_4_NV 0x8662
#define GL_MAP1_VERTEX_ATTRIB3_4_NV 0x8663
#define GL_MAP1_VERTEX_ATTRIB4_4_NV 0x8664
#define GL_MAP1_VERTEX_ATTRIB5_4_NV 0x8665
#define GL_MAP1_VERTEX_ATTRIB6_4_NV 0x8666
#define GL_MAP1_VERTEX_ATTRIB7_4_NV 0x8667
#define GL_MAP1_VERTEX_ATTRIB8_4_NV 0x8668
#define GL_MAP1_VERTEX_ATTRIB9_4_NV 0x8669
#define GL_MAP1_VERTEX_ATTRIB10_4_NV 0x866A
#define GL_MAP1_VERTEX_ATTRIB11_4_NV 0x866B
#define GL_MAP1_VERTEX_ATTRIB12_4_NV 0x866C
#define GL_MAP1_VERTEX_ATTRIB13_4_NV 0x866D
#define GL_MAP1_VERTEX_ATTRIB14_4_NV 0x866E
#define GL_MAP1_VERTEX_ATTRIB15_4_NV 0x866F
#define GL_MAP2_VERTEX_ATTRIB0_4_NV 0x8670
#define GL_MAP2_VERTEX_ATTRIB1_4_NV 0x8671
#define GL_MAP2_VERTEX_ATTRIB2_4_NV 0x8672
#define GL_MAP2_VERTEX_ATTRIB3_4_NV 0x8673
#define GL_MAP2_VERTEX_ATTRIB4_4_NV 0x8674
#define GL_MAP2_VERTEX_ATTRIB5_4_NV 0x8675
#define GL_MAP2_VERTEX_ATTRIB6_4_NV 0x8676
#define GL_MAP2_VERTEX_ATTRIB7_4_NV 0x8677
#define GL_PROGRAM_BINDING_ARB 0x8677
#define GL_MAP2_VERTEX_ATTRIB8_4_NV 0x8678
#define GL_MAP2_VERTEX_ATTRIB9_4_NV 0x8679
#define GL_MAP2_VERTEX_ATTRIB10_4_NV 0x867A
#define GL_MAP2_VERTEX_ATTRIB11_4_NV 0x867B
#define GL_MAP2_VERTEX_ATTRIB12_4_NV 0x867C
#define GL_MAP2_VERTEX_ATTRIB13_4_NV 0x867D
#define GL_MAP2_VERTEX_ATTRIB14_4_NV 0x867E
#define GL_MAP2_VERTEX_ATTRIB15_4_NV 0x867F
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE 0x86A0
#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB 0x86A0
#define GL_TEXTURE_COMPRESSED 0x86A1
#define GL_TEXTURE_COMPRESSED_ARB 0x86A1
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS 0x86A2
#define GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A2
#define GL_COMPRESSED_TEXTURE_FORMATS 0x86A3
#define GL_COMPRESSED_TEXTURE_FORMATS_ARB 0x86A3
#define GL_MAX_VERTEX_UNITS_ARB 0x86A4
#define GL_MAX_VERTEX_UNITS_OES 0x86A4
#define GL_ACTIVE_VERTEX_UNITS_ARB 0x86A5
#define GL_WEIGHT_SUM_UNITY_ARB 0x86A6
#define GL_VERTEX_BLEND_ARB 0x86A7
#define GL_CURRENT_WEIGHT_ARB 0x86A8
#define GL_WEIGHT_ARRAY_TYPE_ARB 0x86A9
#define GL_WEIGHT_ARRAY_TYPE_OES 0x86A9
#define GL_WEIGHT_ARRAY_STRIDE_ARB 0x86AA
#define GL_WEIGHT_ARRAY_STRIDE_OES 0x86AA
#define GL_WEIGHT_ARRAY_SIZE_ARB 0x86AB
#define GL_WEIGHT_ARRAY_SIZE_OES 0x86AB
#define GL_WEIGHT_ARRAY_POINTER_ARB 0x86AC
#define GL_WEIGHT_ARRAY_POINTER_OES 0x86AC
#define GL_WEIGHT_ARRAY_ARB 0x86AD
#define GL_WEIGHT_ARRAY_OES 0x86AD
#define GL_DOT3_RGB 0x86AE
#define GL_DOT3_RGB_ARB 0x86AE
#define GL_DOT3_RGBA 0x86AF
#define GL_DOT3_RGBA_ARB 0x86AF
#define GL_DOT3_RGBA_IMG 0x86AF
#define GL_COMPRESSED_RGB_FXT1_3DFX 0x86B0
#define GL_COMPRESSED_RGBA_FXT1_3DFX 0x86B1
#define GL_MULTISAMPLE_3DFX 0x86B2
#define GL_SAMPLE_BUFFERS_3DFX 0x86B3
#define GL_SAMPLES_3DFX 0x86B4
#define GL_EVAL_2D_NV 0x86C0
#define GL_EVAL_TRIANGULAR_2D_NV 0x86C1
#define GL_MAP_TESSELLATION_NV 0x86C2
#define GL_MAP_ATTRIB_U_ORDER_NV 0x86C3
#define GL_MAP_ATTRIB_V_ORDER_NV 0x86C4
#define GL_EVAL_FRACTIONAL_TESSELLATION_NV 0x86C5
#define GL_EVAL_VERTEX_ATTRIB0_NV 0x86C6
#define GL_EVAL_VERTEX_ATTRIB1_NV 0x86C7
#define GL_EVAL_VERTEX_ATTRIB2_NV 0x86C8
#define GL_EVAL_VERTEX_ATTRIB3_NV 0x86C9
#define GL_EVAL_VERTEX_ATTRIB4_NV 0x86CA
#define GL_EVAL_VERTEX_ATTRIB5_NV 0x86CB
#define GL_EVAL_VERTEX_ATTRIB6_NV 0x86CC
#define GL_EVAL_VERTEX_ATTRIB7_NV 0x86CD
#define GL_EVAL_VERTEX_ATTRIB8_NV 0x86CE
#define GL_EVAL_VERTEX_ATTRIB9_NV 0x86CF
#define GL_EVAL_VERTEX_ATTRIB10_NV 0x86D0
#define GL_EVAL_VERTEX_ATTRIB11_NV 0x86D1
#define GL_EVAL_VERTEX_ATTRIB12_NV 0x86D2
#define GL_EVAL_VERTEX_ATTRIB13_NV 0x86D3
#define GL_EVAL_VERTEX_ATTRIB14_NV 0x86D4
#define GL_EVAL_VERTEX_ATTRIB15_NV 0x86D5
#define GL_MAX_MAP_TESSELLATION_NV 0x86D6
#define GL_MAX_RATIONAL_EVAL_ORDER_NV 0x86D7
#define GL_MAX_PROGRAM_PATCH_ATTRIBS_NV 0x86D8
#define GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV 0x86D9
#define GL_UNSIGNED_INT_S8_S8_8_8_NV 0x86DA
#define GL_UNSIGNED_INT_8_8_S8_S8_REV_NV 0x86DB
#define GL_DSDT_MAG_INTENSITY_NV 0x86DC
#define GL_SHADER_CONSISTENT_NV 0x86DD
#define GL_TEXTURE_SHADER_NV 0x86DE
#define GL_SHADER_OPERATION_NV 0x86DF
#define GL_CULL_MODES_NV 0x86E0
#define GL_OFFSET_TEXTURE_MATRIX_NV 0x86E1
#define GL_OFFSET_TEXTURE_2D_MATRIX_NV 0x86E1
#define GL_OFFSET_TEXTURE_SCALE_NV 0x86E2
#define GL_OFFSET_TEXTURE_2D_SCALE_NV 0x86E2
#define GL_OFFSET_TEXTURE_BIAS_NV 0x86E3
#define GL_OFFSET_TEXTURE_2D_BIAS_NV 0x86E3
#define GL_PREVIOUS_TEXTURE_INPUT_NV 0x86E4
#define GL_CONST_EYE_NV 0x86E5
#define GL_PASS_THROUGH_NV 0x86E6
#define GL_CULL_FRAGMENT_NV 0x86E7
#define GL_OFFSET_TEXTURE_2D_NV 0x86E8
#define GL_DEPENDENT_AR_TEXTURE_2D_NV 0x86E9
#define GL_DEPENDENT_GB_TEXTURE_2D_NV 0x86EA
#define GL_SURFACE_STATE_NV 0x86EB
#define GL_DOT_PRODUCT_NV 0x86EC
#define GL_DOT_PRODUCT_DEPTH_REPLACE_NV 0x86ED
#define GL_DOT_PRODUCT_TEXTURE_2D_NV 0x86EE
#define GL_DOT_PRODUCT_TEXTURE_3D_NV 0x86EF
#define GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV 0x86F0
#define GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV 0x86F1
#define GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV 0x86F2
#define GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV 0x86F3
#define GL_HILO_NV 0x86F4
#define GL_DSDT_NV 0x86F5
#define GL_DSDT_MAG_NV 0x86F6
#define GL_DSDT_MAG_VIB_NV 0x86F7
#define GL_HILO16_NV 0x86F8
#define GL_SIGNED_HILO_NV 0x86F9
#define GL_SIGNED_HILO16_NV 0x86FA
#define GL_SIGNED_RGBA_NV 0x86FB
#define GL_SIGNED_RGBA8_NV 0x86FC
#define GL_SURFACE_REGISTERED_NV 0x86FD
#define GL_SIGNED_RGB_NV 0x86FE
#define GL_SIGNED_RGB8_NV 0x86FF
#define GL_SURFACE_MAPPED_NV 0x8700
#define GL_SIGNED_LUMINANCE_NV 0x8701
#define GL_SIGNED_LUMINANCE8_NV 0x8702
#define GL_SIGNED_LUMINANCE_ALPHA_NV 0x8703
#define GL_SIGNED_LUMINANCE8_ALPHA8_NV 0x8704
#define GL_SIGNED_ALPHA_NV 0x8705
#define GL_SIGNED_ALPHA8_NV 0x8706
#define GL_SIGNED_INTENSITY_NV 0x8707
#define GL_SIGNED_INTENSITY8_NV 0x8708
#define GL_DSDT8_NV 0x8709
#define GL_DSDT8_MAG8_NV 0x870A
#define GL_DSDT8_MAG8_INTENSITY8_NV 0x870B
#define GL_SIGNED_RGB_UNSIGNED_ALPHA_NV 0x870C
#define GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV 0x870D
#define GL_HI_SCALE_NV 0x870E
#define GL_LO_SCALE_NV 0x870F
#define GL_DS_SCALE_NV 0x8710
#define GL_DT_SCALE_NV 0x8711
#define GL_MAGNITUDE_SCALE_NV 0x8712
#define GL_VIBRANCE_SCALE_NV 0x8713
#define GL_HI_BIAS_NV 0x8714
#define GL_LO_BIAS_NV 0x8715
#define GL_DS_BIAS_NV 0x8716
#define GL_DT_BIAS_NV 0x8717
#define GL_MAGNITUDE_BIAS_NV 0x8718
#define GL_VIBRANCE_BIAS_NV 0x8719
#define GL_TEXTURE_BORDER_VALUES_NV 0x871A
#define GL_TEXTURE_HI_SIZE_NV 0x871B
#define GL_TEXTURE_LO_SIZE_NV 0x871C
#define GL_TEXTURE_DS_SIZE_NV 0x871D
#define GL_TEXTURE_DT_SIZE_NV 0x871E
#define GL_TEXTURE_MAG_SIZE_NV 0x871F
#define GL_MODELVIEW2_ARB 0x8722
#define GL_MODELVIEW3_ARB 0x8723
#define GL_MODELVIEW4_ARB 0x8724
#define GL_MODELVIEW5_ARB 0x8725
#define GL_MODELVIEW6_ARB 0x8726
#define GL_MODELVIEW7_ARB 0x8727
#define GL_MODELVIEW8_ARB 0x8728
#define GL_MODELVIEW9_ARB 0x8729
#define GL_MODELVIEW10_ARB 0x872A
#define GL_MODELVIEW11_ARB 0x872B
#define GL_MODELVIEW12_ARB 0x872C
#define GL_MODELVIEW13_ARB 0x872D
#define GL_MODELVIEW14_ARB 0x872E
#define GL_MODELVIEW15_ARB 0x872F
#define GL_MODELVIEW16_ARB 0x8730
#define GL_MODELVIEW17_ARB 0x8731
#define GL_MODELVIEW18_ARB 0x8732
#define GL_MODELVIEW19_ARB 0x8733
#define GL_MODELVIEW20_ARB 0x8734
#define GL_MODELVIEW21_ARB 0x8735
#define GL_MODELVIEW22_ARB 0x8736
#define GL_MODELVIEW23_ARB 0x8737
#define GL_MODELVIEW24_ARB 0x8738
#define GL_MODELVIEW25_ARB 0x8739
#define GL_MODELVIEW26_ARB 0x873A
#define GL_MODELVIEW27_ARB 0x873B
#define GL_MODELVIEW28_ARB 0x873C
#define GL_MODELVIEW29_ARB 0x873D
#define GL_MODELVIEW30_ARB 0x873E
#define GL_MODELVIEW31_ARB 0x873F
#define GL_DOT3_RGB_EXT 0x8740
#define GL_Z400_BINARY_AMD 0x8740
#define GL_DOT3_RGBA_EXT 0x8741
#define GL_PROGRAM_BINARY_LENGTH_OES 0x8741
#define GL_PROGRAM_BINARY_LENGTH 0x8741
#define GL_MIRROR_CLAMP_ATI 0x8742
#define GL_MIRROR_CLAMP_EXT 0x8742
#define GL_MIRROR_CLAMP_TO_EDGE 0x8743
#define GL_MIRROR_CLAMP_TO_EDGE_ATI 0x8743
#define GL_MIRROR_CLAMP_TO_EDGE_EXT 0x8743
#define GL_MODULATE_ADD_ATI 0x8744
#define GL_MODULATE_SIGNED_ADD_ATI 0x8745
#define GL_MODULATE_SUBTRACT_ATI 0x8746
#define GL_SET_AMD 0x874A
#define GL_REPLACE_VALUE_AMD 0x874B
#define GL_STENCIL_OP_VALUE_AMD 0x874C
#define GL_STENCIL_BACK_OP_VALUE_AMD 0x874D
#define GL_VERTEX_ATTRIB_ARRAY_LONG 0x874E
#define GL_OCCLUSION_QUERY_EVENT_MASK_AMD 0x874F
#define GL_DEPTH_STENCIL_MESA 0x8750
#define GL_UNSIGNED_INT_24_8_MESA 0x8751
#define GL_UNSIGNED_INT_8_24_REV_MESA 0x8752
#define GL_UNSIGNED_SHORT_15_1_MESA 0x8753
#define GL_UNSIGNED_SHORT_1_15_REV_MESA 0x8754
#define GL_TRACE_MASK_MESA 0x8755
#define GL_TRACE_NAME_MESA 0x8756
#define GL_YCBCR_MESA 0x8757
#define GL_PACK_INVERT_MESA 0x8758
#define GL_DEBUG_OBJECT_MESA 0x8759
#define GL_TEXTURE_1D_STACK_MESAX 0x8759
#define GL_DEBUG_PRINT_MESA 0x875A
#define GL_TEXTURE_2D_STACK_MESAX 0x875A
#define GL_DEBUG_ASSERT_MESA 0x875B
#define GL_PROXY_TEXTURE_1D_STACK_MESAX 0x875B
#define GL_PROXY_TEXTURE_2D_STACK_MESAX 0x875C
#define GL_TEXTURE_1D_STACK_BINDING_MESAX 0x875D
#define GL_TEXTURE_2D_STACK_BINDING_MESAX 0x875E
#define GL_PROGRAM_BINARY_FORMAT_MESA 0x875F
#define GL_STATIC_ATI 0x8760
#define GL_DYNAMIC_ATI 0x8761
#define GL_PRESERVE_ATI 0x8762
#define GL_DISCARD_ATI 0x8763
#define GL_BUFFER_SIZE 0x8764
#define GL_BUFFER_SIZE_ARB 0x8764
#define GL_OBJECT_BUFFER_SIZE_ATI 0x8764
#define GL_BUFFER_USAGE 0x8765
#define GL_BUFFER_USAGE_ARB 0x8765
#define GL_OBJECT_BUFFER_USAGE_ATI 0x8765
#define GL_ARRAY_OBJECT_BUFFER_ATI 0x8766
#define GL_ARRAY_OBJECT_OFFSET_ATI 0x8767
#define GL_ELEMENT_ARRAY_ATI 0x8768
#define GL_ELEMENT_ARRAY_TYPE_ATI 0x8769
#define GL_ELEMENT_ARRAY_POINTER_ATI 0x876A
#define GL_MAX_VERTEX_STREAMS_ATI 0x876B
#define GL_VERTEX_STREAM0_ATI 0x876C
#define GL_VERTEX_STREAM1_ATI 0x876D
#define GL_VERTEX_STREAM2_ATI 0x876E
#define GL_VERTEX_STREAM3_ATI 0x876F
#define GL_VERTEX_STREAM4_ATI 0x8770
#define GL_VERTEX_STREAM5_ATI 0x8771
#define GL_VERTEX_STREAM6_ATI 0x8772
#define GL_VERTEX_STREAM7_ATI 0x8773
#define GL_VERTEX_SOURCE_ATI 0x8774
#define GL_BUMP_ROT_MATRIX_ATI 0x8775
#define GL_BUMP_ROT_MATRIX_SIZE_ATI 0x8776
#define GL_BUMP_NUM_TEX_UNITS_ATI 0x8777
#define GL_BUMP_TEX_UNITS_ATI 0x8778
#define GL_DUDV_ATI 0x8779
#define GL_DU8DV8_ATI 0x877A
#define GL_BUMP_ENVMAP_ATI 0x877B
#define GL_BUMP_TARGET_ATI 0x877C
#define GL_VERTEX_SHADER_EXT 0x8780
#define GL_VERTEX_SHADER_BINDING_EXT 0x8781
#define GL_OP_INDEX_EXT 0x8782
#define GL_OP_NEGATE_EXT 0x8783
#define GL_OP_DOT3_EXT 0x8784
#define GL_OP_DOT4_EXT 0x8785
#define GL_OP_MUL_EXT 0x8786
#define GL_OP_ADD_EXT 0x8787
#define GL_OP_MADD_EXT 0x8788
#define GL_OP_FRAC_EXT 0x8789
#define GL_OP_MAX_EXT 0x878A
#define GL_OP_MIN_EXT 0x878B
#define GL_OP_SET_GE_EXT 0x878C
#define GL_OP_SET_LT_EXT 0x878D
#define GL_OP_CLAMP_EXT 0x878E
#define GL_OP_FLOOR_EXT 0x878F
#define GL_OP_ROUND_EXT 0x8790
#define GL_OP_EXP_BASE_2_EXT 0x8791
#define GL_OP_LOG_BASE_2_EXT 0x8792
#define GL_OP_POWER_EXT 0x8793
#define GL_OP_RECIP_EXT 0x8794
#define GL_OP_RECIP_SQRT_EXT 0x8795
#define GL_OP_SUB_EXT 0x8796
#define GL_OP_CROSS_PRODUCT_EXT 0x8797
#define GL_OP_MULTIPLY_MATRIX_EXT 0x8798
#define GL_OP_MOV_EXT 0x8799
#define GL_OUTPUT_VERTEX_EXT 0x879A
#define GL_OUTPUT_COLOR0_EXT 0x879B
#define GL_OUTPUT_COLOR1_EXT 0x879C
#define GL_OUTPUT_TEXTURE_COORD0_EXT 0x879D
#define GL_OUTPUT_TEXTURE_COORD1_EXT 0x879E
#define GL_OUTPUT_TEXTURE_COORD2_EXT 0x879F
#define GL_OUTPUT_TEXTURE_COORD3_EXT 0x87A0
#define GL_OUTPUT_TEXTURE_COORD4_EXT 0x87A1
#define GL_OUTPUT_TEXTURE_COORD5_EXT 0x87A2
#define GL_OUTPUT_TEXTURE_COORD6_EXT 0x87A3
#define GL_OUTPUT_TEXTURE_COORD7_EXT 0x87A4
#define GL_OUTPUT_TEXTURE_COORD8_EXT 0x87A5
#define GL_OUTPUT_TEXTURE_COORD9_EXT 0x87A6
#define GL_OUTPUT_TEXTURE_COORD10_EXT 0x87A7
#define GL_OUTPUT_TEXTURE_COORD11_EXT 0x87A8
#define GL_OUTPUT_TEXTURE_COORD12_EXT 0x87A9
#define GL_OUTPUT_TEXTURE_COORD13_EXT 0x87AA
#define GL_OUTPUT_TEXTURE_COORD14_EXT 0x87AB
#define GL_OUTPUT_TEXTURE_COORD15_EXT 0x87AC
#define GL_OUTPUT_TEXTURE_COORD16_EXT 0x87AD
#define GL_OUTPUT_TEXTURE_COORD17_EXT 0x87AE
#define GL_OUTPUT_TEXTURE_COORD18_EXT 0x87AF
#define GL_OUTPUT_TEXTURE_COORD19_EXT 0x87B0
#define GL_OUTPUT_TEXTURE_COORD20_EXT 0x87B1
#define GL_OUTPUT_TEXTURE_COORD21_EXT 0x87B2
#define GL_OUTPUT_TEXTURE_COORD22_EXT 0x87B3
#define GL_OUTPUT_TEXTURE_COORD23_EXT 0x87B4
#define GL_OUTPUT_TEXTURE_COORD24_EXT 0x87B5
#define GL_OUTPUT_TEXTURE_COORD25_EXT 0x87B6
#define GL_OUTPUT_TEXTURE_COORD26_EXT 0x87B7
#define GL_OUTPUT_TEXTURE_COORD27_EXT 0x87B8
#define GL_OUTPUT_TEXTURE_COORD28_EXT 0x87B9
#define GL_OUTPUT_TEXTURE_COORD29_EXT 0x87BA
#define GL_OUTPUT_TEXTURE_COORD30_EXT 0x87BB
#define GL_OUTPUT_TEXTURE_COORD31_EXT 0x87BC
#define GL_OUTPUT_FOG_EXT 0x87BD
#define GL_SCALAR_EXT 0x87BE
#define GL_VECTOR_EXT 0x87BF
#define GL_MATRIX_EXT 0x87C0
#define GL_VARIANT_EXT 0x87C1
#define GL_INVARIANT_EXT 0x87C2
#define GL_LOCAL_CONSTANT_EXT 0x87C3
#define GL_LOCAL_EXT 0x87C4
#define GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87C5
#define GL_MAX_VERTEX_SHADER_VARIANTS_EXT 0x87C6
#define GL_MAX_VERTEX_SHADER_INVARIANTS_EXT 0x87C7
#define GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87C8
#define GL_MAX_VERTEX_SHADER_LOCALS_EXT 0x87C9
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CA
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT 0x87CB
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87CC
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT 0x87CD
#define GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT 0x87CE
#define GL_VERTEX_SHADER_INSTRUCTIONS_EXT 0x87CF
#define GL_VERTEX_SHADER_VARIANTS_EXT 0x87D0
#define GL_VERTEX_SHADER_INVARIANTS_EXT 0x87D1
#define GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT 0x87D2
#define GL_VERTEX_SHADER_LOCALS_EXT 0x87D3
#define GL_VERTEX_SHADER_OPTIMIZED_EXT 0x87D4
#define GL_X_EXT 0x87D5
#define GL_Y_EXT 0x87D6
#define GL_Z_EXT 0x87D7
#define GL_W_EXT 0x87D8
#define GL_NEGATIVE_X_EXT 0x87D9
#define GL_NEGATIVE_Y_EXT 0x87DA
#define GL_NEGATIVE_Z_EXT 0x87DB
#define GL_NEGATIVE_W_EXT 0x87DC
#define GL_ZERO_EXT 0x87DD
#define GL_ONE_EXT 0x87DE
#define GL_NEGATIVE_ONE_EXT 0x87DF
#define GL_NORMALIZED_RANGE_EXT 0x87E0
#define GL_FULL_RANGE_EXT 0x87E1
#define GL_CURRENT_VERTEX_EXT 0x87E2
#define GL_MVP_MATRIX_EXT 0x87E3
#define GL_VARIANT_VALUE_EXT 0x87E4
#define GL_VARIANT_DATATYPE_EXT 0x87E5
#define GL_VARIANT_ARRAY_STRIDE_EXT 0x87E6
#define GL_VARIANT_ARRAY_TYPE_EXT 0x87E7
#define GL_VARIANT_ARRAY_EXT 0x87E8
#define GL_VARIANT_ARRAY_POINTER_EXT 0x87E9
#define GL_INVARIANT_VALUE_EXT 0x87EA
#define GL_INVARIANT_DATATYPE_EXT 0x87EB
#define GL_LOCAL_CONSTANT_VALUE_EXT 0x87EC
#define GL_LOCAL_CONSTANT_DATATYPE_EXT 0x87ED
#define GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD 0x87EE
#define GL_PN_TRIANGLES_ATI 0x87F0
#define GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F1
#define GL_PN_TRIANGLES_POINT_MODE_ATI 0x87F2
#define GL_PN_TRIANGLES_NORMAL_MODE_ATI 0x87F3
#define GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI 0x87F4
#define GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI 0x87F5
#define GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI 0x87F6
#define GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI 0x87F7
#define GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI 0x87F8
#define GL_3DC_X_AMD 0x87F9
#define GL_3DC_XY_AMD 0x87FA
#define GL_VBO_FREE_MEMORY_ATI 0x87FB
#define GL_TEXTURE_FREE_MEMORY_ATI 0x87FC
#define GL_RENDERBUFFER_FREE_MEMORY_ATI 0x87FD
#define GL_NUM_PROGRAM_BINARY_FORMATS 0x87FE
#define GL_NUM_PROGRAM_BINARY_FORMATS_OES 0x87FE
#define GL_PROGRAM_BINARY_FORMATS 0x87FF
#define GL_PROGRAM_BINARY_FORMATS_OES 0x87FF
#define GL_STENCIL_BACK_FUNC 0x8800
#define GL_STENCIL_BACK_FUNC_ATI 0x8800
#define GL_STENCIL_BACK_FAIL 0x8801
#define GL_STENCIL_BACK_FAIL_ATI 0x8801
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI 0x8802
#define GL_STENCIL_BACK_PASS_DEPTH_PASS 0x8803
#define GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI 0x8803
#define GL_FRAGMENT_PROGRAM_ARB 0x8804
#define GL_PROGRAM_ALU_INSTRUCTIONS_ARB 0x8805
#define GL_PROGRAM_TEX_INSTRUCTIONS_ARB 0x8806
#define GL_PROGRAM_TEX_INDIRECTIONS_ARB 0x8807
#define GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x8808
#define GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x8809
#define GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x880A
#define GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB 0x880B
#define GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB 0x880C
#define GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB 0x880D
#define GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB 0x880E
#define GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB 0x880F
#define GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB 0x8810
#define GL_RGBA32F 0x8814
#define GL_RGBA32F_ARB 0x8814
#define GL_RGBA32F_EXT 0x8814
#define GL_RGBA_FLOAT32_APPLE 0x8814
#define GL_RGBA_FLOAT32_ATI 0x8814
#define GL_RGB32F 0x8815
#define GL_RGB32F_ARB 0x8815
#define GL_RGB32F_EXT 0x8815
#define GL_RGB_FLOAT32_APPLE 0x8815
#define GL_RGB_FLOAT32_ATI 0x8815
#define GL_ALPHA32F_ARB 0x8816
#define GL_ALPHA32F_EXT 0x8816
#define GL_ALPHA_FLOAT32_APPLE 0x8816
#define GL_ALPHA_FLOAT32_ATI 0x8816
#define GL_INTENSITY32F_ARB 0x8817
#define GL_INTENSITY_FLOAT32_APPLE 0x8817
#define GL_INTENSITY_FLOAT32_ATI 0x8817
#define GL_LUMINANCE32F_ARB 0x8818
#define GL_LUMINANCE32F_EXT 0x8818
#define GL_LUMINANCE_FLOAT32_APPLE 0x8818
#define GL_LUMINANCE_FLOAT32_ATI 0x8818
#define GL_LUMINANCE_ALPHA32F_ARB 0x8819
#define GL_LUMINANCE_ALPHA32F_EXT 0x8819
#define GL_LUMINANCE_ALPHA_FLOAT32_APPLE 0x8819
#define GL_LUMINANCE_ALPHA_FLOAT32_ATI 0x8819
#define GL_RGBA16F 0x881A
#define GL_RGBA16F_ARB 0x881A
#define GL_RGBA16F_EXT 0x881A
#define GL_RGBA_FLOAT16_APPLE 0x881A
#define GL_RGBA_FLOAT16_ATI 0x881A
#define GL_RGB16F 0x881B
#define GL_RGB16F_ARB 0x881B
#define GL_RGB16F_EXT 0x881B
#define GL_RGB_FLOAT16_APPLE 0x881B
#define GL_RGB_FLOAT16_ATI 0x881B
#define GL_ALPHA16F_ARB 0x881C
#define GL_ALPHA16F_EXT 0x881C
#define GL_ALPHA_FLOAT16_APPLE 0x881C
#define GL_ALPHA_FLOAT16_ATI 0x881C
#define GL_INTENSITY16F_ARB 0x881D
#define GL_INTENSITY_FLOAT16_APPLE 0x881D
#define GL_INTENSITY_FLOAT16_ATI 0x881D
#define GL_LUMINANCE16F_ARB 0x881E
#define GL_LUMINANCE16F_EXT 0x881E
#define GL_LUMINANCE_FLOAT16_APPLE 0x881E
#define GL_LUMINANCE_FLOAT16_ATI 0x881E
#define GL_LUMINANCE_ALPHA16F_ARB 0x881F
#define GL_LUMINANCE_ALPHA16F_EXT 0x881F
#define GL_LUMINANCE_ALPHA_FLOAT16_APPLE 0x881F
#define GL_LUMINANCE_ALPHA_FLOAT16_ATI 0x881F
#define GL_RGBA_FLOAT_MODE_ARB 0x8820
#define GL_RGBA_FLOAT_MODE_ATI 0x8820
#define GL_WRITEONLY_RENDERING_QCOM 0x8823
#define GL_MAX_DRAW_BUFFERS 0x8824
#define GL_MAX_DRAW_BUFFERS_ARB 0x8824
#define GL_MAX_DRAW_BUFFERS_ATI 0x8824
#define GL_MAX_DRAW_BUFFERS_EXT 0x8824
#define GL_MAX_DRAW_BUFFERS_NV 0x8824
#define GL_DRAW_BUFFER0 0x8825
#define GL_DRAW_BUFFER0_ARB 0x8825
#define GL_DRAW_BUFFER0_ATI 0x8825
#define GL_DRAW_BUFFER0_EXT 0x8825
#define GL_DRAW_BUFFER0_NV 0x8825
#define GL_DRAW_BUFFER1 0x8826
#define GL_DRAW_BUFFER1_ARB 0x8826
#define GL_DRAW_BUFFER1_ATI 0x8826
#define GL_DRAW_BUFFER1_EXT 0x8826
#define GL_DRAW_BUFFER1_NV 0x8826
#define GL_DRAW_BUFFER2 0x8827
#define GL_DRAW_BUFFER2_ARB 0x8827
#define GL_DRAW_BUFFER2_ATI 0x8827
#define GL_DRAW_BUFFER2_EXT 0x8827
#define GL_DRAW_BUFFER2_NV 0x8827
#define GL_DRAW_BUFFER3 0x8828
#define GL_DRAW_BUFFER3_ARB 0x8828
#define GL_DRAW_BUFFER3_ATI 0x8828
#define GL_DRAW_BUFFER3_EXT 0x8828
#define GL_DRAW_BUFFER3_NV 0x8828
#define GL_DRAW_BUFFER4 0x8829
#define GL_DRAW_BUFFER4_ARB 0x8829
#define GL_DRAW_BUFFER4_ATI 0x8829
#define GL_DRAW_BUFFER4_EXT 0x8829
#define GL_DRAW_BUFFER4_NV 0x8829
#define GL_DRAW_BUFFER5 0x882A
#define GL_DRAW_BUFFER5_ARB 0x882A
#define GL_DRAW_BUFFER5_ATI 0x882A
#define GL_DRAW_BUFFER5_EXT 0x882A
#define GL_DRAW_BUFFER5_NV 0x882A
#define GL_DRAW_BUFFER6 0x882B
#define GL_DRAW_BUFFER6_ARB 0x882B
#define GL_DRAW_BUFFER6_ATI 0x882B
#define GL_DRAW_BUFFER6_EXT 0x882B
#define GL_DRAW_BUFFER6_NV 0x882B
#define GL_DRAW_BUFFER7 0x882C
#define GL_DRAW_BUFFER7_ARB 0x882C
#define GL_DRAW_BUFFER7_ATI 0x882C
#define GL_DRAW_BUFFER7_EXT 0x882C
#define GL_DRAW_BUFFER7_NV 0x882C
#define GL_DRAW_BUFFER8 0x882D
#define GL_DRAW_BUFFER8_ARB 0x882D
#define GL_DRAW_BUFFER8_ATI 0x882D
#define GL_DRAW_BUFFER8_EXT 0x882D
#define GL_DRAW_BUFFER8_NV 0x882D
#define GL_DRAW_BUFFER9 0x882E
#define GL_DRAW_BUFFER9_ARB 0x882E
#define GL_DRAW_BUFFER9_ATI 0x882E
#define GL_DRAW_BUFFER9_EXT 0x882E
#define GL_DRAW_BUFFER9_NV 0x882E
#define GL_DRAW_BUFFER10 0x882F
#define GL_DRAW_BUFFER10_ARB 0x882F
#define GL_DRAW_BUFFER10_ATI 0x882F
#define GL_DRAW_BUFFER10_EXT 0x882F
#define GL_DRAW_BUFFER10_NV 0x882F
#define GL_DRAW_BUFFER11 0x8830
#define GL_DRAW_BUFFER11_ARB 0x8830
#define GL_DRAW_BUFFER11_ATI 0x8830
#define GL_DRAW_BUFFER11_EXT 0x8830
#define GL_DRAW_BUFFER11_NV 0x8830
#define GL_DRAW_BUFFER12 0x8831
#define GL_DRAW_BUFFER12_ARB 0x8831
#define GL_DRAW_BUFFER12_ATI 0x8831
#define GL_DRAW_BUFFER12_EXT 0x8831
#define GL_DRAW_BUFFER12_NV 0x8831
#define GL_DRAW_BUFFER13 0x8832
#define GL_DRAW_BUFFER13_ARB 0x8832
#define GL_DRAW_BUFFER13_ATI 0x8832
#define GL_DRAW_BUFFER13_EXT 0x8832
#define GL_DRAW_BUFFER13_NV 0x8832
#define GL_DRAW_BUFFER14 0x8833
#define GL_DRAW_BUFFER14_ARB 0x8833
#define GL_DRAW_BUFFER14_ATI 0x8833
#define GL_DRAW_BUFFER14_EXT 0x8833
#define GL_DRAW_BUFFER14_NV 0x8833
#define GL_DRAW_BUFFER15 0x8834
#define GL_DRAW_BUFFER15_ARB 0x8834
#define GL_DRAW_BUFFER15_ATI 0x8834
#define GL_DRAW_BUFFER15_EXT 0x8834
#define GL_DRAW_BUFFER15_NV 0x8834
#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835
#define GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI 0x8837
#define GL_BLEND_EQUATION_ALPHA 0x883D
#define GL_BLEND_EQUATION_ALPHA_EXT 0x883D
#define GL_BLEND_EQUATION_ALPHA_OES 0x883D
#define GL_SUBSAMPLE_DISTANCE_AMD 0x883F
#define GL_MATRIX_PALETTE_ARB 0x8840
#define GL_MATRIX_PALETTE_OES 0x8840
#define GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB 0x8841
#define GL_MAX_PALETTE_MATRICES_ARB 0x8842
#define GL_MAX_PALETTE_MATRICES_OES 0x8842
#define GL_CURRENT_PALETTE_MATRIX_ARB 0x8843
#define GL_CURRENT_PALETTE_MATRIX_OES 0x8843
#define GL_MATRIX_INDEX_ARRAY_ARB 0x8844
#define GL_MATRIX_INDEX_ARRAY_OES 0x8844
#define GL_CURRENT_MATRIX_INDEX_ARB 0x8845
#define GL_MATRIX_INDEX_ARRAY_SIZE_ARB 0x8846
#define GL_MATRIX_INDEX_ARRAY_SIZE_OES 0x8846
#define GL_MATRIX_INDEX_ARRAY_TYPE_ARB 0x8847
#define GL_MATRIX_INDEX_ARRAY_TYPE_OES 0x8847
#define GL_MATRIX_INDEX_ARRAY_STRIDE_ARB 0x8848
#define GL_MATRIX_INDEX_ARRAY_STRIDE_OES 0x8848
#define GL_MATRIX_INDEX_ARRAY_POINTER_ARB 0x8849
#define GL_MATRIX_INDEX_ARRAY_POINTER_OES 0x8849
#define GL_TEXTURE_DEPTH_SIZE 0x884A
#define GL_TEXTURE_DEPTH_SIZE_ARB 0x884A
#define GL_DEPTH_TEXTURE_MODE 0x884B
#define GL_DEPTH_TEXTURE_MODE_ARB 0x884B
#define GL_TEXTURE_COMPARE_MODE 0x884C
#define GL_TEXTURE_COMPARE_MODE_ARB 0x884C
#define GL_TEXTURE_COMPARE_MODE_EXT 0x884C
#define GL_TEXTURE_COMPARE_FUNC 0x884D
#define GL_TEXTURE_COMPARE_FUNC_ARB 0x884D
#define GL_TEXTURE_COMPARE_FUNC_EXT 0x884D
#define GL_COMPARE_R_TO_TEXTURE 0x884E
#define GL_COMPARE_R_TO_TEXTURE_ARB 0x884E
#define GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT 0x884E
#define GL_COMPARE_REF_TO_TEXTURE 0x884E
#define GL_COMPARE_REF_TO_TEXTURE_EXT 0x884E
#define GL_TEXTURE_CUBE_MAP_SEAMLESS 0x884F
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV 0x8850
#define GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV 0x8851
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8852
#define GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV 0x8853
#define GL_OFFSET_HILO_TEXTURE_2D_NV 0x8854
#define GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV 0x8855
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV 0x8856
#define GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV 0x8857
#define GL_DEPENDENT_HILO_TEXTURE_2D_NV 0x8858
#define GL_DEPENDENT_RGB_TEXTURE_3D_NV 0x8859
#define GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV 0x885A
#define GL_DOT_PRODUCT_PASS_THROUGH_NV 0x885B
#define GL_DOT_PRODUCT_TEXTURE_1D_NV 0x885C
#define GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV 0x885D
#define GL_HILO8_NV 0x885E
#define GL_SIGNED_HILO8_NV 0x885F
#define GL_FORCE_BLUE_TO_ONE_NV 0x8860
#define GL_POINT_SPRITE 0x8861
#define GL_POINT_SPRITE_ARB 0x8861
#define GL_POINT_SPRITE_NV 0x8861
#define GL_POINT_SPRITE_OES 0x8861
#define GL_COORD_REPLACE 0x8862
#define GL_COORD_REPLACE_ARB 0x8862
#define GL_COORD_REPLACE_NV 0x8862
#define GL_COORD_REPLACE_OES 0x8862
#define GL_POINT_SPRITE_R_MODE_NV 0x8863
#define GL_PIXEL_COUNTER_BITS_NV 0x8864
#define GL_QUERY_COUNTER_BITS 0x8864
#define GL_QUERY_COUNTER_BITS_ARB 0x8864
#define GL_QUERY_COUNTER_BITS_EXT 0x8864
#define GL_CURRENT_OCCLUSION_QUERY_ID_NV 0x8865
#define GL_CURRENT_QUERY 0x8865
#define GL_CURRENT_QUERY_ARB 0x8865
#define GL_CURRENT_QUERY_EXT 0x8865
#define GL_PIXEL_COUNT_NV 0x8866
#define GL_QUERY_RESULT 0x8866
#define GL_QUERY_RESULT_ARB 0x8866
#define GL_QUERY_RESULT_EXT 0x8866
#define GL_PIXEL_COUNT_AVAILABLE_NV 0x8867
#define GL_QUERY_RESULT_AVAILABLE 0x8867
#define GL_QUERY_RESULT_AVAILABLE_ARB 0x8867
#define GL_QUERY_RESULT_AVAILABLE_EXT 0x8867
#define GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV 0x8868
#define GL_MAX_VERTEX_ATTRIBS 0x8869
#define GL_MAX_VERTEX_ATTRIBS_ARB 0x8869
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED 0x886A
#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB 0x886A
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS 0x886C
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_EXT 0x886C
#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS_OES 0x886C
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS 0x886D
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_EXT 0x886D
#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS_OES 0x886D
#define GL_DEPTH_STENCIL_TO_RGBA_NV 0x886E
#define GL_DEPTH_STENCIL_TO_BGRA_NV 0x886F
#define GL_FRAGMENT_PROGRAM_NV 0x8870
#define GL_MAX_TEXTURE_COORDS 0x8871
#define GL_MAX_TEXTURE_COORDS_ARB 0x8871
#define GL_MAX_TEXTURE_COORDS_NV 0x8871
#define GL_MAX_TEXTURE_IMAGE_UNITS 0x8872
#define GL_MAX_TEXTURE_IMAGE_UNITS_ARB 0x8872
#define GL_MAX_TEXTURE_IMAGE_UNITS_NV 0x8872
#define GL_FRAGMENT_PROGRAM_BINDING_NV 0x8873
#define GL_PROGRAM_ERROR_STRING_ARB 0x8874
#define GL_PROGRAM_ERROR_STRING_NV 0x8874
#define GL_PROGRAM_FORMAT_ASCII_ARB 0x8875
#define GL_PROGRAM_FORMAT_ARB 0x8876
#define GL_WRITE_PIXEL_DATA_RANGE_NV 0x8878
#define GL_READ_PIXEL_DATA_RANGE_NV 0x8879
#define GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV 0x887A
#define GL_READ_PIXEL_DATA_RANGE_LENGTH_NV 0x887B
#define GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV 0x887C
#define GL_READ_PIXEL_DATA_RANGE_POINTER_NV 0x887D
#define GL_GEOMETRY_SHADER_INVOCATIONS 0x887F
#define GL_GEOMETRY_SHADER_INVOCATIONS_EXT 0x887F
#define GL_GEOMETRY_SHADER_INVOCATIONS_OES 0x887F
#define GL_FLOAT_R_NV 0x8880
#define GL_FLOAT_RG_NV 0x8881
#define GL_FLOAT_RGB_NV 0x8882
#define GL_FLOAT_RGBA_NV 0x8883
#define GL_FLOAT_R16_NV 0x8884
#define GL_FLOAT_R32_NV 0x8885
#define GL_FLOAT_RG16_NV 0x8886
#define GL_FLOAT_RG32_NV 0x8887
#define GL_FLOAT_RGB16_NV 0x8888
#define GL_FLOAT_RGB32_NV 0x8889
#define GL_FLOAT_RGBA16_NV 0x888A
#define GL_FLOAT_RGBA32_NV 0x888B
#define GL_TEXTURE_FLOAT_COMPONENTS_NV 0x888C
#define GL_FLOAT_CLEAR_COLOR_VALUE_NV 0x888D
#define GL_FLOAT_RGBA_MODE_NV 0x888E
#define GL_TEXTURE_UNSIGNED_REMAP_MODE_NV 0x888F
#define GL_DEPTH_BOUNDS_TEST_EXT 0x8890
#define GL_DEPTH_BOUNDS_EXT 0x8891
#define GL_ARRAY_BUFFER 0x8892
#define GL_ARRAY_BUFFER_ARB 0x8892
#define GL_ELEMENT_ARRAY_BUFFER 0x8893
#define GL_ELEMENT_ARRAY_BUFFER_ARB 0x8893
#define GL_ARRAY_BUFFER_BINDING 0x8894
#define GL_ARRAY_BUFFER_BINDING_ARB 0x8894
#define GL_ELEMENT_ARRAY_BUFFER_BINDING 0x8895
#define GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB 0x8895
#define GL_VERTEX_ARRAY_BUFFER_BINDING 0x8896
#define GL_VERTEX_ARRAY_BUFFER_BINDING_ARB 0x8896
#define GL_NORMAL_ARRAY_BUFFER_BINDING 0x8897
#define GL_NORMAL_ARRAY_BUFFER_BINDING_ARB 0x8897
#define GL_COLOR_ARRAY_BUFFER_BINDING 0x8898
#define GL_COLOR_ARRAY_BUFFER_BINDING_ARB 0x8898
#define GL_INDEX_ARRAY_BUFFER_BINDING 0x8899
#define GL_INDEX_ARRAY_BUFFER_BINDING_ARB 0x8899
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING 0x889A
#define GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB 0x889A
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING 0x889B
#define GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB 0x889B
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING 0x889C
#define GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB 0x889C
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB 0x889D
#define GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING 0x889D
#define GL_FOG_COORD_ARRAY_BUFFER_BINDING 0x889D
#define GL_WEIGHT_ARRAY_BUFFER_BINDING 0x889E
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB 0x889E
#define GL_WEIGHT_ARRAY_BUFFER_BINDING_OES 0x889E
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING 0x889F
#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB 0x889F
#define GL_PROGRAM_INSTRUCTIONS_ARB 0x88A0
#define GL_MAX_PROGRAM_INSTRUCTIONS_ARB 0x88A1
#define GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A2
#define GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB 0x88A3
#define GL_PROGRAM_TEMPORARIES_ARB 0x88A4
#define GL_MAX_PROGRAM_TEMPORARIES_ARB 0x88A5
#define GL_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A6
#define GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB 0x88A7
#define GL_PROGRAM_PARAMETERS_ARB 0x88A8
#define GL_MAX_PROGRAM_PARAMETERS_ARB 0x88A9
#define GL_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AA
#define GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB 0x88AB
#define GL_PROGRAM_ATTRIBS_ARB 0x88AC
#define GL_MAX_PROGRAM_ATTRIBS_ARB 0x88AD
#define GL_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AE
#define GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB 0x88AF
#define GL_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B0
#define GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB 0x88B1
#define GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B2
#define GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB 0x88B3
#define GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB 0x88B4
#define GL_MAX_PROGRAM_ENV_PARAMETERS_ARB 0x88B5
#define GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB 0x88B6
#define GL_TRANSPOSE_CURRENT_MATRIX_ARB 0x88B7
#define GL_READ_ONLY 0x88B8
#define GL_READ_ONLY_ARB 0x88B8
#define GL_WRITE_ONLY 0x88B9
#define GL_WRITE_ONLY_ARB 0x88B9
#define GL_WRITE_ONLY_OES 0x88B9
#define GL_READ_WRITE 0x88BA
#define GL_READ_WRITE_ARB 0x88BA
#define GL_BUFFER_ACCESS 0x88BB
#define GL_BUFFER_ACCESS_ARB 0x88BB
#define GL_BUFFER_ACCESS_OES 0x88BB
#define GL_BUFFER_MAPPED 0x88BC
#define GL_BUFFER_MAPPED_ARB 0x88BC
#define GL_BUFFER_MAPPED_OES 0x88BC
#define GL_BUFFER_MAP_POINTER 0x88BD
#define GL_BUFFER_MAP_POINTER_ARB 0x88BD
#define GL_BUFFER_MAP_POINTER_OES 0x88BD
#define GL_WRITE_DISCARD_NV 0x88BE
#define GL_TIME_ELAPSED 0x88BF
#define GL_TIME_ELAPSED_EXT 0x88BF
#define GL_MATRIX0_ARB 0x88C0
#define GL_MATRIX1_ARB 0x88C1
#define GL_MATRIX2_ARB 0x88C2
#define GL_MATRIX3_ARB 0x88C3
#define GL_MATRIX4_ARB 0x88C4
#define GL_MATRIX5_ARB 0x88C5
#define GL_MATRIX6_ARB 0x88C6
#define GL_MATRIX7_ARB 0x88C7
#define GL_MATRIX8_ARB 0x88C8
#define GL_MATRIX9_ARB 0x88C9
#define GL_MATRIX10_ARB 0x88CA
#define GL_MATRIX11_ARB 0x88CB
#define GL_MATRIX12_ARB 0x88CC
#define GL_MATRIX13_ARB 0x88CD
#define GL_MATRIX14_ARB 0x88CE
#define GL_MATRIX15_ARB 0x88CF
#define GL_MATRIX16_ARB 0x88D0
#define GL_MATRIX17_ARB 0x88D1
#define GL_MATRIX18_ARB 0x88D2
#define GL_MATRIX19_ARB 0x88D3
#define GL_MATRIX20_ARB 0x88D4
#define GL_MATRIX21_ARB 0x88D5
#define GL_MATRIX22_ARB 0x88D6
#define GL_MATRIX23_ARB 0x88D7
#define GL_MATRIX24_ARB 0x88D8
#define GL_MATRIX25_ARB 0x88D9
#define GL_MATRIX26_ARB 0x88DA
#define GL_MATRIX27_ARB 0x88DB
#define GL_MATRIX28_ARB 0x88DC
#define GL_MATRIX29_ARB 0x88DD
#define GL_MATRIX30_ARB 0x88DE
#define GL_MATRIX31_ARB 0x88DF
#define GL_STREAM_DRAW 0x88E0
#define GL_STREAM_DRAW_ARB 0x88E0
#define GL_STREAM_READ 0x88E1
#define GL_STREAM_READ_ARB 0x88E1
#define GL_STREAM_COPY 0x88E2
#define GL_STREAM_COPY_ARB 0x88E2
#define GL_STATIC_DRAW 0x88E4
#define GL_STATIC_DRAW_ARB 0x88E4
#define GL_STATIC_READ 0x88E5
#define GL_STATIC_READ_ARB 0x88E5
#define GL_STATIC_COPY 0x88E6
#define GL_STATIC_COPY_ARB 0x88E6
#define GL_DYNAMIC_DRAW 0x88E8
#define GL_DYNAMIC_DRAW_ARB 0x88E8
#define GL_DYNAMIC_READ 0x88E9
#define GL_DYNAMIC_READ_ARB 0x88E9
#define GL_DYNAMIC_COPY 0x88EA
#define GL_DYNAMIC_COPY_ARB 0x88EA
#define GL_PIXEL_PACK_BUFFER 0x88EB
#define GL_PIXEL_PACK_BUFFER_ARB 0x88EB
#define GL_PIXEL_PACK_BUFFER_EXT 0x88EB
#define GL_PIXEL_PACK_BUFFER_NV 0x88EB
#define GL_PIXEL_UNPACK_BUFFER 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_ARB 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_EXT 0x88EC
#define GL_PIXEL_UNPACK_BUFFER_NV 0x88EC
#define GL_PIXEL_PACK_BUFFER_BINDING 0x88ED
#define GL_PIXEL_PACK_BUFFER_BINDING_ARB 0x88ED
#define GL_PIXEL_PACK_BUFFER_BINDING_EXT 0x88ED
#define GL_PIXEL_PACK_BUFFER_BINDING_NV 0x88ED
#define GL_ETC1_SRGB8_NV 0x88EE
#define GL_PIXEL_UNPACK_BUFFER_BINDING 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_BINDING_ARB 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_BINDING_EXT 0x88EF
#define GL_PIXEL_UNPACK_BUFFER_BINDING_NV 0x88EF
#define GL_DEPTH24_STENCIL8 0x88F0
#define GL_DEPTH24_STENCIL8_EXT 0x88F0
#define GL_DEPTH24_STENCIL8_OES 0x88F0
#define GL_TEXTURE_STENCIL_SIZE 0x88F1
#define GL_TEXTURE_STENCIL_SIZE_EXT 0x88F1
#define GL_STENCIL_TAG_BITS_EXT 0x88F2
#define GL_STENCIL_CLEAR_TAG_VALUE_EXT 0x88F3
#define GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV 0x88F4
#define GL_MAX_PROGRAM_CALL_DEPTH_NV 0x88F5
#define GL_MAX_PROGRAM_IF_DEPTH_NV 0x88F6
#define GL_MAX_PROGRAM_LOOP_DEPTH_NV 0x88F7
#define GL_MAX_PROGRAM_LOOP_COUNT_NV 0x88F8
#define GL_SRC1_COLOR 0x88F9
#define GL_SRC1_COLOR_EXT 0x88F9
#define GL_ONE_MINUS_SRC1_COLOR 0x88FA
#define GL_ONE_MINUS_SRC1_COLOR_EXT 0x88FA
#define GL_ONE_MINUS_SRC1_ALPHA 0x88FB
#define GL_ONE_MINUS_SRC1_ALPHA_EXT 0x88FB
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS 0x88FC
#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS_EXT 0x88FC
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV 0x88FD
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_EXT 0x88FE
#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR_NV 0x88FE
#define GL_MAX_ARRAY_TEXTURE_LAYERS 0x88FF
#define GL_MAX_ARRAY_TEXTURE_LAYERS_EXT 0x88FF
#define GL_MIN_PROGRAM_TEXEL_OFFSET 0x8904
#define GL_MIN_PROGRAM_TEXEL_OFFSET_EXT 0x8904
#define GL_MIN_PROGRAM_TEXEL_OFFSET_NV 0x8904
#define GL_MAX_PROGRAM_TEXEL_OFFSET 0x8905
#define GL_MAX_PROGRAM_TEXEL_OFFSET_EXT 0x8905
#define GL_MAX_PROGRAM_TEXEL_OFFSET_NV 0x8905
#define GL_PROGRAM_ATTRIB_COMPONENTS_NV 0x8906
#define GL_PROGRAM_RESULT_COMPONENTS_NV 0x8907
#define GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV 0x8908
#define GL_MAX_PROGRAM_RESULT_COMPONENTS_NV 0x8909
#define GL_STENCIL_TEST_TWO_SIDE_EXT 0x8910
#define GL_ACTIVE_STENCIL_FACE_EXT 0x8911
#define GL_MIRROR_CLAMP_TO_BORDER_EXT 0x8912
#define GL_SAMPLES_PASSED 0x8914
#define GL_SAMPLES_PASSED_ARB 0x8914
#define GL_GEOMETRY_VERTICES_OUT 0x8916
#define GL_GEOMETRY_LINKED_VERTICES_OUT_EXT 0x8916
#define GL_GEOMETRY_LINKED_VERTICES_OUT_OES 0x8916
#define GL_GEOMETRY_INPUT_TYPE 0x8917
#define GL_GEOMETRY_LINKED_INPUT_TYPE_EXT 0x8917
#define GL_GEOMETRY_LINKED_INPUT_TYPE_OES 0x8917
#define GL_GEOMETRY_OUTPUT_TYPE 0x8918
#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_EXT 0x8918
#define GL_GEOMETRY_LINKED_OUTPUT_TYPE_OES 0x8918
#define GL_SAMPLER_BINDING 0x8919
#define GL_CLAMP_VERTEX_COLOR 0x891A
#define GL_CLAMP_VERTEX_COLOR_ARB 0x891A
#define GL_CLAMP_FRAGMENT_COLOR 0x891B
#define GL_CLAMP_FRAGMENT_COLOR_ARB 0x891B
#define GL_CLAMP_READ_COLOR 0x891C
#define GL_CLAMP_READ_COLOR_ARB 0x891C
#define GL_FIXED_ONLY 0x891D
#define GL_FIXED_ONLY_ARB 0x891D
#define GL_TESS_CONTROL_PROGRAM_NV 0x891E
#define GL_TESS_EVALUATION_PROGRAM_NV 0x891F
#define GL_FRAGMENT_SHADER_ATI 0x8920
#define GL_REG_0_ATI 0x8921
#define GL_REG_1_ATI 0x8922
#define GL_REG_2_ATI 0x8923
#define GL_REG_3_ATI 0x8924
#define GL_REG_4_ATI 0x8925
#define GL_REG_5_ATI 0x8926
#define GL_REG_6_ATI 0x8927
#define GL_REG_7_ATI 0x8928
#define GL_REG_8_ATI 0x8929
#define GL_REG_9_ATI 0x892A
#define GL_REG_10_ATI 0x892B
#define GL_REG_11_ATI 0x892C
#define GL_REG_12_ATI 0x892D
#define GL_REG_13_ATI 0x892E
#define GL_REG_14_ATI 0x892F
#define GL_REG_15_ATI 0x8930
#define GL_REG_16_ATI 0x8931
#define GL_REG_17_ATI 0x8932
#define GL_REG_18_ATI 0x8933
#define GL_REG_19_ATI 0x8934
#define GL_REG_20_ATI 0x8935
#define GL_REG_21_ATI 0x8936
#define GL_REG_22_ATI 0x8937
#define GL_REG_23_ATI 0x8938
#define GL_REG_24_ATI 0x8939
#define GL_REG_25_ATI 0x893A
#define GL_REG_26_ATI 0x893B
#define GL_REG_27_ATI 0x893C
#define GL_REG_28_ATI 0x893D
#define GL_REG_29_ATI 0x893E
#define GL_REG_30_ATI 0x893F
#define GL_REG_31_ATI 0x8940
#define GL_CON_0_ATI 0x8941
#define GL_CON_1_ATI 0x8942
#define GL_CON_2_ATI 0x8943
#define GL_CON_3_ATI 0x8944
#define GL_CON_4_ATI 0x8945
#define GL_CON_5_ATI 0x8946
#define GL_CON_6_ATI 0x8947
#define GL_CON_7_ATI 0x8948
#define GL_CON_8_ATI 0x8949
#define GL_CON_9_ATI 0x894A
#define GL_CON_10_ATI 0x894B
#define GL_CON_11_ATI 0x894C
#define GL_CON_12_ATI 0x894D
#define GL_CON_13_ATI 0x894E
#define GL_CON_14_ATI 0x894F
#define GL_CON_15_ATI 0x8950
#define GL_CON_16_ATI 0x8951
#define GL_CON_17_ATI 0x8952
#define GL_CON_18_ATI 0x8953
#define GL_CON_19_ATI 0x8954
#define GL_CON_20_ATI 0x8955
#define GL_CON_21_ATI 0x8956
#define GL_CON_22_ATI 0x8957
#define GL_CON_23_ATI 0x8958
#define GL_CON_24_ATI 0x8959
#define GL_CON_25_ATI 0x895A
#define GL_CON_26_ATI 0x895B
#define GL_CON_27_ATI 0x895C
#define GL_CON_28_ATI 0x895D
#define GL_CON_29_ATI 0x895E
#define GL_CON_30_ATI 0x895F
#define GL_CON_31_ATI 0x8960
#define GL_MOV_ATI 0x8961
#define GL_ADD_ATI 0x8963
#define GL_MUL_ATI 0x8964
#define GL_SUB_ATI 0x8965
#define GL_DOT3_ATI 0x8966
#define GL_DOT4_ATI 0x8967
#define GL_MAD_ATI 0x8968
#define GL_LERP_ATI 0x8969
#define GL_CND_ATI 0x896A
#define GL_CND0_ATI 0x896B
#define GL_DOT2_ADD_ATI 0x896C
#define GL_SECONDARY_INTERPOLATOR_ATI 0x896D
#define GL_NUM_FRAGMENT_REGISTERS_ATI 0x896E
#define GL_NUM_FRAGMENT_CONSTANTS_ATI 0x896F
#define GL_NUM_PASSES_ATI 0x8970
#define GL_NUM_INSTRUCTIONS_PER_PASS_ATI 0x8971
#define GL_NUM_INSTRUCTIONS_TOTAL_ATI 0x8972
#define GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI 0x8973
#define GL_NUM_LOOPBACK_COMPONENTS_ATI 0x8974
#define GL_COLOR_ALPHA_PAIRING_ATI 0x8975
#define GL_SWIZZLE_STR_ATI 0x8976
#define GL_SWIZZLE_STQ_ATI 0x8977
#define GL_SWIZZLE_STR_DR_ATI 0x8978
#define GL_SWIZZLE_STQ_DQ_ATI 0x8979
#define GL_SWIZZLE_STRQ_ATI 0x897A
#define GL_SWIZZLE_STRQ_DQ_ATI 0x897B
#define GL_INTERLACE_OML 0x8980
#define GL_INTERLACE_READ_OML 0x8981
#define GL_FORMAT_SUBSAMPLE_24_24_OML 0x8982
#define GL_FORMAT_SUBSAMPLE_244_244_OML 0x8983
#define GL_PACK_RESAMPLE_OML 0x8984
#define GL_UNPACK_RESAMPLE_OML 0x8985
#define GL_RESAMPLE_REPLICATE_OML 0x8986
#define GL_RESAMPLE_ZERO_FILL_OML 0x8987
#define GL_RESAMPLE_AVERAGE_OML 0x8988
#define GL_RESAMPLE_DECIMATE_OML 0x8989
#define GL_POINT_SIZE_ARRAY_TYPE_OES 0x898A
#define GL_POINT_SIZE_ARRAY_STRIDE_OES 0x898B
#define GL_POINT_SIZE_ARRAY_POINTER_OES 0x898C
#define GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES 0x898D
#define GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES 0x898E
#define GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES 0x898F
#define GL_VERTEX_ATTRIB_MAP1_APPLE 0x8A00
#define GL_VERTEX_ATTRIB_MAP2_APPLE 0x8A01
#define GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE 0x8A02
#define GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE 0x8A03
#define GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE 0x8A04
#define GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE 0x8A05
#define GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE 0x8A06
#define GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE 0x8A07
#define GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE 0x8A08
#define GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE 0x8A09
#define GL_DRAW_PIXELS_APPLE 0x8A0A
#define GL_FENCE_APPLE 0x8A0B
#define GL_ELEMENT_ARRAY_APPLE 0x8A0C
#define GL_ELEMENT_ARRAY_TYPE_APPLE 0x8A0D
#define GL_ELEMENT_ARRAY_POINTER_APPLE 0x8A0E
#define GL_COLOR_FLOAT_APPLE 0x8A0F
#define GL_UNIFORM_BUFFER 0x8A11
#define GL_BUFFER_SERIALIZED_MODIFY_APPLE 0x8A12
#define GL_BUFFER_FLUSHING_UNMAP_APPLE 0x8A13
#define GL_AUX_DEPTH_STENCIL_APPLE 0x8A14
#define GL_PACK_ROW_BYTES_APPLE 0x8A15
#define GL_UNPACK_ROW_BYTES_APPLE 0x8A16
#define GL_RELEASED_APPLE 0x8A19
#define GL_VOLATILE_APPLE 0x8A1A
#define GL_RETAINED_APPLE 0x8A1B
#define GL_UNDEFINED_APPLE 0x8A1C
#define GL_PURGEABLE_APPLE 0x8A1D
#define GL_RGB_422_APPLE 0x8A1F
#define GL_UNIFORM_BUFFER_BINDING 0x8A28
#define GL_UNIFORM_BUFFER_START 0x8A29
#define GL_UNIFORM_BUFFER_SIZE 0x8A2A
#define GL_MAX_VERTEX_UNIFORM_BLOCKS 0x8A2B
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_EXT 0x8A2C
#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS_OES 0x8A2C
#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS 0x8A2D
#define GL_MAX_COMBINED_UNIFORM_BLOCKS 0x8A2E
#define GL_MAX_UNIFORM_BUFFER_BINDINGS 0x8A2F
#define GL_MAX_UNIFORM_BLOCK_SIZE 0x8A30
#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS 0x8A31
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS 0x8A32
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8A32
#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8A32
#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS 0x8A33
#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT 0x8A34
#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH 0x8A35
#define GL_ACTIVE_UNIFORM_BLOCKS 0x8A36
#define GL_UNIFORM_TYPE 0x8A37
#define GL_UNIFORM_SIZE 0x8A38
#define GL_UNIFORM_NAME_LENGTH 0x8A39
#define GL_UNIFORM_BLOCK_INDEX 0x8A3A
#define GL_UNIFORM_OFFSET 0x8A3B
#define GL_UNIFORM_ARRAY_STRIDE 0x8A3C
#define GL_UNIFORM_MATRIX_STRIDE 0x8A3D
#define GL_UNIFORM_IS_ROW_MAJOR 0x8A3E
#define GL_UNIFORM_BLOCK_BINDING 0x8A3F
#define GL_UNIFORM_BLOCK_DATA_SIZE 0x8A40
#define GL_UNIFORM_BLOCK_NAME_LENGTH 0x8A41
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS 0x8A42
#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0x8A43
#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0x8A44
#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0x8A45
#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0x8A46
#define GL_TEXTURE_SRGB_DECODE_EXT 0x8A48
#define GL_DECODE_EXT 0x8A49
#define GL_SKIP_DECODE_EXT 0x8A4A
#define GL_PROGRAM_PIPELINE_OBJECT_EXT 0x8A4F
#define GL_RGB_RAW_422_APPLE 0x8A51
#define GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT 0x8A52
#define GL_SYNC_OBJECT_APPLE 0x8A53
#define GL_COMPRESSED_SRGB_PVRTC_2BPPV1_EXT 0x8A54
#define GL_COMPRESSED_SRGB_PVRTC_4BPPV1_EXT 0x8A55
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV1_EXT 0x8A56
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV1_EXT 0x8A57
#define GL_FRAGMENT_SHADER 0x8B30
#define GL_FRAGMENT_SHADER_ARB 0x8B30
#define GL_VERTEX_SHADER 0x8B31
#define GL_VERTEX_SHADER_ARB 0x8B31
#define GL_PROGRAM_OBJECT_ARB 0x8B40
#define GL_PROGRAM_OBJECT_EXT 0x8B40
#define GL_SHADER_OBJECT_ARB 0x8B48
#define GL_SHADER_OBJECT_EXT 0x8B48
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS 0x8B49
#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB 0x8B49
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS 0x8B4A
#define GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB 0x8B4A
#define GL_MAX_VARYING_FLOATS 0x8B4B
#define GL_MAX_VARYING_COMPONENTS 0x8B4B
#define GL_MAX_VARYING_COMPONENTS_EXT 0x8B4B
#define GL_MAX_VARYING_FLOATS_ARB 0x8B4B
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS 0x8B4C
#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB 0x8B4C
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS 0x8B4D
#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB 0x8B4D
#define GL_OBJECT_TYPE_ARB 0x8B4E
#define GL_SHADER_TYPE 0x8B4F
#define GL_OBJECT_SUBTYPE_ARB 0x8B4F
#define GL_FLOAT_VEC2 0x8B50
#define GL_FLOAT_VEC2_ARB 0x8B50
#define GL_FLOAT_VEC3 0x8B51
#define GL_FLOAT_VEC3_ARB 0x8B51
#define GL_FLOAT_VEC4 0x8B52
#define GL_FLOAT_VEC4_ARB 0x8B52
#define GL_INT_VEC2 0x8B53
#define GL_INT_VEC2_ARB 0x8B53
#define GL_INT_VEC3 0x8B54
#define GL_INT_VEC3_ARB 0x8B54
#define GL_INT_VEC4 0x8B55
#define GL_INT_VEC4_ARB 0x8B55
#define GL_BOOL 0x8B56
#define GL_BOOL_ARB 0x8B56
#define GL_BOOL_VEC2 0x8B57
#define GL_BOOL_VEC2_ARB 0x8B57
#define GL_BOOL_VEC3 0x8B58
#define GL_BOOL_VEC3_ARB 0x8B58
#define GL_BOOL_VEC4 0x8B59
#define GL_BOOL_VEC4_ARB 0x8B59
#define GL_FLOAT_MAT2 0x8B5A
#define GL_FLOAT_MAT2_ARB 0x8B5A
#define GL_FLOAT_MAT3 0x8B5B
#define GL_FLOAT_MAT3_ARB 0x8B5B
#define GL_FLOAT_MAT4 0x8B5C
#define GL_FLOAT_MAT4_ARB 0x8B5C
#define GL_SAMPLER_1D 0x8B5D
#define GL_SAMPLER_1D_ARB 0x8B5D
#define GL_SAMPLER_2D 0x8B5E
#define GL_SAMPLER_2D_ARB 0x8B5E
#define GL_SAMPLER_3D 0x8B5F
#define GL_SAMPLER_3D_ARB 0x8B5F
#define GL_SAMPLER_3D_OES 0x8B5F
#define GL_SAMPLER_CUBE 0x8B60
#define GL_SAMPLER_CUBE_ARB 0x8B60
#define GL_SAMPLER_1D_SHADOW 0x8B61
#define GL_SAMPLER_1D_SHADOW_ARB 0x8B61
#define GL_SAMPLER_2D_SHADOW 0x8B62
#define GL_SAMPLER_2D_SHADOW_ARB 0x8B62
#define GL_SAMPLER_2D_SHADOW_EXT 0x8B62
#define GL_SAMPLER_2D_RECT 0x8B63
#define GL_SAMPLER_2D_RECT_ARB 0x8B63
#define GL_SAMPLER_2D_RECT_SHADOW 0x8B64
#define GL_SAMPLER_2D_RECT_SHADOW_ARB 0x8B64
#define GL_FLOAT_MAT2x3 0x8B65
#define GL_FLOAT_MAT2x3_NV 0x8B65
#define GL_FLOAT_MAT2x4 0x8B66
#define GL_FLOAT_MAT2x4_NV 0x8B66
#define GL_FLOAT_MAT3x2 0x8B67
#define GL_FLOAT_MAT3x2_NV 0x8B67
#define GL_FLOAT_MAT3x4 0x8B68
#define GL_FLOAT_MAT3x4_NV 0x8B68
#define GL_FLOAT_MAT4x2 0x8B69
#define GL_FLOAT_MAT4x2_NV 0x8B69
#define GL_FLOAT_MAT4x3 0x8B6A
#define GL_FLOAT_MAT4x3_NV 0x8B6A
#define GL_DELETE_STATUS 0x8B80
#define GL_OBJECT_DELETE_STATUS_ARB 0x8B80
#define GL_COMPILE_STATUS 0x8B81
#define GL_OBJECT_COMPILE_STATUS_ARB 0x8B81
#define GL_LINK_STATUS 0x8B82
#define GL_OBJECT_LINK_STATUS_ARB 0x8B82
#define GL_VALIDATE_STATUS 0x8B83
#define GL_OBJECT_VALIDATE_STATUS_ARB 0x8B83
#define GL_INFO_LOG_LENGTH 0x8B84
#define GL_OBJECT_INFO_LOG_LENGTH_ARB 0x8B84
#define GL_ATTACHED_SHADERS 0x8B85
#define GL_OBJECT_ATTACHED_OBJECTS_ARB 0x8B85
#define GL_ACTIVE_UNIFORMS 0x8B86
#define GL_OBJECT_ACTIVE_UNIFORMS_ARB 0x8B86
#define GL_ACTIVE_UNIFORM_MAX_LENGTH 0x8B87
#define GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB 0x8B87
#define GL_SHADER_SOURCE_LENGTH 0x8B88
#define GL_OBJECT_SHADER_SOURCE_LENGTH_ARB 0x8B88
#define GL_ACTIVE_ATTRIBUTES 0x8B89
#define GL_OBJECT_ACTIVE_ATTRIBUTES_ARB 0x8B89
#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH 0x8B8A
#define GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB 0x8B8A
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT 0x8B8B
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB 0x8B8B
#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES 0x8B8B
#define GL_SHADING_LANGUAGE_VERSION 0x8B8C
#define GL_SHADING_LANGUAGE_VERSION_ARB 0x8B8C
#define GL_CURRENT_PROGRAM 0x8B8D
#define GL_PALETTE4_RGB8_OES 0x8B90
#define GL_PALETTE4_RGBA8_OES 0x8B91
#define GL_PALETTE4_R5_G6_B5_OES 0x8B92
#define GL_PALETTE4_RGBA4_OES 0x8B93
#define GL_PALETTE4_RGB5_A1_OES 0x8B94
#define GL_PALETTE8_RGB8_OES 0x8B95
#define GL_PALETTE8_RGBA8_OES 0x8B96
#define GL_PALETTE8_R5_G6_B5_OES 0x8B97
#define GL_PALETTE8_RGBA4_OES 0x8B98
#define GL_PALETTE8_RGB5_A1_OES 0x8B99
#define GL_IMPLEMENTATION_COLOR_READ_TYPE 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_TYPE_OES 0x8B9A
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT 0x8B9B
#define GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES 0x8B9B
#define GL_POINT_SIZE_ARRAY_OES 0x8B9C
#define GL_TEXTURE_CROP_RECT_OES 0x8B9D
#define GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES 0x8B9E
#define GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES 0x8B9F
#define GL_FRAGMENT_PROGRAM_POSITION_MESA 0x8BB0
#define GL_FRAGMENT_PROGRAM_CALLBACK_MESA 0x8BB1
#define GL_FRAGMENT_PROGRAM_CALLBACK_FUNC_MESA 0x8BB2
#define GL_FRAGMENT_PROGRAM_CALLBACK_DATA_MESA 0x8BB3
#define GL_VERTEX_PROGRAM_POSITION_MESA 0x8BB4
#define GL_VERTEX_PROGRAM_CALLBACK_MESA 0x8BB5
#define GL_VERTEX_PROGRAM_CALLBACK_FUNC_MESA 0x8BB6
#define GL_VERTEX_PROGRAM_CALLBACK_DATA_MESA 0x8BB7
#define GL_TILE_RASTER_ORDER_FIXED_MESA 0x8BB8
#define GL_TILE_RASTER_ORDER_INCREASING_X_MESA 0x8BB9
#define GL_TILE_RASTER_ORDER_INCREASING_Y_MESA 0x8BBA
#define GL_FRAMEBUFFER_FLIP_Y_MESA 0x8BBB
#define GL_FRAMEBUFFER_FLIP_X_MESA 0x8BBC
#define GL_FRAMEBUFFER_SWAP_XY_MESA 0x8BBD
#define GL_CONST_BW_TILING_MESA 0x8BBE
#define GL_COUNTER_TYPE_AMD 0x8BC0
#define GL_COUNTER_RANGE_AMD 0x8BC1
#define GL_UNSIGNED_INT64_AMD 0x8BC2
#define GL_PERCENTAGE_AMD 0x8BC3
#define GL_PERFMON_RESULT_AVAILABLE_AMD 0x8BC4
#define GL_PERFMON_RESULT_SIZE_AMD 0x8BC5
#define GL_PERFMON_RESULT_AMD 0x8BC6
#define GL_TEXTURE_WIDTH_QCOM 0x8BD2
#define GL_TEXTURE_HEIGHT_QCOM 0x8BD3
#define GL_TEXTURE_DEPTH_QCOM 0x8BD4
#define GL_TEXTURE_INTERNAL_FORMAT_QCOM 0x8BD5
#define GL_TEXTURE_FORMAT_QCOM 0x8BD6
#define GL_TEXTURE_TYPE_QCOM 0x8BD7
#define GL_TEXTURE_IMAGE_VALID_QCOM 0x8BD8
#define GL_TEXTURE_NUM_LEVELS_QCOM 0x8BD9
#define GL_TEXTURE_TARGET_QCOM 0x8BDA
#define GL_TEXTURE_OBJECT_VALID_QCOM 0x8BDB
#define GL_STATE_RESTORE 0x8BDC
#define GL_SAMPLER_EXTERNAL_2D_Y2Y_EXT 0x8BE7
#define GL_TEXTURE_PROTECTED_EXT 0x8BFA
#define GL_TEXTURE_FOVEATED_FEATURE_BITS_QCOM 0x8BFB
#define GL_TEXTURE_FOVEATED_MIN_PIXEL_DENSITY_QCOM 0x8BFC
#define GL_TEXTURE_FOVEATED_FEATURE_QUERY_QCOM 0x8BFD
#define GL_TEXTURE_FOVEATED_NUM_FOCAL_POINTS_QUERY_QCOM 0x8BFE
#define GL_FRAMEBUFFER_INCOMPLETE_FOVEATION_QCOM 0x8BFF
#define GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG 0x8C00
#define GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG 0x8C01
#define GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG 0x8C02
#define GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG 0x8C03
#define GL_MODULATE_COLOR_IMG 0x8C04
#define GL_RECIP_ADD_SIGNED_ALPHA_IMG 0x8C05
#define GL_TEXTURE_ALPHA_MODULATE_IMG 0x8C06
#define GL_FACTOR_ALPHA_MODULATE_IMG 0x8C07
#define GL_FRAGMENT_ALPHA_MODULATE_IMG 0x8C08
#define GL_ADD_BLEND_IMG 0x8C09
#define GL_SGX_BINARY_IMG 0x8C0A
#define GL_TEXTURE_RED_TYPE 0x8C10
#define GL_TEXTURE_RED_TYPE_ARB 0x8C10
#define GL_TEXTURE_GREEN_TYPE 0x8C11
#define GL_TEXTURE_GREEN_TYPE_ARB 0x8C11
#define GL_TEXTURE_BLUE_TYPE 0x8C12
#define GL_TEXTURE_BLUE_TYPE_ARB 0x8C12
#define GL_TEXTURE_ALPHA_TYPE 0x8C13
#define GL_TEXTURE_ALPHA_TYPE_ARB 0x8C13
#define GL_TEXTURE_LUMINANCE_TYPE 0x8C14
#define GL_TEXTURE_LUMINANCE_TYPE_ARB 0x8C14
#define GL_TEXTURE_INTENSITY_TYPE 0x8C15
#define GL_TEXTURE_INTENSITY_TYPE_ARB 0x8C15
#define GL_TEXTURE_DEPTH_TYPE 0x8C16
#define GL_TEXTURE_DEPTH_TYPE_ARB 0x8C16
#define GL_UNSIGNED_NORMALIZED 0x8C17
#define GL_UNSIGNED_NORMALIZED_ARB 0x8C17
#define GL_UNSIGNED_NORMALIZED_EXT 0x8C17
#define GL_TEXTURE_1D_ARRAY 0x8C18
#define GL_TEXTURE_1D_ARRAY_EXT 0x8C18
#define GL_PROXY_TEXTURE_1D_ARRAY 0x8C19
#define GL_PROXY_TEXTURE_1D_ARRAY_EXT 0x8C19
#define GL_TEXTURE_2D_ARRAY 0x8C1A
#define GL_TEXTURE_2D_ARRAY_EXT 0x8C1A
#define GL_PROXY_TEXTURE_2D_ARRAY 0x8C1B
#define GL_PROXY_TEXTURE_2D_ARRAY_EXT 0x8C1B
#define GL_TEXTURE_BINDING_1D_ARRAY 0x8C1C
#define GL_TEXTURE_BINDING_1D_ARRAY_EXT 0x8C1C
#define GL_TEXTURE_BINDING_2D_ARRAY 0x8C1D
#define GL_TEXTURE_BINDING_2D_ARRAY_EXT 0x8C1D
#define GL_GEOMETRY_PROGRAM_NV 0x8C26
#define GL_MAX_PROGRAM_OUTPUT_VERTICES_NV 0x8C27
#define GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV 0x8C28
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS 0x8C29
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB 0x8C29
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT 0x8C29
#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_OES 0x8C29
#define GL_TEXTURE_BUFFER 0x8C2A
#define GL_TEXTURE_BUFFER_ARB 0x8C2A
#define GL_TEXTURE_BUFFER_EXT 0x8C2A
#define GL_TEXTURE_BUFFER_OES 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING_EXT 0x8C2A
#define GL_TEXTURE_BUFFER_BINDING_OES 0x8C2A
#define GL_MAX_TEXTURE_BUFFER_SIZE 0x8C2B
#define GL_MAX_TEXTURE_BUFFER_SIZE_ARB 0x8C2B
#define GL_MAX_TEXTURE_BUFFER_SIZE_EXT 0x8C2B
#define GL_MAX_TEXTURE_BUFFER_SIZE_OES 0x8C2B
#define GL_TEXTURE_BINDING_BUFFER 0x8C2C
#define GL_TEXTURE_BINDING_BUFFER_ARB 0x8C2C
#define GL_TEXTURE_BINDING_BUFFER_EXT 0x8C2C
#define GL_TEXTURE_BINDING_BUFFER_OES 0x8C2C
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING 0x8C2D
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB 0x8C2D
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT 0x8C2D
#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING_OES 0x8C2D
#define GL_TEXTURE_BUFFER_FORMAT_ARB 0x8C2E
#define GL_TEXTURE_BUFFER_FORMAT_EXT 0x8C2E
#define GL_ANY_SAMPLES_PASSED 0x8C2F
#define GL_ANY_SAMPLES_PASSED_EXT 0x8C2F
#define GL_SAMPLE_SHADING 0x8C36
#define GL_SAMPLE_SHADING_ARB 0x8C36
#define GL_SAMPLE_SHADING_OES 0x8C36
#define GL_MIN_SAMPLE_SHADING_VALUE 0x8C37
#define GL_MIN_SAMPLE_SHADING_VALUE_ARB 0x8C37
#define GL_MIN_SAMPLE_SHADING_VALUE_OES 0x8C37
#define GL_R11F_G11F_B10F 0x8C3A
#define GL_R11F_G11F_B10F_APPLE 0x8C3A
#define GL_R11F_G11F_B10F_EXT 0x8C3A
#define GL_UNSIGNED_INT_10F_11F_11F_REV 0x8C3B
#define GL_UNSIGNED_INT_10F_11F_11F_REV_APPLE 0x8C3B
#define GL_UNSIGNED_INT_10F_11F_11F_REV_EXT 0x8C3B
#define GL_RGBA_SIGNED_COMPONENTS_EXT 0x8C3C
#define GL_RGB9_E5 0x8C3D
#define GL_RGB9_E5_APPLE 0x8C3D
#define GL_RGB9_E5_EXT 0x8C3D
#define GL_UNSIGNED_INT_5_9_9_9_REV 0x8C3E
#define GL_UNSIGNED_INT_5_9_9_9_REV_APPLE 0x8C3E
#define GL_UNSIGNED_INT_5_9_9_9_REV_EXT 0x8C3E
#define GL_TEXTURE_SHARED_SIZE 0x8C3F
#define GL_TEXTURE_SHARED_SIZE_EXT 0x8C3F
#define GL_SRGB 0x8C40
#define GL_SRGB_EXT 0x8C40
#define GL_SRGB8 0x8C41
#define GL_SRGB8_EXT 0x8C41
#define GL_SRGB8_NV 0x8C41
#define GL_SRGB_ALPHA 0x8C42
#define GL_SRGB_ALPHA_EXT 0x8C42
#define GL_SRGB8_ALPHA8 0x8C43
#define GL_SRGB8_ALPHA8_EXT 0x8C43
#define GL_SLUMINANCE_ALPHA 0x8C44
#define GL_SLUMINANCE_ALPHA_EXT 0x8C44
#define GL_SLUMINANCE_ALPHA_NV 0x8C44
#define GL_SLUMINANCE8_ALPHA8 0x8C45
#define GL_SLUMINANCE8_ALPHA8_EXT 0x8C45
#define GL_SLUMINANCE8_ALPHA8_NV 0x8C45
#define GL_SLUMINANCE 0x8C46
#define GL_SLUMINANCE_EXT 0x8C46
#define GL_SLUMINANCE_NV 0x8C46
#define GL_SLUMINANCE8 0x8C47
#define GL_SLUMINANCE8_EXT 0x8C47
#define GL_SLUMINANCE8_NV 0x8C47
#define GL_COMPRESSED_SRGB 0x8C48
#define GL_COMPRESSED_SRGB_EXT 0x8C48
#define GL_COMPRESSED_SRGB_ALPHA 0x8C49
#define GL_COMPRESSED_SRGB_ALPHA_EXT 0x8C49
#define GL_COMPRESSED_SLUMINANCE 0x8C4A
#define GL_COMPRESSED_SLUMINANCE_EXT 0x8C4A
#define GL_COMPRESSED_SLUMINANCE_ALPHA 0x8C4B
#define GL_COMPRESSED_SLUMINANCE_ALPHA_EXT 0x8C4B
#define GL_COMPRESSED_SRGB_S3TC_DXT1_EXT 0x8C4C
#define GL_COMPRESSED_SRGB_S3TC_DXT1_NV 0x8C4C
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT 0x8C4D
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_NV 0x8C4D
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT 0x8C4E
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_NV 0x8C4E
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT 0x8C4F
#define GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_NV 0x8C4F
#define GL_COMPRESSED_LUMINANCE_LATC1_EXT 0x8C70
#define GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT 0x8C71
#define GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT 0x8C72
#define GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT 0x8C73
#define GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV 0x8C74
#define GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV 0x8C75
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH 0x8C76
#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT 0x8C76
#define GL_BACK_PRIMARY_COLOR_NV 0x8C77
#define GL_BACK_SECONDARY_COLOR_NV 0x8C78
#define GL_TEXTURE_COORD_NV 0x8C79
#define GL_CLIP_DISTANCE_NV 0x8C7A
#define GL_VERTEX_ID_NV 0x8C7B
#define GL_PRIMITIVE_ID_NV 0x8C7C
#define GL_GENERIC_ATTRIB_NV 0x8C7D
#define GL_TRANSFORM_FEEDBACK_ATTRIBS_NV 0x8C7E
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT 0x8C7F
#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV 0x8C7F
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS 0x8C80
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT 0x8C80
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV 0x8C80
#define GL_ACTIVE_VARYINGS_NV 0x8C81
#define GL_ACTIVE_VARYING_MAX_LENGTH_NV 0x8C82
#define GL_TRANSFORM_FEEDBACK_VARYINGS 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYINGS_EXT 0x8C83
#define GL_TRANSFORM_FEEDBACK_VARYINGS_NV 0x8C83
#define GL_TRANSFORM_FEEDBACK_BUFFER_START 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_START_NV 0x8C84
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT 0x8C85
#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV 0x8C85
#define GL_TRANSFORM_FEEDBACK_RECORD_NV 0x8C86
#define GL_PRIMITIVES_GENERATED 0x8C87
#define GL_PRIMITIVES_GENERATED_EXT 0x8C87
#define GL_PRIMITIVES_GENERATED_NV 0x8C87
#define GL_PRIMITIVES_GENERATED_OES 0x8C87
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN 0x8C88
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT 0x8C88
#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV 0x8C88
#define GL_RASTERIZER_DISCARD 0x8C89
#define GL_RASTERIZER_DISCARD_EXT 0x8C89
#define GL_RASTERIZER_DISCARD_NV 0x8C89
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_NV 0x8C8A
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT 0x8C8B
#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV 0x8C8B
#define GL_INTERLEAVED_ATTRIBS 0x8C8C
#define GL_INTERLEAVED_ATTRIBS_EXT 0x8C8C
#define GL_INTERLEAVED_ATTRIBS_NV 0x8C8C
#define GL_SEPARATE_ATTRIBS 0x8C8D
#define GL_SEPARATE_ATTRIBS_EXT 0x8C8D
#define GL_SEPARATE_ATTRIBS_NV 0x8C8D
#define GL_TRANSFORM_FEEDBACK_BUFFER 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_EXT 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_NV 0x8C8E
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT 0x8C8F
#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV 0x8C8F
#define GL_MOTION_ESTIMATION_SEARCH_BLOCK_X_QCOM 0x8C90
#define GL_MOTION_ESTIMATION_SEARCH_BLOCK_Y_QCOM 0x8C91
#define GL_ATC_RGB_AMD 0x8C92
#define GL_ATC_RGBA_EXPLICIT_ALPHA_AMD 0x8C93
#define GL_TEXTURE_LOD_BIAS_QCOM 0x8C96
#define GL_POINT_SPRITE_COORD_ORIGIN 0x8CA0
#define GL_LOWER_LEFT 0x8CA1
#define GL_LOWER_LEFT_EXT 0x8CA1
#define GL_UPPER_LEFT 0x8CA2
#define GL_UPPER_LEFT_EXT 0x8CA2
#define GL_STENCIL_BACK_REF 0x8CA3
#define GL_STENCIL_BACK_VALUE_MASK 0x8CA4
#define GL_STENCIL_BACK_WRITEMASK 0x8CA5
#define GL_DRAW_FRAMEBUFFER_BINDING 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING_ANGLE 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING_APPLE 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING_EXT 0x8CA6
#define GL_DRAW_FRAMEBUFFER_BINDING_NV 0x8CA6
#define GL_FRAMEBUFFER_BINDING 0x8CA6
#define GL_FRAMEBUFFER_BINDING_ANGLE 0x8CA6
#define GL_FRAMEBUFFER_BINDING_EXT 0x8CA6
#define GL_FRAMEBUFFER_BINDING_OES 0x8CA6
#define GL_RENDERBUFFER_BINDING 0x8CA7
#define GL_RENDERBUFFER_BINDING_ANGLE 0x8CA7
#define GL_RENDERBUFFER_BINDING_EXT 0x8CA7
#define GL_RENDERBUFFER_BINDING_OES 0x8CA7
#define GL_READ_FRAMEBUFFER 0x8CA8
#define GL_READ_FRAMEBUFFER_ANGLE 0x8CA8
#define GL_READ_FRAMEBUFFER_APPLE 0x8CA8
#define GL_READ_FRAMEBUFFER_EXT 0x8CA8
#define GL_READ_FRAMEBUFFER_NV 0x8CA8
#define GL_DRAW_FRAMEBUFFER 0x8CA9
#define GL_DRAW_FRAMEBUFFER_ANGLE 0x8CA9
#define GL_DRAW_FRAMEBUFFER_APPLE 0x8CA9
#define GL_DRAW_FRAMEBUFFER_EXT 0x8CA9
#define GL_DRAW_FRAMEBUFFER_NV 0x8CA9
#define GL_READ_FRAMEBUFFER_BINDING 0x8CAA
#define GL_READ_FRAMEBUFFER_BINDING_ANGLE 0x8CAA
#define GL_READ_FRAMEBUFFER_BINDING_APPLE 0x8CAA
#define GL_READ_FRAMEBUFFER_BINDING_EXT 0x8CAA
#define GL_READ_FRAMEBUFFER_BINDING_NV 0x8CAA
#define GL_RENDERBUFFER_COVERAGE_SAMPLES_NV 0x8CAB
#define GL_RENDERBUFFER_SAMPLES 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_ANGLE 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_APPLE 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_EXT 0x8CAB
#define GL_RENDERBUFFER_SAMPLES_NV 0x8CAB
#define GL_DEPTH_COMPONENT32F 0x8CAC
#define GL_DEPTH32F_STENCIL8 0x8CAD
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES 0x8CD0
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES 0x8CD1
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES 0x8CD2
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES 0x8CD3
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER 0x8CD4
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT 0x8CD4
#define GL_FRAMEBUFFER_COMPLETE 0x8CD5
#define GL_FRAMEBUFFER_COMPLETE_EXT 0x8CD5
#define GL_FRAMEBUFFER_COMPLETE_OES 0x8CD5
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES 0x8CD6
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES 0x8CD7
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES 0x8CD9
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT 0x8CDA
#define GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES 0x8CDA
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES 0x8CDB
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER 0x8CDC
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT 0x8CDC
#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES 0x8CDC
#define GL_FRAMEBUFFER_UNSUPPORTED 0x8CDD
#define GL_FRAMEBUFFER_UNSUPPORTED_EXT 0x8CDD
#define GL_FRAMEBUFFER_UNSUPPORTED_OES 0x8CDD
#define GL_MAX_COLOR_ATTACHMENTS 0x8CDF
#define GL_MAX_COLOR_ATTACHMENTS_EXT 0x8CDF
#define GL_MAX_COLOR_ATTACHMENTS_NV 0x8CDF
#define GL_COLOR_ATTACHMENT0 0x8CE0
#define GL_COLOR_ATTACHMENT0_EXT 0x8CE0
#define GL_COLOR_ATTACHMENT0_NV 0x8CE0
#define GL_COLOR_ATTACHMENT0_OES 0x8CE0
#define GL_COLOR_ATTACHMENT1 0x8CE1
#define GL_COLOR_ATTACHMENT1_EXT 0x8CE1
#define GL_COLOR_ATTACHMENT1_NV 0x8CE1
#define GL_COLOR_ATTACHMENT2 0x8CE2
#define GL_COLOR_ATTACHMENT2_EXT 0x8CE2
#define GL_COLOR_ATTACHMENT2_NV 0x8CE2
#define GL_COLOR_ATTACHMENT3 0x8CE3
#define GL_COLOR_ATTACHMENT3_EXT 0x8CE3
#define GL_COLOR_ATTACHMENT3_NV 0x8CE3
#define GL_COLOR_ATTACHMENT4 0x8CE4
#define GL_COLOR_ATTACHMENT4_EXT 0x8CE4
#define GL_COLOR_ATTACHMENT4_NV 0x8CE4
#define GL_COLOR_ATTACHMENT5 0x8CE5
#define GL_COLOR_ATTACHMENT5_EXT 0x8CE5
#define GL_COLOR_ATTACHMENT5_NV 0x8CE5
#define GL_COLOR_ATTACHMENT6 0x8CE6
#define GL_COLOR_ATTACHMENT6_EXT 0x8CE6
#define GL_COLOR_ATTACHMENT6_NV 0x8CE6
#define GL_COLOR_ATTACHMENT7 0x8CE7
#define GL_COLOR_ATTACHMENT7_EXT 0x8CE7
#define GL_COLOR_ATTACHMENT7_NV 0x8CE7
#define GL_COLOR_ATTACHMENT8 0x8CE8
#define GL_COLOR_ATTACHMENT8_EXT 0x8CE8
#define GL_COLOR_ATTACHMENT8_NV 0x8CE8
#define GL_COLOR_ATTACHMENT9 0x8CE9
#define GL_COLOR_ATTACHMENT9_EXT 0x8CE9
#define GL_COLOR_ATTACHMENT9_NV 0x8CE9
#define GL_COLOR_ATTACHMENT10 0x8CEA
#define GL_COLOR_ATTACHMENT10_EXT 0x8CEA
#define GL_COLOR_ATTACHMENT10_NV 0x8CEA
#define GL_COLOR_ATTACHMENT11 0x8CEB
#define GL_COLOR_ATTACHMENT11_EXT 0x8CEB
#define GL_COLOR_ATTACHMENT11_NV 0x8CEB
#define GL_COLOR_ATTACHMENT12 0x8CEC
#define GL_COLOR_ATTACHMENT12_EXT 0x8CEC
#define GL_COLOR_ATTACHMENT12_NV 0x8CEC
#define GL_COLOR_ATTACHMENT13 0x8CED
#define GL_COLOR_ATTACHMENT13_EXT 0x8CED
#define GL_COLOR_ATTACHMENT13_NV 0x8CED
#define GL_COLOR_ATTACHMENT14 0x8CEE
#define GL_COLOR_ATTACHMENT14_EXT 0x8CEE
#define GL_COLOR_ATTACHMENT14_NV 0x8CEE
#define GL_COLOR_ATTACHMENT15 0x8CEF
#define GL_COLOR_ATTACHMENT15_EXT 0x8CEF
#define GL_COLOR_ATTACHMENT15_NV 0x8CEF
#define GL_COLOR_ATTACHMENT16 0x8CF0
#define GL_COLOR_ATTACHMENT17 0x8CF1
#define GL_COLOR_ATTACHMENT18 0x8CF2
#define GL_COLOR_ATTACHMENT19 0x8CF3
#define GL_COLOR_ATTACHMENT20 0x8CF4
#define GL_COLOR_ATTACHMENT21 0x8CF5
#define GL_COLOR_ATTACHMENT22 0x8CF6
#define GL_COLOR_ATTACHMENT23 0x8CF7
#define GL_COLOR_ATTACHMENT24 0x8CF8
#define GL_COLOR_ATTACHMENT25 0x8CF9
#define GL_COLOR_ATTACHMENT26 0x8CFA
#define GL_COLOR_ATTACHMENT27 0x8CFB
#define GL_COLOR_ATTACHMENT28 0x8CFC
#define GL_COLOR_ATTACHMENT29 0x8CFD
#define GL_COLOR_ATTACHMENT30 0x8CFE
#define GL_COLOR_ATTACHMENT31 0x8CFF
#define GL_DEPTH_ATTACHMENT 0x8D00
#define GL_DEPTH_ATTACHMENT_EXT 0x8D00
#define GL_DEPTH_ATTACHMENT_OES 0x8D00
#define GL_STENCIL_ATTACHMENT 0x8D20
#define GL_STENCIL_ATTACHMENT_EXT 0x8D20
#define GL_STENCIL_ATTACHMENT_OES 0x8D20
#define GL_FRAMEBUFFER 0x8D40
#define GL_FRAMEBUFFER_EXT 0x8D40
#define GL_FRAMEBUFFER_OES 0x8D40
#define GL_RENDERBUFFER 0x8D41
#define GL_RENDERBUFFER_EXT 0x8D41
#define GL_RENDERBUFFER_OES 0x8D41
#define GL_RENDERBUFFER_WIDTH 0x8D42
#define GL_RENDERBUFFER_WIDTH_EXT 0x8D42
#define GL_RENDERBUFFER_WIDTH_OES 0x8D42
#define GL_RENDERBUFFER_HEIGHT 0x8D43
#define GL_RENDERBUFFER_HEIGHT_EXT 0x8D43
#define GL_RENDERBUFFER_HEIGHT_OES 0x8D43
#define GL_RENDERBUFFER_INTERNAL_FORMAT 0x8D44
#define GL_RENDERBUFFER_INTERNAL_FORMAT_EXT 0x8D44
#define GL_RENDERBUFFER_INTERNAL_FORMAT_OES 0x8D44
#define GL_STENCIL_INDEX1 0x8D46
#define GL_STENCIL_INDEX1_EXT 0x8D46
#define GL_STENCIL_INDEX1_OES 0x8D46
#define GL_STENCIL_INDEX4 0x8D47
#define GL_STENCIL_INDEX4_EXT 0x8D47
#define GL_STENCIL_INDEX4_OES 0x8D47
#define GL_STENCIL_INDEX8 0x8D48
#define GL_STENCIL_INDEX8_EXT 0x8D48
#define GL_STENCIL_INDEX8_OES 0x8D48
#define GL_STENCIL_INDEX16 0x8D49
#define GL_STENCIL_INDEX16_EXT 0x8D49
#define GL_RENDERBUFFER_RED_SIZE 0x8D50
#define GL_RENDERBUFFER_RED_SIZE_EXT 0x8D50
#define GL_RENDERBUFFER_RED_SIZE_OES 0x8D50
#define GL_RENDERBUFFER_GREEN_SIZE 0x8D51
#define GL_RENDERBUFFER_GREEN_SIZE_EXT 0x8D51
#define GL_RENDERBUFFER_GREEN_SIZE_OES 0x8D51
#define GL_RENDERBUFFER_BLUE_SIZE 0x8D52
#define GL_RENDERBUFFER_BLUE_SIZE_EXT 0x8D52
#define GL_RENDERBUFFER_BLUE_SIZE_OES 0x8D52
#define GL_RENDERBUFFER_ALPHA_SIZE 0x8D53
#define GL_RENDERBUFFER_ALPHA_SIZE_EXT 0x8D53
#define GL_RENDERBUFFER_ALPHA_SIZE_OES 0x8D53
#define GL_RENDERBUFFER_DEPTH_SIZE 0x8D54
#define GL_RENDERBUFFER_DEPTH_SIZE_EXT 0x8D54
#define GL_RENDERBUFFER_DEPTH_SIZE_OES 0x8D54
#define GL_RENDERBUFFER_STENCIL_SIZE 0x8D55
#define GL_RENDERBUFFER_STENCIL_SIZE_EXT 0x8D55
#define GL_RENDERBUFFER_STENCIL_SIZE_OES 0x8D55
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT 0x8D56
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_NV 0x8D56
#define GL_MAX_SAMPLES 0x8D57
#define GL_MAX_SAMPLES_ANGLE 0x8D57
#define GL_MAX_SAMPLES_APPLE 0x8D57
#define GL_MAX_SAMPLES_EXT 0x8D57
#define GL_MAX_SAMPLES_NV 0x8D57
#define GL_TEXTURE_GEN_STR_OES 0x8D60
#define GL_HALF_FLOAT_OES 0x8D61
#define GL_RGB565_OES 0x8D62
#define GL_RGB565 0x8D62
#define GL_ETC1_RGB8_OES 0x8D64
#define GL_TEXTURE_EXTERNAL_OES 0x8D65
#define GL_SAMPLER_EXTERNAL_OES 0x8D66
#define GL_TEXTURE_BINDING_EXTERNAL_OES 0x8D67
#define GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES 0x8D68
#define GL_PRIMITIVE_RESTART_FIXED_INDEX 0x8D69
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE 0x8D6A
#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT 0x8D6A
#define GL_MAX_ELEMENT_INDEX 0x8D6B
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT 0x8D6C
#define GL_RGBA32UI 0x8D70
#define GL_RGBA32UI_EXT 0x8D70
#define GL_RGB32UI 0x8D71
#define GL_RGB32UI_EXT 0x8D71
#define GL_ALPHA32UI_EXT 0x8D72
#define GL_INTENSITY32UI_EXT 0x8D73
#define GL_LUMINANCE32UI_EXT 0x8D74
#define GL_LUMINANCE_ALPHA32UI_EXT 0x8D75
#define GL_RGBA16UI 0x8D76
#define GL_RGBA16UI_EXT 0x8D76
#define GL_RGB16UI 0x8D77
#define GL_RGB16UI_EXT 0x8D77
#define GL_ALPHA16UI_EXT 0x8D78
#define GL_INTENSITY16UI_EXT 0x8D79
#define GL_LUMINANCE16UI_EXT 0x8D7A
#define GL_LUMINANCE_ALPHA16UI_EXT 0x8D7B
#define GL_RGBA8UI 0x8D7C
#define GL_RGBA8UI_EXT 0x8D7C
#define GL_RGB8UI 0x8D7D
#define GL_RGB8UI_EXT 0x8D7D
#define GL_ALPHA8UI_EXT 0x8D7E
#define GL_INTENSITY8UI_EXT 0x8D7F
#define GL_LUMINANCE8UI_EXT 0x8D80
#define GL_LUMINANCE_ALPHA8UI_EXT 0x8D81
#define GL_RGBA32I 0x8D82
#define GL_RGBA32I_EXT 0x8D82
#define GL_RGB32I 0x8D83
#define GL_RGB32I_EXT 0x8D83
#define GL_ALPHA32I_EXT 0x8D84
#define GL_INTENSITY32I_EXT 0x8D85
#define GL_LUMINANCE32I_EXT 0x8D86
#define GL_LUMINANCE_ALPHA32I_EXT 0x8D87
#define GL_RGBA16I 0x8D88
#define GL_RGBA16I_EXT 0x8D88
#define GL_RGB16I 0x8D89
#define GL_RGB16I_EXT 0x8D89
#define GL_ALPHA16I_EXT 0x8D8A
#define GL_INTENSITY16I_EXT 0x8D8B
#define GL_LUMINANCE16I_EXT 0x8D8C
#define GL_LUMINANCE_ALPHA16I_EXT 0x8D8D
#define GL_RGBA8I 0x8D8E
#define GL_RGBA8I_EXT 0x8D8E
#define GL_RGB8I 0x8D8F
#define GL_RGB8I_EXT 0x8D8F
#define GL_ALPHA8I_EXT 0x8D90
#define GL_INTENSITY8I_EXT 0x8D91
#define GL_LUMINANCE8I_EXT 0x8D92
#define GL_LUMINANCE_ALPHA8I_EXT 0x8D93
#define GL_RED_INTEGER 0x8D94
#define GL_RED_INTEGER_EXT 0x8D94
#define GL_GREEN_INTEGER 0x8D95
#define GL_GREEN_INTEGER_EXT 0x8D95
#define GL_BLUE_INTEGER 0x8D96
#define GL_BLUE_INTEGER_EXT 0x8D96
#define GL_ALPHA_INTEGER 0x8D97
#define GL_ALPHA_INTEGER_EXT 0x8D97
#define GL_RGB_INTEGER 0x8D98
#define GL_RGB_INTEGER_EXT 0x8D98
#define GL_RGBA_INTEGER 0x8D99
#define GL_RGBA_INTEGER_EXT 0x8D99
#define GL_BGR_INTEGER 0x8D9A
#define GL_BGR_INTEGER_EXT 0x8D9A
#define GL_BGRA_INTEGER 0x8D9B
#define GL_BGRA_INTEGER_EXT 0x8D9B
#define GL_LUMINANCE_INTEGER_EXT 0x8D9C
#define GL_LUMINANCE_ALPHA_INTEGER_EXT 0x8D9D
#define GL_RGBA_INTEGER_MODE_EXT 0x8D9E
#define GL_INT_2_10_10_10_REV 0x8D9F
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV 0x8DA0
#define GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV 0x8DA1
#define GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV 0x8DA2
#define GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV 0x8DA3
#define GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV 0x8DA4
#define GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV 0x8DA5
#define GL_MAX_PROGRAM_GENERIC_RESULTS_NV 0x8DA6
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT 0x8DA7
#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED_OES 0x8DA7
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_OES 0x8DA8
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB 0x8DA9
#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT 0x8DA9
#define GL_LAYER_NV 0x8DAA
#define GL_DEPTH_COMPONENT32F_NV 0x8DAB
#define GL_DEPTH32F_STENCIL8_NV 0x8DAC
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV 0x8DAD
#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV 0x8DAD
#define GL_SHADER_INCLUDE_ARB 0x8DAE
#define GL_DEPTH_BUFFER_FLOAT_MODE_NV 0x8DAF
#define GL_FRAMEBUFFER_SRGB 0x8DB9
#define GL_FRAMEBUFFER_SRGB_EXT 0x8DB9
#define GL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x8DBA
#define GL_COMPRESSED_RED_RGTC1 0x8DBB
#define GL_COMPRESSED_RED_RGTC1_EXT 0x8DBB
#define GL_COMPRESSED_SIGNED_RED_RGTC1 0x8DBC
#define GL_COMPRESSED_SIGNED_RED_RGTC1_EXT 0x8DBC
#define GL_COMPRESSED_RED_GREEN_RGTC2_EXT 0x8DBD
#define GL_COMPRESSED_RG_RGTC2 0x8DBD
#define GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT 0x8DBE
#define GL_COMPRESSED_SIGNED_RG_RGTC2 0x8DBE
#define GL_SAMPLER_1D_ARRAY 0x8DC0
#define GL_SAMPLER_1D_ARRAY_EXT 0x8DC0
#define GL_SAMPLER_2D_ARRAY 0x8DC1
#define GL_SAMPLER_2D_ARRAY_EXT 0x8DC1
#define GL_SAMPLER_BUFFER 0x8DC2
#define GL_SAMPLER_BUFFER_EXT 0x8DC2
#define GL_SAMPLER_BUFFER_OES 0x8DC2
#define GL_SAMPLER_1D_ARRAY_SHADOW 0x8DC3
#define GL_SAMPLER_1D_ARRAY_SHADOW_EXT 0x8DC3
#define GL_SAMPLER_2D_ARRAY_SHADOW 0x8DC4
#define GL_SAMPLER_2D_ARRAY_SHADOW_EXT 0x8DC4
#define GL_SAMPLER_2D_ARRAY_SHADOW_NV 0x8DC4
#define GL_SAMPLER_CUBE_SHADOW 0x8DC5
#define GL_SAMPLER_CUBE_SHADOW_EXT 0x8DC5
#define GL_SAMPLER_CUBE_SHADOW_NV 0x8DC5
#define GL_UNSIGNED_INT_VEC2 0x8DC6
#define GL_UNSIGNED_INT_VEC2_EXT 0x8DC6
#define GL_UNSIGNED_INT_VEC3 0x8DC7
#define GL_UNSIGNED_INT_VEC3_EXT 0x8DC7
#define GL_UNSIGNED_INT_VEC4 0x8DC8
#define GL_UNSIGNED_INT_VEC4_EXT 0x8DC8
#define GL_INT_SAMPLER_1D 0x8DC9
#define GL_INT_SAMPLER_1D_EXT 0x8DC9
#define GL_INT_SAMPLER_2D 0x8DCA
#define GL_INT_SAMPLER_2D_EXT 0x8DCA
#define GL_INT_SAMPLER_3D 0x8DCB
#define GL_INT_SAMPLER_3D_EXT 0x8DCB
#define GL_INT_SAMPLER_CUBE 0x8DCC
#define GL_INT_SAMPLER_CUBE_EXT 0x8DCC
#define GL_INT_SAMPLER_2D_RECT 0x8DCD
#define GL_INT_SAMPLER_2D_RECT_EXT 0x8DCD
#define GL_INT_SAMPLER_1D_ARRAY 0x8DCE
#define GL_INT_SAMPLER_1D_ARRAY_EXT 0x8DCE
#define GL_INT_SAMPLER_2D_ARRAY 0x8DCF
#define GL_INT_SAMPLER_2D_ARRAY_EXT 0x8DCF
#define GL_INT_SAMPLER_BUFFER 0x8DD0
#define GL_INT_SAMPLER_BUFFER_EXT 0x8DD0
#define GL_INT_SAMPLER_BUFFER_OES 0x8DD0
#define GL_UNSIGNED_INT_SAMPLER_1D 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_1D_EXT 0x8DD1
#define GL_UNSIGNED_INT_SAMPLER_2D 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_2D_EXT 0x8DD2
#define GL_UNSIGNED_INT_SAMPLER_3D 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_3D_EXT 0x8DD3
#define GL_UNSIGNED_INT_SAMPLER_CUBE 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_CUBE_EXT 0x8DD4
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT 0x8DD5
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT 0x8DD6
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT 0x8DD7
#define GL_UNSIGNED_INT_SAMPLER_BUFFER 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT 0x8DD8
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_OES 0x8DD8
#define GL_GEOMETRY_SHADER 0x8DD9
#define GL_GEOMETRY_SHADER_ARB 0x8DD9
#define GL_GEOMETRY_SHADER_EXT 0x8DD9
#define GL_GEOMETRY_SHADER_OES 0x8DD9
#define GL_GEOMETRY_VERTICES_OUT_ARB 0x8DDA
#define GL_GEOMETRY_VERTICES_OUT_EXT 0x8DDA
#define GL_GEOMETRY_INPUT_TYPE_ARB 0x8DDB
#define GL_GEOMETRY_INPUT_TYPE_EXT 0x8DDB
#define GL_GEOMETRY_OUTPUT_TYPE_ARB 0x8DDC
#define GL_GEOMETRY_OUTPUT_TYPE_EXT 0x8DDC
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB 0x8DDD
#define GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT 0x8DDD
#define GL_MAX_VERTEX_VARYING_COMPONENTS_ARB 0x8DDE
#define GL_MAX_VERTEX_VARYING_COMPONENTS_EXT 0x8DDE
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS 0x8DDF
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB 0x8DDF
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT 0x8DDF
#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_OES 0x8DDF
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES 0x8DE0
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB 0x8DE0
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT 0x8DE0
#define GL_MAX_GEOMETRY_OUTPUT_VERTICES_OES 0x8DE0
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS 0x8DE1
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB 0x8DE1
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT 0x8DE1
#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_OES 0x8DE1
#define GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT 0x8DE2
#define GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT 0x8DE3
#define GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT 0x8DE4
#define GL_ACTIVE_SUBROUTINES 0x8DE5
#define GL_ACTIVE_SUBROUTINE_UNIFORMS 0x8DE6
#define GL_MAX_SUBROUTINES 0x8DE7
#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS 0x8DE8
#define GL_NAMED_STRING_LENGTH_ARB 0x8DE9
#define GL_NAMED_STRING_TYPE_ARB 0x8DEA
#define GL_MAX_BINDABLE_UNIFORM_SIZE_EXT 0x8DED
#define GL_UNIFORM_BUFFER_EXT 0x8DEE
#define GL_UNIFORM_BUFFER_BINDING_EXT 0x8DEF
#define GL_LOW_FLOAT 0x8DF0
#define GL_MEDIUM_FLOAT 0x8DF1
#define GL_HIGH_FLOAT 0x8DF2
#define GL_LOW_INT 0x8DF3
#define GL_MEDIUM_INT 0x8DF4
#define GL_HIGH_INT 0x8DF5
#define GL_UNSIGNED_INT_10_10_10_2_OES 0x8DF6
#define GL_INT_10_10_10_2_OES 0x8DF7
#define GL_SHADER_BINARY_FORMATS 0x8DF8
#define GL_NUM_SHADER_BINARY_FORMATS 0x8DF9
#define GL_SHADER_COMPILER 0x8DFA
#define GL_MAX_VERTEX_UNIFORM_VECTORS 0x8DFB
#define GL_MAX_VARYING_VECTORS 0x8DFC
#define GL_MAX_FRAGMENT_UNIFORM_VECTORS 0x8DFD
#define GL_RENDERBUFFER_COLOR_SAMPLES_NV 0x8E10
#define GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV 0x8E11
#define GL_MULTISAMPLE_COVERAGE_MODES_NV 0x8E12
#define GL_QUERY_WAIT 0x8E13
#define GL_QUERY_WAIT_NV 0x8E13
#define GL_QUERY_NO_WAIT 0x8E14
#define GL_QUERY_NO_WAIT_NV 0x8E14
#define GL_QUERY_BY_REGION_WAIT 0x8E15
#define GL_QUERY_BY_REGION_WAIT_NV 0x8E15
#define GL_QUERY_BY_REGION_NO_WAIT 0x8E16
#define GL_QUERY_BY_REGION_NO_WAIT_NV 0x8E16
#define GL_QUERY_WAIT_INVERTED 0x8E17
#define GL_QUERY_NO_WAIT_INVERTED 0x8E18
#define GL_QUERY_BY_REGION_WAIT_INVERTED 0x8E19
#define GL_QUERY_BY_REGION_NO_WAIT_INVERTED 0x8E1A
#define GL_POLYGON_OFFSET_CLAMP 0x8E1B
#define GL_POLYGON_OFFSET_CLAMP_EXT 0x8E1B
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E1E
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E1E
#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E1E
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E1F
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E1F
#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E1F
#define GL_COLOR_SAMPLES_NV 0x8E20
#define GL_TRANSFORM_FEEDBACK 0x8E22
#define GL_TRANSFORM_FEEDBACK_NV 0x8E22
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_PAUSED 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV 0x8E23
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_ACTIVE 0x8E24
#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV 0x8E24
#define GL_TRANSFORM_FEEDBACK_BINDING 0x8E25
#define GL_TRANSFORM_FEEDBACK_BINDING_NV 0x8E25
#define GL_FRAME_NV 0x8E26
#define GL_FIELDS_NV 0x8E27
#define GL_CURRENT_TIME_NV 0x8E28
#define GL_TIMESTAMP 0x8E28
#define GL_TIMESTAMP_EXT 0x8E28
#define GL_NUM_FILL_STREAMS_NV 0x8E29
#define GL_PRESENT_TIME_NV 0x8E2A
#define GL_PRESENT_DURATION_NV 0x8E2B
#define GL_DEPTH_COMPONENT16_NONLINEAR_NV 0x8E2C
#define GL_PROGRAM_MATRIX_EXT 0x8E2D
#define GL_TRANSPOSE_PROGRAM_MATRIX_EXT 0x8E2E
#define GL_PROGRAM_MATRIX_STACK_DEPTH_EXT 0x8E2F
#define GL_TEXTURE_SWIZZLE_R 0x8E42
#define GL_TEXTURE_SWIZZLE_R_EXT 0x8E42
#define GL_TEXTURE_SWIZZLE_G 0x8E43
#define GL_TEXTURE_SWIZZLE_G_EXT 0x8E43
#define GL_TEXTURE_SWIZZLE_B 0x8E44
#define GL_TEXTURE_SWIZZLE_B_EXT 0x8E44
#define GL_TEXTURE_SWIZZLE_A 0x8E45
#define GL_TEXTURE_SWIZZLE_A_EXT 0x8E45
#define GL_TEXTURE_SWIZZLE_RGBA 0x8E46
#define GL_TEXTURE_SWIZZLE_RGBA_EXT 0x8E46
#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS 0x8E47
#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH 0x8E48
#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH 0x8E49
#define GL_NUM_COMPATIBLE_SUBROUTINES 0x8E4A
#define GL_COMPATIBLE_SUBROUTINES 0x8E4B
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION 0x8E4C
#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT 0x8E4C
#define GL_FIRST_VERTEX_CONVENTION 0x8E4D
#define GL_FIRST_VERTEX_CONVENTION_EXT 0x8E4D
#define GL_FIRST_VERTEX_CONVENTION_OES 0x8E4D
#define GL_LAST_VERTEX_CONVENTION 0x8E4E
#define GL_LAST_VERTEX_CONVENTION_EXT 0x8E4E
#define GL_LAST_VERTEX_CONVENTION_OES 0x8E4E
#define GL_PROVOKING_VERTEX 0x8E4F
#define GL_PROVOKING_VERTEX_EXT 0x8E4F
#define GL_SAMPLE_POSITION 0x8E50
#define GL_SAMPLE_POSITION_NV 0x8E50
#define GL_SAMPLE_LOCATION_ARB 0x8E50
#define GL_SAMPLE_LOCATION_NV 0x8E50
#define GL_SAMPLE_MASK 0x8E51
#define GL_SAMPLE_MASK_NV 0x8E51
#define GL_SAMPLE_MASK_VALUE 0x8E52
#define GL_SAMPLE_MASK_VALUE_NV 0x8E52
#define GL_TEXTURE_BINDING_RENDERBUFFER_NV 0x8E53
#define GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV 0x8E54
#define GL_TEXTURE_RENDERBUFFER_NV 0x8E55
#define GL_SAMPLER_RENDERBUFFER_NV 0x8E56
#define GL_INT_SAMPLER_RENDERBUFFER_NV 0x8E57
#define GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV 0x8E58
#define GL_MAX_SAMPLE_MASK_WORDS 0x8E59
#define GL_MAX_SAMPLE_MASK_WORDS_NV 0x8E59
#define GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_EXT 0x8E5A
#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS_OES 0x8E5A
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET 0x8E5B
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_OES 0x8E5B
#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5B
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET 0x8E5C
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_OES 0x8E5C
#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV 0x8E5C
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS 0x8E5D
#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS_OES 0x8E5D
#define GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV 0x8E5D
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5E
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5E
#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET 0x8E5F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB 0x8E5F
#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_NV 0x8E5F
#define GL_MAX_MESH_UNIFORM_BLOCKS_NV 0x8E60
#define GL_MAX_MESH_TEXTURE_IMAGE_UNITS_NV 0x8E61
#define GL_MAX_MESH_IMAGE_UNIFORMS_NV 0x8E62
#define GL_MAX_MESH_UNIFORM_COMPONENTS_NV 0x8E63
#define GL_MAX_MESH_ATOMIC_COUNTER_BUFFERS_NV 0x8E64
#define GL_MAX_MESH_ATOMIC_COUNTERS_NV 0x8E65
#define GL_MAX_MESH_SHADER_STORAGE_BLOCKS_NV 0x8E66
#define GL_MAX_COMBINED_MESH_UNIFORM_COMPONENTS_NV 0x8E67
#define GL_MAX_TASK_UNIFORM_BLOCKS_NV 0x8E68
#define GL_MAX_TASK_TEXTURE_IMAGE_UNITS_NV 0x8E69
#define GL_MAX_TASK_IMAGE_UNIFORMS_NV 0x8E6A
#define GL_MAX_TASK_UNIFORM_COMPONENTS_NV 0x8E6B
#define GL_MAX_TASK_ATOMIC_COUNTER_BUFFERS_NV 0x8E6C
#define GL_MAX_TASK_ATOMIC_COUNTERS_NV 0x8E6D
#define GL_MAX_TASK_SHADER_STORAGE_BLOCKS_NV 0x8E6E
#define GL_MAX_COMBINED_TASK_UNIFORM_COMPONENTS_NV 0x8E6F
#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS 0x8E70
#define GL_MAX_VERTEX_STREAMS 0x8E71
#define GL_PATCH_VERTICES 0x8E72
#define GL_PATCH_VERTICES_EXT 0x8E72
#define GL_PATCH_VERTICES_OES 0x8E72
#define GL_PATCH_DEFAULT_INNER_LEVEL 0x8E73
#define GL_PATCH_DEFAULT_INNER_LEVEL_EXT 0x8E73
#define GL_PATCH_DEFAULT_OUTER_LEVEL 0x8E74
#define GL_PATCH_DEFAULT_OUTER_LEVEL_EXT 0x8E74
#define GL_TESS_CONTROL_OUTPUT_VERTICES 0x8E75
#define GL_TESS_CONTROL_OUTPUT_VERTICES_EXT 0x8E75
#define GL_TESS_CONTROL_OUTPUT_VERTICES_OES 0x8E75
#define GL_TESS_GEN_MODE 0x8E76
#define GL_TESS_GEN_MODE_EXT 0x8E76
#define GL_TESS_GEN_MODE_OES 0x8E76
#define GL_TESS_GEN_SPACING 0x8E77
#define GL_TESS_GEN_SPACING_EXT 0x8E77
#define GL_TESS_GEN_SPACING_OES 0x8E77
#define GL_TESS_GEN_VERTEX_ORDER 0x8E78
#define GL_TESS_GEN_VERTEX_ORDER_EXT 0x8E78
#define GL_TESS_GEN_VERTEX_ORDER_OES 0x8E78
#define GL_TESS_GEN_POINT_MODE 0x8E79
#define GL_TESS_GEN_POINT_MODE_EXT 0x8E79
#define GL_TESS_GEN_POINT_MODE_OES 0x8E79
#define GL_ISOLINES 0x8E7A
#define GL_ISOLINES_EXT 0x8E7A
#define GL_ISOLINES_OES 0x8E7A
#define GL_FRACTIONAL_ODD 0x8E7B
#define GL_FRACTIONAL_ODD_EXT 0x8E7B
#define GL_FRACTIONAL_ODD_OES 0x8E7B
#define GL_FRACTIONAL_EVEN 0x8E7C
#define GL_FRACTIONAL_EVEN_EXT 0x8E7C
#define GL_FRACTIONAL_EVEN_OES 0x8E7C
#define GL_MAX_PATCH_VERTICES 0x8E7D
#define GL_MAX_PATCH_VERTICES_EXT 0x8E7D
#define GL_MAX_PATCH_VERTICES_OES 0x8E7D
#define GL_MAX_TESS_GEN_LEVEL 0x8E7E
#define GL_MAX_TESS_GEN_LEVEL_EXT 0x8E7E
#define GL_MAX_TESS_GEN_LEVEL_OES 0x8E7E
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS 0x8E7F
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_EXT 0x8E7F
#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS_OES 0x8E7F
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS 0x8E80
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_EXT 0x8E80
#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS_OES 0x8E80
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS 0x8E81
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_EXT 0x8E81
#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS_OES 0x8E81
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS 0x8E82
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_EXT 0x8E82
#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS_OES 0x8E82
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS 0x8E83
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_EXT 0x8E83
#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS_OES 0x8E83
#define GL_MAX_TESS_PATCH_COMPONENTS 0x8E84
#define GL_MAX_TESS_PATCH_COMPONENTS_EXT 0x8E84
#define GL_MAX_TESS_PATCH_COMPONENTS_OES 0x8E84
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS 0x8E85
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_EXT 0x8E85
#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS_OES 0x8E85
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS 0x8E86
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_EXT 0x8E86
#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS_OES 0x8E86
#define GL_TESS_EVALUATION_SHADER 0x8E87
#define GL_TESS_EVALUATION_SHADER_EXT 0x8E87
#define GL_TESS_EVALUATION_SHADER_OES 0x8E87
#define GL_TESS_CONTROL_SHADER 0x8E88
#define GL_TESS_CONTROL_SHADER_EXT 0x8E88
#define GL_TESS_CONTROL_SHADER_OES 0x8E88
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_EXT 0x8E89
#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS_OES 0x8E89
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_EXT 0x8E8A
#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS_OES 0x8E8A
#define GL_COMPRESSED_RGBA_BPTC_UNORM 0x8E8C
#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB 0x8E8C
#define GL_COMPRESSED_RGBA_BPTC_UNORM_EXT 0x8E8C
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM 0x8E8D
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB 0x8E8D
#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT 0x8E8D
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT 0x8E8E
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT 0x8E8F
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB 0x8E8F
#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT 0x8E8F
#define GL_TRP_IMG 0x8EA0
#define GL_TRP_ERROR_CONTEXT_RESET_IMG 0x8EA1
#define GL_TRP_UNSUPPORTED_CONTEXT_IMG 0x8EA2
#define GL_PVRIC_SIGNATURE_MISMATCH_IMG 0x8EA3
#define GL_COVERAGE_COMPONENT_NV 0x8ED0
#define GL_COVERAGE_COMPONENT4_NV 0x8ED1
#define GL_COVERAGE_ATTACHMENT_NV 0x8ED2
#define GL_COVERAGE_BUFFERS_NV 0x8ED3
#define GL_COVERAGE_SAMPLES_NV 0x8ED4
#define GL_COVERAGE_ALL_FRAGMENTS_NV 0x8ED5
#define GL_COVERAGE_EDGE_FRAGMENTS_NV 0x8ED6
#define GL_COVERAGE_AUTOMATIC_NV 0x8ED7
#define GL_INCLUSIVE_EXT 0x8F10
#define GL_EXCLUSIVE_EXT 0x8F11
#define GL_WINDOW_RECTANGLE_EXT 0x8F12
#define GL_WINDOW_RECTANGLE_MODE_EXT 0x8F13
#define GL_MAX_WINDOW_RECTANGLES_EXT 0x8F14
#define GL_NUM_WINDOW_RECTANGLES_EXT 0x8F15
#define GL_BUFFER_GPU_ADDRESS_NV 0x8F1D
#define GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV 0x8F1E
#define GL_ELEMENT_ARRAY_UNIFIED_NV 0x8F1F
#define GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV 0x8F20
#define GL_VERTEX_ARRAY_ADDRESS_NV 0x8F21
#define GL_NORMAL_ARRAY_ADDRESS_NV 0x8F22
#define GL_COLOR_ARRAY_ADDRESS_NV 0x8F23
#define GL_INDEX_ARRAY_ADDRESS_NV 0x8F24
#define GL_TEXTURE_COORD_ARRAY_ADDRESS_NV 0x8F25
#define GL_EDGE_FLAG_ARRAY_ADDRESS_NV 0x8F26
#define GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV 0x8F27
#define GL_FOG_COORD_ARRAY_ADDRESS_NV 0x8F28
#define GL_ELEMENT_ARRAY_ADDRESS_NV 0x8F29
#define GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV 0x8F2A
#define GL_VERTEX_ARRAY_LENGTH_NV 0x8F2B
#define GL_NORMAL_ARRAY_LENGTH_NV 0x8F2C
#define GL_COLOR_ARRAY_LENGTH_NV 0x8F2D
#define GL_INDEX_ARRAY_LENGTH_NV 0x8F2E
#define GL_TEXTURE_COORD_ARRAY_LENGTH_NV 0x8F2F
#define GL_EDGE_FLAG_ARRAY_LENGTH_NV 0x8F30
#define GL_SECONDARY_COLOR_ARRAY_LENGTH_NV 0x8F31
#define GL_FOG_COORD_ARRAY_LENGTH_NV 0x8F32
#define GL_ELEMENT_ARRAY_LENGTH_NV 0x8F33
#define GL_GPU_ADDRESS_NV 0x8F34
#define GL_MAX_SHADER_BUFFER_ADDRESS_NV 0x8F35
#define GL_COPY_READ_BUFFER 0x8F36
#define GL_COPY_READ_BUFFER_NV 0x8F36
#define GL_COPY_READ_BUFFER_BINDING 0x8F36
#define GL_COPY_WRITE_BUFFER 0x8F37
#define GL_COPY_WRITE_BUFFER_NV 0x8F37
#define GL_COPY_WRITE_BUFFER_BINDING 0x8F37
#define GL_MAX_IMAGE_UNITS 0x8F38
#define GL_MAX_IMAGE_UNITS_EXT 0x8F38
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS 0x8F39
#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT 0x8F39
#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES 0x8F39
#define GL_IMAGE_BINDING_NAME 0x8F3A
#define GL_IMAGE_BINDING_NAME_EXT 0x8F3A
#define GL_IMAGE_BINDING_LEVEL 0x8F3B
#define GL_IMAGE_BINDING_LEVEL_EXT 0x8F3B
#define GL_IMAGE_BINDING_LAYERED 0x8F3C
#define GL_IMAGE_BINDING_LAYERED_EXT 0x8F3C
#define GL_IMAGE_BINDING_LAYER 0x8F3D
#define GL_IMAGE_BINDING_LAYER_EXT 0x8F3D
#define GL_IMAGE_BINDING_ACCESS 0x8F3E
#define GL_IMAGE_BINDING_ACCESS_EXT 0x8F3E
#define GL_DRAW_INDIRECT_BUFFER 0x8F3F
#define GL_DRAW_INDIRECT_UNIFIED_NV 0x8F40
#define GL_DRAW_INDIRECT_ADDRESS_NV 0x8F41
#define GL_DRAW_INDIRECT_LENGTH_NV 0x8F42
#define GL_DRAW_INDIRECT_BUFFER_BINDING 0x8F43
#define GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV 0x8F44
#define GL_MAX_PROGRAM_SUBROUTINE_NUM_NV 0x8F45
#define GL_DOUBLE_MAT2 0x8F46
#define GL_DOUBLE_MAT2_EXT 0x8F46
#define GL_DOUBLE_MAT3 0x8F47
#define GL_DOUBLE_MAT3_EXT 0x8F47
#define GL_DOUBLE_MAT4 0x8F48
#define GL_DOUBLE_MAT4_EXT 0x8F48
#define GL_DOUBLE_MAT2x3 0x8F49
#define GL_DOUBLE_MAT2x3_EXT 0x8F49
#define GL_DOUBLE_MAT2x4 0x8F4A
#define GL_DOUBLE_MAT2x4_EXT 0x8F4A
#define GL_DOUBLE_MAT3x2 0x8F4B
#define GL_DOUBLE_MAT3x2_EXT 0x8F4B
#define GL_DOUBLE_MAT3x4 0x8F4C
#define GL_DOUBLE_MAT3x4_EXT 0x8F4C
#define GL_DOUBLE_MAT4x2 0x8F4D
#define GL_DOUBLE_MAT4x2_EXT 0x8F4D
#define GL_DOUBLE_MAT4x3 0x8F4E
#define GL_DOUBLE_MAT4x3_EXT 0x8F4E
#define GL_VERTEX_BINDING_BUFFER 0x8F4F
#define GL_MALI_SHADER_BINARY_ARM 0x8F60
#define GL_MALI_PROGRAM_BINARY_ARM 0x8F61
#define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_FAST_SIZE_EXT 0x8F63
#define GL_SHADER_PIXEL_LOCAL_STORAGE_EXT 0x8F64
#define GL_FETCH_PER_SAMPLE_ARM 0x8F65
#define GL_FRAGMENT_SHADER_FRAMEBUFFER_FETCH_MRT_ARM 0x8F66
#define GL_MAX_SHADER_PIXEL_LOCAL_STORAGE_SIZE_EXT 0x8F67
#define GL_TEXTURE_ASTC_DECODE_PRECISION_EXT 0x8F69
#define GL_TEXTURE_UNNORMALIZED_COORDINATES_ARM 0x8F6A
#define GL_NUM_SURFACE_COMPRESSION_FIXED_RATES_EXT 0x8F6E
#define GL_FRAGMENT_SHADING_RATE_NON_TRIVIAL_COMBINERS_SUPPORTED_EXT 0x8F6F
#define GL_RED_SNORM 0x8F90
#define GL_RG_SNORM 0x8F91
#define GL_RGB_SNORM 0x8F92
#define GL_RGBA_SNORM 0x8F93
#define GL_R8_SNORM 0x8F94
#define GL_RG8_SNORM 0x8F95
#define GL_RGB8_SNORM 0x8F96
#define GL_RGBA8_SNORM 0x8F97
#define GL_R16_SNORM 0x8F98
#define GL_R16_SNORM_EXT 0x8F98
#define GL_RG16_SNORM 0x8F99
#define GL_RG16_SNORM_EXT 0x8F99
#define GL_RGB16_SNORM 0x8F9A
#define GL_RGB16_SNORM_EXT 0x8F9A
#define GL_RGBA16_SNORM 0x8F9B
#define GL_RGBA16_SNORM_EXT 0x8F9B
#define GL_SIGNED_NORMALIZED 0x8F9C
#define GL_PRIMITIVE_RESTART 0x8F9D
#define GL_PRIMITIVE_RESTART_INDEX 0x8F9E
#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB 0x8F9F
#define GL_PERFMON_GLOBAL_MODE_QCOM 0x8FA0
#define GL_MAX_SHADER_SUBSAMPLED_IMAGE_UNITS_QCOM 0x8FA1
#define GL_BINNING_CONTROL_HINT_QCOM 0x8FB0
#define GL_CPU_OPTIMIZED_QCOM 0x8FB1
#define GL_GPU_OPTIMIZED_QCOM 0x8FB2
#define GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM 0x8FB3
#define GL_GPU_DISJOINT_EXT 0x8FBB
#define GL_SR8_EXT 0x8FBD
#define GL_SRG8_EXT 0x8FBE
#define GL_TEXTURE_FORMAT_SRGB_OVERRIDE_EXT 0x8FBF
#define GL_SHADER_BINARY_VIV 0x8FC4
#define GL_INT8_NV 0x8FE0
#define GL_INT8_VEC2_NV 0x8FE1
#define GL_INT8_VEC3_NV 0x8FE2
#define GL_INT8_VEC4_NV 0x8FE3
#define GL_INT16_NV 0x8FE4
#define GL_INT16_VEC2_NV 0x8FE5
#define GL_INT16_VEC3_NV 0x8FE6
#define GL_INT16_VEC4_NV 0x8FE7
#define GL_INT64_VEC2_ARB 0x8FE9
#define GL_INT64_VEC2_NV 0x8FE9
#define GL_INT64_VEC3_ARB 0x8FEA
#define GL_INT64_VEC3_NV 0x8FEA
#define GL_INT64_VEC4_ARB 0x8FEB
#define GL_INT64_VEC4_NV 0x8FEB
#define GL_UNSIGNED_INT8_NV 0x8FEC
#define GL_UNSIGNED_INT8_VEC2_NV 0x8FED
#define GL_UNSIGNED_INT8_VEC3_NV 0x8FEE
#define GL_UNSIGNED_INT8_VEC4_NV 0x8FEF
#define GL_UNSIGNED_INT16_NV 0x8FF0
#define GL_UNSIGNED_INT16_VEC2_NV 0x8FF1
#define GL_UNSIGNED_INT16_VEC3_NV 0x8FF2
#define GL_UNSIGNED_INT16_VEC4_NV 0x8FF3
#define GL_UNSIGNED_INT64_VEC2_ARB 0x8FF5
#define GL_UNSIGNED_INT64_VEC2_NV 0x8FF5
#define GL_UNSIGNED_INT64_VEC3_ARB 0x8FF6
#define GL_UNSIGNED_INT64_VEC3_NV 0x8FF6
#define GL_UNSIGNED_INT64_VEC4_ARB 0x8FF7
#define GL_UNSIGNED_INT64_VEC4_NV 0x8FF7
#define GL_FLOAT16_NV 0x8FF8
#define GL_FLOAT16_VEC2_NV 0x8FF9
#define GL_FLOAT16_VEC3_NV 0x8FFA
#define GL_FLOAT16_VEC4_NV 0x8FFB
#define GL_DOUBLE_VEC2 0x8FFC
#define GL_DOUBLE_VEC2_EXT 0x8FFC
#define GL_DOUBLE_VEC3 0x8FFD
#define GL_DOUBLE_VEC3_EXT 0x8FFD
#define GL_DOUBLE_VEC4 0x8FFE
#define GL_DOUBLE_VEC4_EXT 0x8FFE
#define GL_SAMPLER_BUFFER_AMD 0x9001
#define GL_INT_SAMPLER_BUFFER_AMD 0x9002
#define GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD 0x9003
#define GL_TESSELLATION_MODE_AMD 0x9004
#define GL_TESSELLATION_FACTOR_AMD 0x9005
#define GL_DISCRETE_AMD 0x9006
#define GL_CONTINUOUS_AMD 0x9007
#define GL_TEXTURE_CUBE_MAP_ARRAY 0x9009
#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB 0x9009
#define GL_TEXTURE_CUBE_MAP_ARRAY_EXT 0x9009
#define GL_TEXTURE_CUBE_MAP_ARRAY_OES 0x9009
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY 0x900A
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB 0x900A
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_EXT 0x900A
#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_OES 0x900A
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY 0x900B
#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB 0x900B
#define GL_SAMPLER_CUBE_MAP_ARRAY 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_OES 0x900C
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW 0x900D
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB 0x900D
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_EXT 0x900D
#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_OES 0x900D
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY 0x900E
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900E
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900E
#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_OES 0x900E
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY 0x900F
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB 0x900F
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_EXT 0x900F
#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_OES 0x900F
#define GL_ALPHA_SNORM 0x9010
#define GL_LUMINANCE_SNORM 0x9011
#define GL_LUMINANCE_ALPHA_SNORM 0x9012
#define GL_INTENSITY_SNORM 0x9013
#define GL_ALPHA8_SNORM 0x9014
#define GL_LUMINANCE8_SNORM 0x9015
#define GL_LUMINANCE8_ALPHA8_SNORM 0x9016
#define GL_INTENSITY8_SNORM 0x9017
#define GL_ALPHA16_SNORM 0x9018
#define GL_LUMINANCE16_SNORM 0x9019
#define GL_LUMINANCE16_ALPHA16_SNORM 0x901A
#define GL_INTENSITY16_SNORM 0x901B
#define GL_FACTOR_MIN_AMD 0x901C
#define GL_FACTOR_MAX_AMD 0x901D
#define GL_DEPTH_CLAMP_NEAR_AMD 0x901E
#define GL_DEPTH_CLAMP_FAR_AMD 0x901F
#define GL_VIDEO_BUFFER_NV 0x9020
#define GL_VIDEO_BUFFER_BINDING_NV 0x9021
#define GL_FIELD_UPPER_NV 0x9022
#define GL_FIELD_LOWER_NV 0x9023
#define GL_NUM_VIDEO_CAPTURE_STREAMS_NV 0x9024
#define GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV 0x9025
#define GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV 0x9026
#define GL_LAST_VIDEO_CAPTURE_STATUS_NV 0x9027
#define GL_VIDEO_BUFFER_PITCH_NV 0x9028
#define GL_VIDEO_COLOR_CONVERSION_MATRIX_NV 0x9029
#define GL_VIDEO_COLOR_CONVERSION_MAX_NV 0x902A
#define GL_VIDEO_COLOR_CONVERSION_MIN_NV 0x902B
#define GL_VIDEO_COLOR_CONVERSION_OFFSET_NV 0x902C
#define GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV 0x902D
#define GL_PARTIAL_SUCCESS_NV 0x902E
#define GL_SUCCESS_NV 0x902F
#define GL_FAILURE_NV 0x9030
#define GL_YCBYCR8_422_NV 0x9031
#define GL_YCBAYCR8A_4224_NV 0x9032
#define GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV 0x9033
#define GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV 0x9034
#define GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV 0x9035
#define GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV 0x9036
#define GL_Z4Y12Z4CB12Z4CR12_444_NV 0x9037
#define GL_VIDEO_CAPTURE_FRAME_WIDTH_NV 0x9038
#define GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV 0x9039
#define GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV 0x903A
#define GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV 0x903B
#define GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV 0x903C
#define GL_TEXTURE_COVERAGE_SAMPLES_NV 0x9045
#define GL_TEXTURE_COLOR_SAMPLES_NV 0x9046
#define GL_GPU_MEMORY_INFO_DEDICATED_VIDMEM_NVX 0x9047
#define GL_GPU_MEMORY_INFO_TOTAL_AVAILABLE_MEMORY_NVX 0x9048
#define GL_GPU_MEMORY_INFO_CURRENT_AVAILABLE_VIDMEM_NVX 0x9049
#define GL_GPU_MEMORY_INFO_EVICTION_COUNT_NVX 0x904A
#define GL_GPU_MEMORY_INFO_EVICTED_MEMORY_NVX 0x904B
#define GL_IMAGE_1D 0x904C
#define GL_IMAGE_1D_EXT 0x904C
#define GL_IMAGE_2D 0x904D
#define GL_IMAGE_2D_EXT 0x904D
#define GL_IMAGE_3D 0x904E
#define GL_IMAGE_3D_EXT 0x904E
#define GL_IMAGE_2D_RECT 0x904F
#define GL_IMAGE_2D_RECT_EXT 0x904F
#define GL_IMAGE_CUBE 0x9050
#define GL_IMAGE_CUBE_EXT 0x9050
#define GL_IMAGE_BUFFER 0x9051
#define GL_IMAGE_BUFFER_EXT 0x9051
#define GL_IMAGE_BUFFER_OES 0x9051
#define GL_IMAGE_1D_ARRAY 0x9052
#define GL_IMAGE_1D_ARRAY_EXT 0x9052
#define GL_IMAGE_2D_ARRAY 0x9053
#define GL_IMAGE_2D_ARRAY_EXT 0x9053
#define GL_IMAGE_CUBE_MAP_ARRAY 0x9054
#define GL_IMAGE_CUBE_MAP_ARRAY_EXT 0x9054
#define GL_IMAGE_CUBE_MAP_ARRAY_OES 0x9054
#define GL_IMAGE_2D_MULTISAMPLE 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_EXT 0x9055
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY 0x9056
#define GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9056
#define GL_INT_IMAGE_1D 0x9057
#define GL_INT_IMAGE_1D_EXT 0x9057
#define GL_INT_IMAGE_2D 0x9058
#define GL_INT_IMAGE_2D_EXT 0x9058
#define GL_INT_IMAGE_3D 0x9059
#define GL_INT_IMAGE_3D_EXT 0x9059
#define GL_INT_IMAGE_2D_RECT 0x905A
#define GL_INT_IMAGE_2D_RECT_EXT 0x905A
#define GL_INT_IMAGE_CUBE 0x905B
#define GL_INT_IMAGE_CUBE_EXT 0x905B
#define GL_INT_IMAGE_BUFFER 0x905C
#define GL_INT_IMAGE_BUFFER_EXT 0x905C
#define GL_INT_IMAGE_BUFFER_OES 0x905C
#define GL_INT_IMAGE_1D_ARRAY 0x905D
#define GL_INT_IMAGE_1D_ARRAY_EXT 0x905D
#define GL_INT_IMAGE_2D_ARRAY 0x905E
#define GL_INT_IMAGE_2D_ARRAY_EXT 0x905E
#define GL_INT_IMAGE_CUBE_MAP_ARRAY 0x905F
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x905F
#define GL_INT_IMAGE_CUBE_MAP_ARRAY_OES 0x905F
#define GL_INT_IMAGE_2D_MULTISAMPLE 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_EXT 0x9060
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x9061
#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x9061
#define GL_UNSIGNED_INT_IMAGE_1D 0x9062
#define GL_UNSIGNED_INT_IMAGE_1D_EXT 0x9062
#define GL_UNSIGNED_INT_IMAGE_2D 0x9063
#define GL_UNSIGNED_INT_IMAGE_2D_EXT 0x9063
#define GL_UNSIGNED_INT_IMAGE_3D 0x9064
#define GL_UNSIGNED_INT_IMAGE_3D_EXT 0x9064
#define GL_UNSIGNED_INT_IMAGE_2D_RECT 0x9065
#define GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT 0x9065
#define GL_UNSIGNED_INT_IMAGE_CUBE 0x9066
#define GL_UNSIGNED_INT_IMAGE_CUBE_EXT 0x9066
#define GL_UNSIGNED_INT_IMAGE_BUFFER 0x9067
#define GL_UNSIGNED_INT_IMAGE_BUFFER_EXT 0x9067
#define GL_UNSIGNED_INT_IMAGE_BUFFER_OES 0x9067
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY 0x9068
#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT 0x9068
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY 0x9069
#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT 0x9069
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY 0x906A
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT 0x906A
#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_OES 0x906A
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT 0x906B
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY 0x906C
#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT 0x906C
#define GL_MAX_IMAGE_SAMPLES 0x906D
#define GL_MAX_IMAGE_SAMPLES_EXT 0x906D
#define GL_IMAGE_BINDING_FORMAT 0x906E
#define GL_IMAGE_BINDING_FORMAT_EXT 0x906E
#define GL_RGB10_A2UI 0x906F
#define GL_PATH_FORMAT_SVG_NV 0x9070
#define GL_PATH_FORMAT_PS_NV 0x9071
#define GL_STANDARD_FONT_NAME_NV 0x9072
#define GL_SYSTEM_FONT_NAME_NV 0x9073
#define GL_FILE_NAME_NV 0x9074
#define GL_PATH_STROKE_WIDTH_NV 0x9075
#define GL_PATH_END_CAPS_NV 0x9076
#define GL_PATH_INITIAL_END_CAP_NV 0x9077
#define GL_PATH_TERMINAL_END_CAP_NV 0x9078
#define GL_PATH_JOIN_STYLE_NV 0x9079
#define GL_PATH_MITER_LIMIT_NV 0x907A
#define GL_PATH_DASH_CAPS_NV 0x907B
#define GL_PATH_INITIAL_DASH_CAP_NV 0x907C
#define GL_PATH_TERMINAL_DASH_CAP_NV 0x907D
#define GL_PATH_DASH_OFFSET_NV 0x907E
#define GL_PATH_CLIENT_LENGTH_NV 0x907F
#define GL_PATH_FILL_MODE_NV 0x9080
#define GL_PATH_FILL_MASK_NV 0x9081
#define GL_PATH_FILL_COVER_MODE_NV 0x9082
#define GL_PATH_STROKE_COVER_MODE_NV 0x9083
#define GL_PATH_STROKE_MASK_NV 0x9084
#define GL_COUNT_UP_NV 0x9088
#define GL_COUNT_DOWN_NV 0x9089
#define GL_PATH_OBJECT_BOUNDING_BOX_NV 0x908A
#define GL_CONVEX_HULL_NV 0x908B
#define GL_BOUNDING_BOX_NV 0x908D
#define GL_TRANSLATE_X_NV 0x908E
#define GL_TRANSLATE_Y_NV 0x908F
#define GL_TRANSLATE_2D_NV 0x9090
#define GL_TRANSLATE_3D_NV 0x9091
#define GL_AFFINE_2D_NV 0x9092
#define GL_AFFINE_3D_NV 0x9094
#define GL_TRANSPOSE_AFFINE_2D_NV 0x9096
#define GL_TRANSPOSE_AFFINE_3D_NV 0x9098
#define GL_UTF8_NV 0x909A
#define GL_UTF16_NV 0x909B
#define GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV 0x909C
#define GL_PATH_COMMAND_COUNT_NV 0x909D
#define GL_PATH_COORD_COUNT_NV 0x909E
#define GL_PATH_DASH_ARRAY_COUNT_NV 0x909F
#define GL_PATH_COMPUTED_LENGTH_NV 0x90A0
#define GL_PATH_FILL_BOUNDING_BOX_NV 0x90A1
#define GL_PATH_STROKE_BOUNDING_BOX_NV 0x90A2
#define GL_SQUARE_NV 0x90A3
#define GL_ROUND_NV 0x90A4
#define GL_TRIANGULAR_NV 0x90A5
#define GL_BEVEL_NV 0x90A6
#define GL_MITER_REVERT_NV 0x90A7
#define GL_MITER_TRUNCATE_NV 0x90A8
#define GL_SKIP_MISSING_GLYPH_NV 0x90A9
#define GL_USE_MISSING_GLYPH_NV 0x90AA
#define GL_PATH_ERROR_POSITION_NV 0x90AB
#define GL_PATH_FOG_GEN_MODE_NV 0x90AC
#define GL_ACCUM_ADJACENT_PAIRS_NV 0x90AD
#define GL_ADJACENT_PAIRS_NV 0x90AE
#define GL_FIRST_TO_REST_NV 0x90AF
#define GL_PATH_GEN_MODE_NV 0x90B0
#define GL_PATH_GEN_COEFF_NV 0x90B1
#define GL_PATH_GEN_COLOR_FORMAT_NV 0x90B2
#define GL_PATH_GEN_COMPONENTS_NV 0x90B3
#define GL_PATH_DASH_OFFSET_RESET_NV 0x90B4
#define GL_MOVE_TO_RESETS_NV 0x90B5
#define GL_MOVE_TO_CONTINUES_NV 0x90B6
#define GL_PATH_STENCIL_FUNC_NV 0x90B7
#define GL_PATH_STENCIL_REF_NV 0x90B8
#define GL_PATH_STENCIL_VALUE_MASK_NV 0x90B9
#define GL_SCALED_RESOLVE_FASTEST_EXT 0x90BA
#define GL_SCALED_RESOLVE_NICEST_EXT 0x90BB
#define GL_MIN_MAP_BUFFER_ALIGNMENT 0x90BC
#define GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV 0x90BD
#define GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV 0x90BE
#define GL_PATH_COVER_DEPTH_FUNC_NV 0x90BF
#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE 0x90C7
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE 0x90C8
#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS 0x90C9
#define GL_MAX_VERTEX_IMAGE_UNIFORMS 0x90CA
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS 0x90CB
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_EXT 0x90CB
#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS_OES 0x90CB
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS 0x90CC
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_EXT 0x90CC
#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS_OES 0x90CC
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS 0x90CD
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_EXT 0x90CD
#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS_OES 0x90CD
#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS 0x90CE
#define GL_MAX_COMBINED_IMAGE_UNIFORMS 0x90CF
#define GL_MAX_DEEP_3D_TEXTURE_WIDTH_HEIGHT_NV 0x90D0
#define GL_MAX_DEEP_3D_TEXTURE_DEPTH_NV 0x90D1
#define GL_SHADER_STORAGE_BUFFER 0x90D2
#define GL_SHADER_STORAGE_BUFFER_BINDING 0x90D3
#define GL_SHADER_STORAGE_BUFFER_START 0x90D4
#define GL_SHADER_STORAGE_BUFFER_SIZE 0x90D5
#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS 0x90D6
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS 0x90D7
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_EXT 0x90D7
#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS_OES 0x90D7
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS 0x90D8
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_EXT 0x90D8
#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS_OES 0x90D8
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS 0x90D9
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_EXT 0x90D9
#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS_OES 0x90D9
#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS 0x90DA
#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS 0x90DB
#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS 0x90DC
#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS 0x90DD
#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE 0x90DE
#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT 0x90DF
#define GL_SYNC_X11_FENCE_EXT 0x90E1
#define GL_DEPTH_STENCIL_TEXTURE_MODE 0x90EA
#define GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS 0x90EB
#define GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB 0x90EB
#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER 0x90EC
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER 0x90ED
#define GL_DISPATCH_INDIRECT_BUFFER 0x90EE
#define GL_DISPATCH_INDIRECT_BUFFER_BINDING 0x90EF
#define GL_COLOR_ATTACHMENT_EXT 0x90F0
#define GL_MULTIVIEW_EXT 0x90F1
#define GL_MAX_MULTIVIEW_BUFFERS_EXT 0x90F2
#define GL_CONTEXT_ROBUST_ACCESS 0x90F3
#define GL_CONTEXT_ROBUST_ACCESS_EXT 0x90F3
#define GL_CONTEXT_ROBUST_ACCESS_KHR 0x90F3
#define GL_COMPUTE_PROGRAM_NV 0x90FB
#define GL_COMPUTE_PROGRAM_PARAMETER_BUFFER_NV 0x90FC
#define GL_TEXTURE_2D_MULTISAMPLE 0x9100
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE 0x9101
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9102
#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY_OES 0x9102
#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY 0x9103
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE 0x9104
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY 0x9105
#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY_OES 0x9105
#define GL_TEXTURE_SAMPLES 0x9106
#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS 0x9107
#define GL_SAMPLER_2D_MULTISAMPLE 0x9108
#define GL_INT_SAMPLER_2D_MULTISAMPLE 0x9109
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE 0x910A
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910B
#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910B
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910C
#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910C
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY 0x910D
#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY_OES 0x910D
#define GL_MAX_COLOR_TEXTURE_SAMPLES 0x910E
#define GL_MAX_DEPTH_TEXTURE_SAMPLES 0x910F
#define GL_MAX_INTEGER_SAMPLES 0x9110
#define GL_MAX_SERVER_WAIT_TIMEOUT 0x9111
#define GL_MAX_SERVER_WAIT_TIMEOUT_APPLE 0x9111
#define GL_OBJECT_TYPE 0x9112
#define GL_OBJECT_TYPE_APPLE 0x9112
#define GL_SYNC_CONDITION 0x9113
#define GL_SYNC_CONDITION_APPLE 0x9113
#define GL_SYNC_STATUS 0x9114
#define GL_SYNC_STATUS_APPLE 0x9114
#define GL_SYNC_FLAGS 0x9115
#define GL_SYNC_FLAGS_APPLE 0x9115
#define GL_SYNC_FENCE 0x9116
#define GL_SYNC_FENCE_APPLE 0x9116
#define GL_SYNC_GPU_COMMANDS_COMPLETE 0x9117
#define GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE 0x9117
#define GL_UNSIGNALED 0x9118
#define GL_UNSIGNALED_APPLE 0x9118
#define GL_SIGNALED 0x9119
#define GL_SIGNALED_APPLE 0x9119
#define GL_ALREADY_SIGNALED 0x911A
#define GL_ALREADY_SIGNALED_APPLE 0x911A
#define GL_TIMEOUT_EXPIRED 0x911B
#define GL_TIMEOUT_EXPIRED_APPLE 0x911B
#define GL_CONDITION_SATISFIED 0x911C
#define GL_CONDITION_SATISFIED_APPLE 0x911C
#define GL_WAIT_FAILED 0x911D
#define GL_WAIT_FAILED_APPLE 0x911D
#define GL_BUFFER_ACCESS_FLAGS 0x911F
#define GL_BUFFER_MAP_LENGTH 0x9120
#define GL_BUFFER_MAP_OFFSET 0x9121
#define GL_MAX_VERTEX_OUTPUT_COMPONENTS 0x9122
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS 0x9123
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_EXT 0x9123
#define GL_MAX_GEOMETRY_INPUT_COMPONENTS_OES 0x9123
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_EXT 0x9124
#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS_OES 0x9124
#define GL_MAX_FRAGMENT_INPUT_COMPONENTS 0x9125
#define GL_CONTEXT_PROFILE_MASK 0x9126
#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH 0x9127
#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT 0x9128
#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH 0x9129
#define GL_UNPACK_COMPRESSED_BLOCK_SIZE 0x912A
#define GL_PACK_COMPRESSED_BLOCK_WIDTH 0x912B
#define GL_PACK_COMPRESSED_BLOCK_HEIGHT 0x912C
#define GL_PACK_COMPRESSED_BLOCK_DEPTH 0x912D
#define GL_PACK_COMPRESSED_BLOCK_SIZE 0x912E
#define GL_TEXTURE_IMMUTABLE_FORMAT 0x912F
#define GL_TEXTURE_IMMUTABLE_FORMAT_EXT 0x912F
#define GL_SGX_PROGRAM_BINARY_IMG 0x9130
#define GL_RENDERBUFFER_SAMPLES_IMG 0x9133
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG 0x9134
#define GL_MAX_SAMPLES_IMG 0x9135
#define GL_TEXTURE_SAMPLES_IMG 0x9136
#define GL_COMPRESSED_RGBA_PVRTC_2BPPV2_IMG 0x9137
#define GL_COMPRESSED_RGBA_PVRTC_4BPPV2_IMG 0x9138
#define GL_CUBIC_IMG 0x9139
#define GL_CUBIC_MIPMAP_NEAREST_IMG 0x913A
#define GL_CUBIC_MIPMAP_LINEAR_IMG 0x913B
#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_AND_DOWNSAMPLE_IMG 0x913C
#define GL_NUM_DOWNSAMPLE_SCALES_IMG 0x913D
#define GL_DOWNSAMPLE_SCALES_IMG 0x913E
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SCALE_IMG 0x913F
#define GL_MAX_DEBUG_MESSAGE_LENGTH 0x9143
#define GL_MAX_DEBUG_MESSAGE_LENGTH_AMD 0x9143
#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB 0x9143
#define GL_MAX_DEBUG_MESSAGE_LENGTH_KHR 0x9143
#define GL_MAX_DEBUG_LOGGED_MESSAGES 0x9144
#define GL_MAX_DEBUG_LOGGED_MESSAGES_AMD 0x9144
#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB 0x9144
#define GL_MAX_DEBUG_LOGGED_MESSAGES_KHR 0x9144
#define GL_DEBUG_LOGGED_MESSAGES 0x9145
#define GL_DEBUG_LOGGED_MESSAGES_AMD 0x9145
#define GL_DEBUG_LOGGED_MESSAGES_ARB 0x9145
#define GL_DEBUG_LOGGED_MESSAGES_KHR 0x9145
#define GL_DEBUG_SEVERITY_HIGH 0x9146
#define GL_DEBUG_SEVERITY_HIGH_AMD 0x9146
#define GL_DEBUG_SEVERITY_HIGH_ARB 0x9146
#define GL_DEBUG_SEVERITY_HIGH_KHR 0x9146
#define GL_DEBUG_SEVERITY_MEDIUM 0x9147
#define GL_DEBUG_SEVERITY_MEDIUM_AMD 0x9147
#define GL_DEBUG_SEVERITY_MEDIUM_ARB 0x9147
#define GL_DEBUG_SEVERITY_MEDIUM_KHR 0x9147
#define GL_DEBUG_SEVERITY_LOW 0x9148
#define GL_DEBUG_SEVERITY_LOW_AMD 0x9148
#define GL_DEBUG_SEVERITY_LOW_ARB 0x9148
#define GL_DEBUG_SEVERITY_LOW_KHR 0x9148
#define GL_DEBUG_CATEGORY_API_ERROR_AMD 0x9149
#define GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD 0x914A
#define GL_DEBUG_CATEGORY_DEPRECATION_AMD 0x914B
#define GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD 0x914C
#define GL_DEBUG_CATEGORY_PERFORMANCE_AMD 0x914D
#define GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD 0x914E
#define GL_DEBUG_CATEGORY_APPLICATION_AMD 0x914F
#define GL_DEBUG_CATEGORY_OTHER_AMD 0x9150
#define GL_BUFFER_OBJECT_EXT 0x9151
#define GL_DATA_BUFFER_AMD 0x9151
#define GL_PERFORMANCE_MONITOR_AMD 0x9152
#define GL_QUERY_OBJECT_AMD 0x9153
#define GL_QUERY_OBJECT_EXT 0x9153
#define GL_VERTEX_ARRAY_OBJECT_AMD 0x9154
#define GL_VERTEX_ARRAY_OBJECT_EXT 0x9154
#define GL_SAMPLER_OBJECT_AMD 0x9155
#define GL_EXTERNAL_VIRTUAL_MEMORY_BUFFER_AMD 0x9160
#define GL_QUERY_BUFFER 0x9192
#define GL_QUERY_BUFFER_AMD 0x9192
#define GL_QUERY_BUFFER_BINDING 0x9193
#define GL_QUERY_BUFFER_BINDING_AMD 0x9193
#define GL_QUERY_RESULT_NO_WAIT 0x9194
#define GL_QUERY_RESULT_NO_WAIT_AMD 0x9194
#define GL_VIRTUAL_PAGE_SIZE_X_ARB 0x9195
#define GL_VIRTUAL_PAGE_SIZE_X_EXT 0x9195
#define GL_VIRTUAL_PAGE_SIZE_X_AMD 0x9195
#define GL_VIRTUAL_PAGE_SIZE_Y_ARB 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Y_EXT 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Y_AMD 0x9196
#define GL_VIRTUAL_PAGE_SIZE_Z_ARB 0x9197
#define GL_VIRTUAL_PAGE_SIZE_Z_EXT 0x9197
#define GL_VIRTUAL_PAGE_SIZE_Z_AMD 0x9197
#define GL_MAX_SPARSE_TEXTURE_SIZE_ARB 0x9198
#define GL_MAX_SPARSE_TEXTURE_SIZE_EXT 0x9198
#define GL_MAX_SPARSE_TEXTURE_SIZE_AMD 0x9198
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB 0x9199
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_EXT 0x9199
#define GL_MAX_SPARSE_3D_TEXTURE_SIZE_AMD 0x9199
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS 0x919A
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB 0x919A
#define GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_EXT 0x919A
#define GL_MIN_SPARSE_LEVEL_AMD 0x919B
#define GL_MIN_LOD_WARNING_AMD 0x919C
#define GL_TEXTURE_BUFFER_OFFSET 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_EXT 0x919D
#define GL_TEXTURE_BUFFER_OFFSET_OES 0x919D
#define GL_TEXTURE_BUFFER_SIZE 0x919E
#define GL_TEXTURE_BUFFER_SIZE_EXT 0x919E
#define GL_TEXTURE_BUFFER_SIZE_OES 0x919E
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT 0x919F
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_EXT 0x919F
#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT_OES 0x919F
#define GL_STREAM_RASTERIZATION_AMD 0x91A0
#define GL_VERTEX_ELEMENT_SWIZZLE_AMD 0x91A4
#define GL_VERTEX_ID_SWIZZLE_AMD 0x91A5
#define GL_TEXTURE_SPARSE_ARB 0x91A6
#define GL_TEXTURE_SPARSE_EXT 0x91A6
#define GL_VIRTUAL_PAGE_SIZE_INDEX_ARB 0x91A7
#define GL_VIRTUAL_PAGE_SIZE_INDEX_EXT 0x91A7
#define GL_NUM_VIRTUAL_PAGE_SIZES_ARB 0x91A8
#define GL_NUM_VIRTUAL_PAGE_SIZES_EXT 0x91A8
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB 0x91A9
#define GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_EXT 0x91A9
#define GL_NUM_SPARSE_LEVELS_ARB 0x91AA
#define GL_NUM_SPARSE_LEVELS_EXT 0x91AA
#define GL_PIXELS_PER_SAMPLE_PATTERN_X_AMD 0x91AE
#define GL_PIXELS_PER_SAMPLE_PATTERN_Y_AMD 0x91AF
#define GL_MAX_SHADER_COMPILER_THREADS_KHR 0x91B0
#define GL_MAX_SHADER_COMPILER_THREADS_ARB 0x91B0
#define GL_COMPLETION_STATUS_KHR 0x91B1
#define GL_COMPLETION_STATUS_ARB 0x91B1
#define GL_RENDERBUFFER_STORAGE_SAMPLES_AMD 0x91B2
#define GL_MAX_COLOR_FRAMEBUFFER_SAMPLES_AMD 0x91B3
#define GL_MAX_COLOR_FRAMEBUFFER_STORAGE_SAMPLES_AMD 0x91B4
#define GL_MAX_DEPTH_STENCIL_FRAMEBUFFER_SAMPLES_AMD 0x91B5
#define GL_NUM_SUPPORTED_MULTISAMPLE_MODES_AMD 0x91B6
#define GL_SUPPORTED_MULTISAMPLE_MODES_AMD 0x91B7
#define GL_COMPUTE_SHADER 0x91B9
#define GL_MAX_COMPUTE_UNIFORM_BLOCKS 0x91BB
#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS 0x91BC
#define GL_MAX_COMPUTE_IMAGE_UNIFORMS 0x91BD
#define GL_MAX_COMPUTE_WORK_GROUP_COUNT 0x91BE
#define GL_MAX_COMPUTE_WORK_GROUP_SIZE 0x91BF
#define GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB 0x91BF
#define GL_FLOAT16_MAT2_AMD 0x91C5
#define GL_FLOAT16_MAT3_AMD 0x91C6
#define GL_FLOAT16_MAT4_AMD 0x91C7
#define GL_FLOAT16_MAT2x3_AMD 0x91C8
#define GL_FLOAT16_MAT2x4_AMD 0x91C9
#define GL_FLOAT16_MAT3x2_AMD 0x91CA
#define GL_FLOAT16_MAT3x4_AMD 0x91CB
#define GL_FLOAT16_MAT4x2_AMD 0x91CC
#define GL_FLOAT16_MAT4x3_AMD 0x91CD
#define GL_UNPACK_FLIP_Y_WEBGL 0x9240
#define GL_UNPACK_PREMULTIPLY_ALPHA_WEBGL 0x9241
#define GL_CONTEXT_LOST_WEBGL 0x9242
#define GL_UNPACK_COLORSPACE_CONVERSION_WEBGL 0x9243
#define GL_BROWSER_DEFAULT_WEBGL 0x9244
#define GL_UNMASKED_VENDOR_WEBGL 0x9245
#define GL_UNMASKED_RENDERER_WEBGL 0x9246
#define GL_MAX_CLIENT_WAIT_TIMEOUT_WEBGL 0x9247
#define GL_TEXTURE_VIDEO_IMAGE_WEBGL 0x9248
#define GL_SAMPLER_VIDEO_IMAGE_WEBGL 0x9249
#define GL_SHADER_BINARY_DMP 0x9250
#define GL_SMAPHS30_PROGRAM_BINARY_DMP 0x9251
#define GL_SMAPHS_PROGRAM_BINARY_DMP 0x9252
#define GL_DMP_PROGRAM_BINARY_DMP 0x9253
#define GL_GCCSO_SHADER_BINARY_FJ 0x9260
#define GL_COMPRESSED_R11_EAC 0x9270
#define GL_COMPRESSED_R11_EAC_OES 0x9270
#define GL_COMPRESSED_SIGNED_R11_EAC 0x9271
#define GL_COMPRESSED_SIGNED_R11_EAC_OES 0x9271
#define GL_COMPRESSED_RG11_EAC 0x9272
#define GL_COMPRESSED_RG11_EAC_OES 0x9272
#define GL_COMPRESSED_SIGNED_RG11_EAC 0x9273
#define GL_COMPRESSED_SIGNED_RG11_EAC_OES 0x9273
#define GL_COMPRESSED_RGB8_ETC2 0x9274
#define GL_COMPRESSED_RGB8_ETC2_OES 0x9274
#define GL_COMPRESSED_SRGB8_ETC2 0x9275
#define GL_COMPRESSED_SRGB8_ETC2_OES 0x9275
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9276
#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES 0x9276
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 0x9277
#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2_OES 0x9277
#define GL_COMPRESSED_RGBA8_ETC2_EAC 0x9278
#define GL_COMPRESSED_RGBA8_ETC2_EAC_OES 0x9278
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC 0x9279
#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC_OES 0x9279
#define GL_BLEND_PREMULTIPLIED_SRC_NV 0x9280
#define GL_BLEND_OVERLAP_NV 0x9281
#define GL_UNCORRELATED_NV 0x9282
#define GL_DISJOINT_NV 0x9283
#define GL_CONJOINT_NV 0x9284
#define GL_BLEND_ADVANCED_COHERENT_KHR 0x9285
#define GL_BLEND_ADVANCED_COHERENT_NV 0x9285
#define GL_SRC_NV 0x9286
#define GL_DST_NV 0x9287
#define GL_SRC_OVER_NV 0x9288
#define GL_DST_OVER_NV 0x9289
#define GL_SRC_IN_NV 0x928A
#define GL_DST_IN_NV 0x928B
#define GL_SRC_OUT_NV 0x928C
#define GL_DST_OUT_NV 0x928D
#define GL_SRC_ATOP_NV 0x928E
#define GL_DST_ATOP_NV 0x928F
#define GL_PLUS_NV 0x9291
#define GL_PLUS_DARKER_NV 0x9292
#define GL_MULTIPLY 0x9294
#define GL_MULTIPLY_KHR 0x9294
#define GL_MULTIPLY_NV 0x9294
#define GL_SCREEN 0x9295
#define GL_SCREEN_KHR 0x9295
#define GL_SCREEN_NV 0x9295
#define GL_OVERLAY 0x9296
#define GL_OVERLAY_KHR 0x9296
#define GL_OVERLAY_NV 0x9296
#define GL_DARKEN 0x9297
#define GL_DARKEN_KHR 0x9297
#define GL_DARKEN_NV 0x9297
#define GL_LIGHTEN 0x9298
#define GL_LIGHTEN_KHR 0x9298
#define GL_LIGHTEN_NV 0x9298
#define GL_COLORDODGE 0x9299
#define GL_COLORDODGE_KHR 0x9299
#define GL_COLORDODGE_NV 0x9299
#define GL_COLORBURN 0x929A
#define GL_COLORBURN_KHR 0x929A
#define GL_COLORBURN_NV 0x929A
#define GL_HARDLIGHT 0x929B
#define GL_HARDLIGHT_KHR 0x929B
#define GL_HARDLIGHT_NV 0x929B
#define GL_SOFTLIGHT 0x929C
#define GL_SOFTLIGHT_KHR 0x929C
#define GL_SOFTLIGHT_NV 0x929C
#define GL_DIFFERENCE 0x929E
#define GL_DIFFERENCE_KHR 0x929E
#define GL_DIFFERENCE_NV 0x929E
#define GL_MINUS_NV 0x929F
#define GL_EXCLUSION 0x92A0
#define GL_EXCLUSION_KHR 0x92A0
#define GL_EXCLUSION_NV 0x92A0
#define GL_CONTRAST_NV 0x92A1
#define GL_INVERT_RGB_NV 0x92A3
#define GL_LINEARDODGE_NV 0x92A4
#define GL_LINEARBURN_NV 0x92A5
#define GL_VIVIDLIGHT_NV 0x92A6
#define GL_LINEARLIGHT_NV 0x92A7
#define GL_PINLIGHT_NV 0x92A8
#define GL_HARDMIX_NV 0x92A9
#define GL_HSL_HUE 0x92AD
#define GL_HSL_HUE_KHR 0x92AD
#define GL_HSL_HUE_NV 0x92AD
#define GL_HSL_SATURATION 0x92AE
#define GL_HSL_SATURATION_KHR 0x92AE
#define GL_HSL_SATURATION_NV 0x92AE
#define GL_HSL_COLOR 0x92AF
#define GL_HSL_COLOR_KHR 0x92AF
#define GL_HSL_COLOR_NV 0x92AF
#define GL_HSL_LUMINOSITY 0x92B0
#define GL_HSL_LUMINOSITY_KHR 0x92B0
#define GL_HSL_LUMINOSITY_NV 0x92B0
#define GL_PLUS_CLAMPED_NV 0x92B1
#define GL_PLUS_CLAMPED_ALPHA_NV 0x92B2
#define GL_MINUS_CLAMPED_NV 0x92B3
#define GL_INVERT_OVG_NV 0x92B4
#define GL_MAX_LGPU_GPUS_NVX 0x92BA
#define GL_MULTICAST_GPUS_NV 0x92BA
#define GL_PURGED_CONTEXT_RESET_NV 0x92BB
#define GL_PRIMITIVE_BOUNDING_BOX_ARB 0x92BE
#define GL_PRIMITIVE_BOUNDING_BOX 0x92BE
#define GL_PRIMITIVE_BOUNDING_BOX_EXT 0x92BE
#define GL_PRIMITIVE_BOUNDING_BOX_OES 0x92BE
#define GL_ALPHA_TO_COVERAGE_DITHER_MODE_NV 0x92BF
#define GL_ATOMIC_COUNTER_BUFFER 0x92C0
#define GL_ATOMIC_COUNTER_BUFFER_BINDING 0x92C1
#define GL_ATOMIC_COUNTER_BUFFER_START 0x92C2
#define GL_ATOMIC_COUNTER_BUFFER_SIZE 0x92C3
#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE 0x92C4
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS 0x92C5
#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES 0x92C6
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER 0x92C7
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER 0x92C8
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER 0x92C9
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER 0x92CA
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER 0x92CB
#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS 0x92CC
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS 0x92CD
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_EXT 0x92CD
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS_OES 0x92CD
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS 0x92CE
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_EXT 0x92CE
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS_OES 0x92CE
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS 0x92CF
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_EXT 0x92CF
#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS_OES 0x92CF
#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS 0x92D0
#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS 0x92D1
#define GL_MAX_VERTEX_ATOMIC_COUNTERS 0x92D2
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_EXT 0x92D3
#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS_OES 0x92D3
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_EXT 0x92D4
#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS_OES 0x92D4
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_EXT 0x92D5
#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS_OES 0x92D5
#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS 0x92D6
#define GL_MAX_COMBINED_ATOMIC_COUNTERS 0x92D7
#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE 0x92D8
#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS 0x92D9
#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX 0x92DA
#define GL_UNSIGNED_INT_ATOMIC_COUNTER 0x92DB
#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS 0x92DC
#define GL_FRAGMENT_COVERAGE_TO_COLOR_NV 0x92DD
#define GL_FRAGMENT_COVERAGE_COLOR_NV 0x92DE
#define GL_MESH_OUTPUT_PER_VERTEX_GRANULARITY_NV 0x92DF
#define GL_DEBUG_OUTPUT 0x92E0
#define GL_DEBUG_OUTPUT_KHR 0x92E0
#define GL_UNIFORM 0x92E1
#define GL_UNIFORM_BLOCK 0x92E2
#define GL_PROGRAM_INPUT 0x92E3
#define GL_PROGRAM_OUTPUT 0x92E4
#define GL_BUFFER_VARIABLE 0x92E5
#define GL_SHADER_STORAGE_BLOCK 0x92E6
#define GL_IS_PER_PATCH 0x92E7
#define GL_IS_PER_PATCH_EXT 0x92E7
#define GL_IS_PER_PATCH_OES 0x92E7
#define GL_VERTEX_SUBROUTINE 0x92E8
#define GL_TESS_CONTROL_SUBROUTINE 0x92E9
#define GL_TESS_EVALUATION_SUBROUTINE 0x92EA
#define GL_GEOMETRY_SUBROUTINE 0x92EB
#define GL_FRAGMENT_SUBROUTINE 0x92EC
#define GL_COMPUTE_SUBROUTINE 0x92ED
#define GL_VERTEX_SUBROUTINE_UNIFORM 0x92EE
#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM 0x92EF
#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM 0x92F0
#define GL_GEOMETRY_SUBROUTINE_UNIFORM 0x92F1
#define GL_FRAGMENT_SUBROUTINE_UNIFORM 0x92F2
#define GL_COMPUTE_SUBROUTINE_UNIFORM 0x92F3
#define GL_TRANSFORM_FEEDBACK_VARYING 0x92F4
#define GL_ACTIVE_RESOURCES 0x92F5
#define GL_MAX_NAME_LENGTH 0x92F6
#define GL_MAX_NUM_ACTIVE_VARIABLES 0x92F7
#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES 0x92F8
#define GL_NAME_LENGTH 0x92F9
#define GL_TYPE 0x92FA
#define GL_ARRAY_SIZE 0x92FB
#define GL_OFFSET 0x92FC
#define GL_BLOCK_INDEX 0x92FD
#define GL_ARRAY_STRIDE 0x92FE
#define GL_MATRIX_STRIDE 0x92FF
#define GL_IS_ROW_MAJOR 0x9300
#define GL_ATOMIC_COUNTER_BUFFER_INDEX 0x9301
#define GL_BUFFER_BINDING 0x9302
#define GL_BUFFER_DATA_SIZE 0x9303
#define GL_NUM_ACTIVE_VARIABLES 0x9304
#define GL_ACTIVE_VARIABLES 0x9305
#define GL_REFERENCED_BY_VERTEX_SHADER 0x9306
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER 0x9307
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_EXT 0x9307
#define GL_REFERENCED_BY_TESS_CONTROL_SHADER_OES 0x9307
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER 0x9308
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_EXT 0x9308
#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER_OES 0x9308
#define GL_REFERENCED_BY_GEOMETRY_SHADER 0x9309
#define GL_REFERENCED_BY_GEOMETRY_SHADER_EXT 0x9309
#define GL_REFERENCED_BY_GEOMETRY_SHADER_OES 0x9309
#define GL_REFERENCED_BY_FRAGMENT_SHADER 0x930A
#define GL_REFERENCED_BY_COMPUTE_SHADER 0x930B
#define GL_TOP_LEVEL_ARRAY_SIZE 0x930C
#define GL_TOP_LEVEL_ARRAY_STRIDE 0x930D
#define GL_LOCATION 0x930E
#define GL_LOCATION_INDEX 0x930F
#define GL_LOCATION_INDEX_EXT 0x930F
#define GL_FRAMEBUFFER_DEFAULT_WIDTH 0x9310
#define GL_FRAMEBUFFER_DEFAULT_HEIGHT 0x9311
#define GL_FRAMEBUFFER_DEFAULT_LAYERS 0x9312
#define GL_FRAMEBUFFER_DEFAULT_LAYERS_EXT 0x9312
#define GL_FRAMEBUFFER_DEFAULT_LAYERS_OES 0x9312
#define GL_FRAMEBUFFER_DEFAULT_SAMPLES 0x9313
#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS 0x9314
#define GL_MAX_FRAMEBUFFER_WIDTH 0x9315
#define GL_MAX_FRAMEBUFFER_HEIGHT 0x9316
#define GL_MAX_FRAMEBUFFER_LAYERS 0x9317
#define GL_MAX_FRAMEBUFFER_LAYERS_EXT 0x9317
#define GL_MAX_FRAMEBUFFER_LAYERS_OES 0x9317
#define GL_MAX_FRAMEBUFFER_SAMPLES 0x9318
#define GL_RASTER_MULTISAMPLE_EXT 0x9327
#define GL_RASTER_SAMPLES_EXT 0x9328
#define GL_MAX_RASTER_SAMPLES_EXT 0x9329
#define GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT 0x932A
#define GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT 0x932B
#define GL_EFFECTIVE_RASTER_SAMPLES_EXT 0x932C
#define GL_DEPTH_SAMPLES_NV 0x932D
#define GL_STENCIL_SAMPLES_NV 0x932E
#define GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV 0x932F
#define GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV 0x9330
#define GL_COVERAGE_MODULATION_TABLE_NV 0x9331
#define GL_COVERAGE_MODULATION_NV 0x9332
#define GL_COVERAGE_MODULATION_TABLE_SIZE_NV 0x9333
#define GL_WARP_SIZE_NV 0x9339
#define GL_WARPS_PER_SM_NV 0x933A
#define GL_SM_COUNT_NV 0x933B
#define GL_FILL_RECTANGLE_NV 0x933C
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB 0x933D
#define GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV 0x933D
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB 0x933E
#define GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV 0x933E
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB 0x933F
#define GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV 0x933F
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB 0x9340
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV 0x9340
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB 0x9341
#define GL_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9341
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB 0x9342
#define GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV 0x9342
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB 0x9343
#define GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV 0x9343
#define GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB 0x9344
#define GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB 0x9345
#define GL_CONSERVATIVE_RASTERIZATION_NV 0x9346
#define GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV 0x9347
#define GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV 0x9348
#define GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV 0x9349
#define GL_LOCATION_COMPONENT 0x934A
#define GL_TRANSFORM_FEEDBACK_BUFFER_INDEX 0x934B
#define GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE 0x934C
#define GL_ALPHA_TO_COVERAGE_DITHER_DEFAULT_NV 0x934D
#define GL_ALPHA_TO_COVERAGE_DITHER_ENABLE_NV 0x934E
#define GL_ALPHA_TO_COVERAGE_DITHER_DISABLE_NV 0x934F
#define GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV 0x9350
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV 0x9351
#define GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV 0x9352
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV 0x9353
#define GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV 0x9354
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV 0x9355
#define GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV 0x9356
#define GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV 0x9357
#define GL_VIEWPORT_SWIZZLE_X_NV 0x9358
#define GL_VIEWPORT_SWIZZLE_Y_NV 0x9359
#define GL_VIEWPORT_SWIZZLE_Z_NV 0x935A
#define GL_VIEWPORT_SWIZZLE_W_NV 0x935B
#define GL_CLIP_ORIGIN 0x935C
#define GL_CLIP_ORIGIN_EXT 0x935C
#define GL_CLIP_DEPTH_MODE 0x935D
#define GL_CLIP_DEPTH_MODE_EXT 0x935D
#define GL_NEGATIVE_ONE_TO_ONE 0x935E
#define GL_NEGATIVE_ONE_TO_ONE_EXT 0x935E
#define GL_ZERO_TO_ONE 0x935F
#define GL_ZERO_TO_ONE_EXT 0x935F
#define GL_CLEAR_TEXTURE 0x9365
#define GL_TEXTURE_REDUCTION_MODE_ARB 0x9366
#define GL_TEXTURE_REDUCTION_MODE_EXT 0x9366
#define GL_WEIGHTED_AVERAGE_ARB 0x9367
#define GL_WEIGHTED_AVERAGE_EXT 0x9367
#define GL_FONT_GLYPHS_AVAILABLE_NV 0x9368
#define GL_FONT_TARGET_UNAVAILABLE_NV 0x9369
#define GL_FONT_UNAVAILABLE_NV 0x936A
#define GL_FONT_UNINTELLIGIBLE_NV 0x936B
#define GL_STANDARD_FONT_FORMAT_NV 0x936C
#define GL_FRAGMENT_INPUT_NV 0x936D
#define GL_UNIFORM_BUFFER_UNIFIED_NV 0x936E
#define GL_UNIFORM_BUFFER_ADDRESS_NV 0x936F
#define GL_UNIFORM_BUFFER_LENGTH_NV 0x9370
#define GL_MULTISAMPLES_NV 0x9371
#define GL_SUPERSAMPLE_SCALE_X_NV 0x9372
#define GL_SUPERSAMPLE_SCALE_Y_NV 0x9373
#define GL_CONFORMANT_NV 0x9374
#define GL_CONSERVATIVE_RASTER_DILATE_NV 0x9379
#define GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV 0x937A
#define GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV 0x937B
#define GL_VIEWPORT_POSITION_W_SCALE_NV 0x937C
#define GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV 0x937D
#define GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV 0x937E
#define GL_REPRESENTATIVE_FRAGMENT_TEST_NV 0x937F
#define GL_NUM_SAMPLE_COUNTS 0x9380
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB 0x9381
#define GL_MULTISAMPLE_LINE_WIDTH_RANGE 0x9381
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB 0x9382
#define GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY 0x9382
#define GL_VIEW_CLASS_EAC_R11 0x9383
#define GL_VIEW_CLASS_EAC_RG11 0x9384
#define GL_VIEW_CLASS_ETC2_RGB 0x9385
#define GL_VIEW_CLASS_ETC2_RGBA 0x9386
#define GL_VIEW_CLASS_ETC2_EAC_RGBA 0x9387
#define GL_VIEW_CLASS_ASTC_4x4_RGBA 0x9388
#define GL_VIEW_CLASS_ASTC_5x4_RGBA 0x9389
#define GL_VIEW_CLASS_ASTC_5x5_RGBA 0x938A
#define GL_VIEW_CLASS_ASTC_6x5_RGBA 0x938B
#define GL_VIEW_CLASS_ASTC_6x6_RGBA 0x938C
#define GL_VIEW_CLASS_ASTC_8x5_RGBA 0x938D
#define GL_VIEW_CLASS_ASTC_8x6_RGBA 0x938E
#define GL_VIEW_CLASS_ASTC_8x8_RGBA 0x938F
#define GL_VIEW_CLASS_ASTC_10x5_RGBA 0x9390
#define GL_VIEW_CLASS_ASTC_10x6_RGBA 0x9391
#define GL_VIEW_CLASS_ASTC_10x8_RGBA 0x9392
#define GL_VIEW_CLASS_ASTC_10x10_RGBA 0x9393
#define GL_VIEW_CLASS_ASTC_12x10_RGBA 0x9394
#define GL_VIEW_CLASS_ASTC_12x12_RGBA 0x9395
#define GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE 0x93A0
#define GL_BGRA8_EXT 0x93A1
#define GL_TEXTURE_USAGE_ANGLE 0x93A2
#define GL_FRAMEBUFFER_ATTACHMENT_ANGLE 0x93A3
#define GL_PACK_REVERSE_ROW_ORDER_ANGLE 0x93A4
#define GL_PROGRAM_BINARY_ANGLE 0x93A6
#define GL_COMPRESSED_RGBA_ASTC_4x4 0x93B0
#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR 0x93B0
#define GL_COMPRESSED_RGBA_ASTC_5x4 0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR 0x93B1
#define GL_COMPRESSED_RGBA_ASTC_5x5 0x93B2
#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR 0x93B2
#define GL_COMPRESSED_RGBA_ASTC_6x5 0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR 0x93B3
#define GL_COMPRESSED_RGBA_ASTC_6x6 0x93B4
#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR 0x93B4
#define GL_COMPRESSED_RGBA_ASTC_8x5 0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR 0x93B5
#define GL_COMPRESSED_RGBA_ASTC_8x6 0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR 0x93B6
#define GL_COMPRESSED_RGBA_ASTC_8x8 0x93B7
#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR 0x93B7
#define GL_COMPRESSED_RGBA_ASTC_10x5 0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR 0x93B8
#define GL_COMPRESSED_RGBA_ASTC_10x6 0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR 0x93B9
#define GL_COMPRESSED_RGBA_ASTC_10x8 0x93BA
#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR 0x93BA
#define GL_COMPRESSED_RGBA_ASTC_10x10 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR 0x93BB
#define GL_COMPRESSED_RGBA_ASTC_12x10 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR 0x93BC
#define GL_COMPRESSED_RGBA_ASTC_12x12 0x93BD
#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR 0x93BD
#define GL_COMPRESSED_RGBA_ASTC_3x3x3_OES 0x93C0
#define GL_COMPRESSED_RGBA_ASTC_4x3x3_OES 0x93C1
#define GL_COMPRESSED_RGBA_ASTC_4x4x3_OES 0x93C2
#define GL_COMPRESSED_RGBA_ASTC_4x4x4_OES 0x93C3
#define GL_COMPRESSED_RGBA_ASTC_5x4x4_OES 0x93C4
#define GL_COMPRESSED_RGBA_ASTC_5x5x4_OES 0x93C5
#define GL_COMPRESSED_RGBA_ASTC_5x5x5_OES 0x93C6
#define GL_COMPRESSED_RGBA_ASTC_6x5x5_OES 0x93C7
#define GL_COMPRESSED_RGBA_ASTC_6x6x5_OES 0x93C8
#define GL_COMPRESSED_RGBA_ASTC_6x6x6_OES 0x93C9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR 0x93D0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR 0x93D1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR 0x93D2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR 0x93D3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR 0x93D4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR 0x93D5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR 0x93D6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR 0x93D7
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR 0x93D8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR 0x93D9
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR 0x93DA
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR 0x93DB
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR 0x93DC
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12 0x93DD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR 0x93DD
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_3x3x3_OES 0x93E0
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x3x3_OES 0x93E1
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x3_OES 0x93E2
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4x4_OES 0x93E3
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4x4_OES 0x93E4
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x4_OES 0x93E5
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5x5_OES 0x93E6
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5x5_OES 0x93E7
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x5_OES 0x93E8
#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6x6_OES 0x93E9
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_2BPPV2_IMG 0x93F0
#define GL_COMPRESSED_SRGB_ALPHA_PVRTC_4BPPV2_IMG 0x93F1
#define GL_PERFQUERY_COUNTER_EVENT_INTEL 0x94F0
#define GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL 0x94F1
#define GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL 0x94F2
#define GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL 0x94F3
#define GL_PERFQUERY_COUNTER_RAW_INTEL 0x94F4
#define GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL 0x94F5
#define GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL 0x94F8
#define GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL 0x94F9
#define GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL 0x94FA
#define GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL 0x94FB
#define GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL 0x94FC
#define GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL 0x94FD
#define GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL 0x94FE
#define GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL 0x94FF
#define GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL 0x9500
#define GL_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_EXT 0x9530
#define GL_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_EXT 0x9531
#define GL_SUBGROUP_SIZE_KHR 0x9532
#define GL_SUBGROUP_SUPPORTED_STAGES_KHR 0x9533
#define GL_SUBGROUP_SUPPORTED_FEATURES_KHR 0x9534
#define GL_SUBGROUP_QUAD_ALL_STAGES_KHR 0x9535
#define GL_MAX_MESH_TOTAL_MEMORY_SIZE_NV 0x9536
#define GL_MAX_TASK_TOTAL_MEMORY_SIZE_NV 0x9537
#define GL_MAX_MESH_OUTPUT_VERTICES_NV 0x9538
#define GL_MAX_MESH_OUTPUT_PRIMITIVES_NV 0x9539
#define GL_MAX_TASK_OUTPUT_COUNT_NV 0x953A
#define GL_MAX_MESH_WORK_GROUP_SIZE_NV 0x953B
#define GL_MAX_TASK_WORK_GROUP_SIZE_NV 0x953C
#define GL_MAX_DRAW_MESH_TASKS_COUNT_NV 0x953D
#define GL_MESH_WORK_GROUP_SIZE_NV 0x953E
#define GL_TASK_WORK_GROUP_SIZE_NV 0x953F
#define GL_QUERY_RESOURCE_TYPE_VIDMEM_ALLOC_NV 0x9540
#define GL_QUERY_RESOURCE_MEMTYPE_VIDMEM_NV 0x9542
#define GL_MESH_OUTPUT_PER_PRIMITIVE_GRANULARITY_NV 0x9543
#define GL_QUERY_RESOURCE_SYS_RESERVED_NV 0x9544
#define GL_QUERY_RESOURCE_TEXTURE_NV 0x9545
#define GL_QUERY_RESOURCE_RENDERBUFFER_NV 0x9546
#define GL_QUERY_RESOURCE_BUFFEROBJECT_NV 0x9547
#define GL_PER_GPU_STORAGE_NV 0x9548
#define GL_MULTICAST_PROGRAMMABLE_SAMPLE_LOCATION_NV 0x9549
#define GL_UPLOAD_GPU_MASK_NVX 0x954A
#define GL_CONSERVATIVE_RASTER_MODE_NV 0x954D
#define GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV 0x954E
#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV 0x954F
#define GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_NV 0x9550
#define GL_SHADER_BINARY_FORMAT_SPIR_V 0x9551
#define GL_SHADER_BINARY_FORMAT_SPIR_V_ARB 0x9551
#define GL_SPIR_V_BINARY 0x9552
#define GL_SPIR_V_BINARY_ARB 0x9552
#define GL_SPIR_V_EXTENSIONS 0x9553
#define GL_NUM_SPIR_V_EXTENSIONS 0x9554
#define GL_SCISSOR_TEST_EXCLUSIVE_NV 0x9555
#define GL_SCISSOR_BOX_EXCLUSIVE_NV 0x9556
#define GL_MAX_MESH_VIEWS_NV 0x9557
#define GL_RENDER_GPU_MASK_NV 0x9558
#define GL_MESH_SHADER_NV 0x9559
#define GL_TASK_SHADER_NV 0x955A
#define GL_SHADING_RATE_IMAGE_BINDING_NV 0x955B
#define GL_SHADING_RATE_IMAGE_TEXEL_WIDTH_NV 0x955C
#define GL_SHADING_RATE_IMAGE_TEXEL_HEIGHT_NV 0x955D
#define GL_SHADING_RATE_IMAGE_PALETTE_SIZE_NV 0x955E
#define GL_MAX_COARSE_FRAGMENT_SAMPLES_NV 0x955F
#define GL_SHADING_RATE_IMAGE_NV 0x9563
#define GL_SHADING_RATE_NO_INVOCATIONS_NV 0x9564
#define GL_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV 0x9565
#define GL_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV 0x9566
#define GL_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV 0x9567
#define GL_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV 0x9568
#define GL_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV 0x9569
#define GL_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV 0x956A
#define GL_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV 0x956B
#define GL_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV 0x956C
#define GL_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV 0x956D
#define GL_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV 0x956E
#define GL_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV 0x956F
#define GL_MESH_VERTICES_OUT_NV 0x9579
#define GL_MESH_PRIMITIVES_OUT_NV 0x957A
#define GL_MESH_OUTPUT_TYPE_NV 0x957B
#define GL_MESH_SUBROUTINE_NV 0x957C
#define GL_TASK_SUBROUTINE_NV 0x957D
#define GL_MESH_SUBROUTINE_UNIFORM_NV 0x957E
#define GL_TASK_SUBROUTINE_UNIFORM_NV 0x957F
#define GL_TEXTURE_TILING_EXT 0x9580
#define GL_DEDICATED_MEMORY_OBJECT_EXT 0x9581
#define GL_NUM_TILING_TYPES_EXT 0x9582
#define GL_TILING_TYPES_EXT 0x9583
#define GL_OPTIMAL_TILING_EXT 0x9584
#define GL_LINEAR_TILING_EXT 0x9585
#define GL_HANDLE_TYPE_OPAQUE_FD_EXT 0x9586
#define GL_HANDLE_TYPE_OPAQUE_WIN32_EXT 0x9587
#define GL_HANDLE_TYPE_OPAQUE_WIN32_KMT_EXT 0x9588
#define GL_HANDLE_TYPE_D3D12_TILEPOOL_EXT 0x9589
#define GL_HANDLE_TYPE_D3D12_RESOURCE_EXT 0x958A
#define GL_HANDLE_TYPE_D3D11_IMAGE_EXT 0x958B
#define GL_HANDLE_TYPE_D3D11_IMAGE_KMT_EXT 0x958C
#define GL_LAYOUT_GENERAL_EXT 0x958D
#define GL_LAYOUT_COLOR_ATTACHMENT_EXT 0x958E
#define GL_LAYOUT_DEPTH_STENCIL_ATTACHMENT_EXT 0x958F
#define GL_LAYOUT_DEPTH_STENCIL_READ_ONLY_EXT 0x9590
#define GL_LAYOUT_SHADER_READ_ONLY_EXT 0x9591
#define GL_LAYOUT_TRANSFER_SRC_EXT 0x9592
#define GL_LAYOUT_TRANSFER_DST_EXT 0x9593
#define GL_HANDLE_TYPE_D3D12_FENCE_EXT 0x9594
#define GL_D3D12_FENCE_VALUE_EXT 0x9595
#define GL_TIMELINE_SEMAPHORE_VALUE_NV 0x9595
#define GL_NUM_DEVICE_UUIDS_EXT 0x9596
#define GL_DEVICE_UUID_EXT 0x9597
#define GL_DRIVER_UUID_EXT 0x9598
#define GL_DEVICE_LUID_EXT 0x9599
#define GL_DEVICE_NODE_MASK_EXT 0x959A
#define GL_PROTECTED_MEMORY_OBJECT_EXT 0x959B
#define GL_UNIFORM_BLOCK_REFERENCED_BY_MESH_SHADER_NV 0x959C
#define GL_UNIFORM_BLOCK_REFERENCED_BY_TASK_SHADER_NV 0x959D
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_MESH_SHADER_NV 0x959E
#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TASK_SHADER_NV 0x959F
#define GL_REFERENCED_BY_MESH_SHADER_NV 0x95A0
#define GL_REFERENCED_BY_TASK_SHADER_NV 0x95A1
#define GL_MAX_MESH_WORK_GROUP_INVOCATIONS_NV 0x95A2
#define GL_MAX_TASK_WORK_GROUP_INVOCATIONS_NV 0x95A3
#define GL_ATTACHED_MEMORY_OBJECT_NV 0x95A4
#define GL_ATTACHED_MEMORY_OFFSET_NV 0x95A5
#define GL_MEMORY_ATTACHABLE_ALIGNMENT_NV 0x95A6
#define GL_MEMORY_ATTACHABLE_SIZE_NV 0x95A7
#define GL_MEMORY_ATTACHABLE_NV 0x95A8
#define GL_DETACHED_MEMORY_INCARNATION_NV 0x95A9
#define GL_DETACHED_TEXTURES_NV 0x95AA
#define GL_DETACHED_BUFFERS_NV 0x95AB
#define GL_MAX_DETACHED_TEXTURES_NV 0x95AC
#define GL_MAX_DETACHED_BUFFERS_NV 0x95AD
#define GL_SHADING_RATE_SAMPLE_ORDER_DEFAULT_NV 0x95AE
#define GL_SHADING_RATE_SAMPLE_ORDER_PIXEL_MAJOR_NV 0x95AF
#define GL_SHADING_RATE_SAMPLE_ORDER_SAMPLE_MAJOR_NV 0x95B0
#define GL_SHADING_RATE_IMAGE_PER_PRIMITIVE_NV 0x95B1
#define GL_SHADING_RATE_IMAGE_PALETTE_COUNT_NV 0x95B2
#define GL_SEMAPHORE_TYPE_NV 0x95B3
#define GL_SEMAPHORE_TYPE_BINARY_NV 0x95B4
#define GL_SEMAPHORE_TYPE_TIMELINE_NV 0x95B5
#define GL_MAX_TIMELINE_SEMAPHORE_VALUE_DIFFERENCE_NV 0x95B6
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR 0x9630
#define GL_MAX_VIEWS_OVR 0x9631
#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR 0x9632
#define GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR 0x9633
#define GL_GS_SHADER_BINARY_MTK 0x9640
#define GL_GS_PROGRAM_BINARY_MTK 0x9641
#define GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_FAST_SIZE_EXT 0x9650
#define GL_MAX_SHADER_COMBINED_LOCAL_STORAGE_SIZE_EXT 0x9651
#define GL_FRAMEBUFFER_INCOMPLETE_INSUFFICIENT_SHADER_COMBINED_LOCAL_STORAGE_EXT 0x9652
#define GL_TEXTURE_FOVEATED_CUTOFF_DENSITY_QCOM 0x96A0
#define GL_FRAMEBUFFER_FETCH_NONCOHERENT_QCOM 0x96A2
#define GL_VALIDATE_SHADER_BINARY_QCOM 0x96A3
#define GL_SHADING_RATE_QCOM 0x96A4
#define GL_SHADING_RATE_PRESERVE_ASPECT_RATIO_QCOM 0x96A5
#define GL_SHADING_RATE_1X1_PIXELS_QCOM 0x96A6
#define GL_SHADING_RATE_1X2_PIXELS_QCOM 0x96A7
#define GL_SHADING_RATE_2X1_PIXELS_QCOM 0x96A8
#define GL_SHADING_RATE_2X2_PIXELS_QCOM 0x96A9
#define GL_SHADING_RATE_1X4_PIXELS_QCOM 0x96AA
#define GL_SHADING_RATE_4X1_PIXELS_QCOM 0x96AB
#define GL_SHADING_RATE_4X2_PIXELS_QCOM 0x96AC
#define GL_SHADING_RATE_2X4_PIXELS_QCOM 0x96AD
#define GL_SHADING_RATE_4X4_PIXELS_QCOM 0x96AE
#define GL_SHADING_RATE_1X1_PIXELS_EXT 0x96A6
#define GL_SHADING_RATE_1X2_PIXELS_EXT 0x96A7
#define GL_SHADING_RATE_2X1_PIXELS_EXT 0x96A8
#define GL_SHADING_RATE_2X2_PIXELS_EXT 0x96A9
#define GL_SHADING_RATE_1X4_PIXELS_EXT 0x96AA
#define GL_SHADING_RATE_4X1_PIXELS_EXT 0x96AB
#define GL_SHADING_RATE_4X2_PIXELS_EXT 0x96AC
#define GL_SHADING_RATE_2X4_PIXELS_EXT 0x96AD
#define GL_SHADING_RATE_4X4_PIXELS_EXT 0x96AE
#define GL_SURFACE_COMPRESSION_EXT 0x96C0
#define GL_SURFACE_COMPRESSION_FIXED_RATE_NONE_EXT 0x96C1
#define GL_SURFACE_COMPRESSION_FIXED_RATE_DEFAULT_EXT 0x96C2
#define GL_SURFACE_COMPRESSION_FIXED_RATE_1BPC_EXT 0x96C4
#define GL_SURFACE_COMPRESSION_FIXED_RATE_2BPC_EXT 0x96C5
#define GL_SURFACE_COMPRESSION_FIXED_RATE_3BPC_EXT 0x96C6
#define GL_SURFACE_COMPRESSION_FIXED_RATE_4BPC_EXT 0x96C7
#define GL_SURFACE_COMPRESSION_FIXED_RATE_5BPC_EXT 0x96C8
#define GL_SURFACE_COMPRESSION_FIXED_RATE_6BPC_EXT 0x96C9
#define GL_SURFACE_COMPRESSION_FIXED_RATE_7BPC_EXT 0x96CA
#define GL_SURFACE_COMPRESSION_FIXED_RATE_8BPC_EXT 0x96CB
#define GL_SURFACE_COMPRESSION_FIXED_RATE_9BPC_EXT 0x96CC
#define GL_SURFACE_COMPRESSION_FIXED_RATE_10BPC_EXT 0x96CD
#define GL_SURFACE_COMPRESSION_FIXED_RATE_11BPC_EXT 0x96CE
#define GL_SURFACE_COMPRESSION_FIXED_RATE_12BPC_EXT 0x96CF
#define GL_SHADING_RATE_EXT 0x96D0
#define GL_SHADING_RATE_ATTACHMENT_EXT 0x96D1
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_EXT 0x96D2
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_EXT 0x96D3
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_EXT 0x96D4
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_EXT 0x96D5
#define GL_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_EXT 0x96D6
#define GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT 0x96D7
#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_WIDTH_EXT 0x96D8
#define GL_MIN_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT 0x96D9
#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_HEIGHT_EXT 0x96DA
#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_TEXEL_ASPECT_RATIO_EXT 0x96DB
#define GL_MAX_FRAGMENT_SHADING_RATE_ATTACHMENT_LAYERS_EXT 0x96DC
#define GL_FRAGMENT_SHADING_RATE_WITH_SHADER_DEPTH_STENCIL_WRITES_SUPPORTED_EXT 0x96DD
#define GL_FRAGMENT_SHADING_RATE_WITH_SAMPLE_MASK_SUPPORTED_EXT 0x96DE
#define GL_FRAGMENT_SHADING_RATE_ATTACHMENT_WITH_DEFAULT_FRAMEBUFFER_SUPPORTED_EXT 0x96DF
#define GL_SHADER_CORE_COUNT_ARM 0x96F0
#define GL_SHADER_CORE_ACTIVE_COUNT_ARM 0x96F1
#define GL_SHADER_CORE_PRESENT_MASK_ARM 0x96F2
#define GL_SHADER_CORE_MAX_WARP_COUNT_ARM 0x96F3
#define GL_SHADER_CORE_PIXEL_RATE_ARM 0x96F4
#define GL_SHADER_CORE_TEXEL_RATE_ARM 0x96F5
#define GL_SHADER_CORE_FMA_RATE_ARM 0x96F6
#define GL_TEXTURE_Y_DEGAMMA_QCOM 0x9710
#define GL_TEXTURE_CBCR_DEGAMMA_QCOM 0x9711
#define GL_RASTER_POSITION_UNCLIPPED_IBM 0x19262
#define GL_CULL_VERTEX_IBM 103050
#define GL_ALL_STATIC_DATA_IBM 103060
#define GL_STATIC_VERTEX_ARRAY_IBM 103061
#define GL_VERTEX_ARRAY_LIST_IBM 103070
#define GL_NORMAL_ARRAY_LIST_IBM 103071
#define GL_COLOR_ARRAY_LIST_IBM 103072
#define GL_INDEX_ARRAY_LIST_IBM 103073
#define GL_TEXTURE_COORD_ARRAY_LIST_IBM 103074
#define GL_EDGE_FLAG_ARRAY_LIST_IBM 103075
#define GL_FOG_COORDINATE_ARRAY_LIST_IBM 103076
#define GL_SECONDARY_COLOR_ARRAY_LIST_IBM 103077
#define GL_VERTEX_ARRAY_LIST_STRIDE_IBM 103080
#define GL_NORMAL_ARRAY_LIST_STRIDE_IBM 103081
#define GL_COLOR_ARRAY_LIST_STRIDE_IBM 103082
#define GL_INDEX_ARRAY_LIST_STRIDE_IBM 103083
#define GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM 103084
#define GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM 103085
#define GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM 103086
#define GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM 103087
#define GL_PREFER_DOUBLEBUFFER_HINT_PGI 0x1A1F8
#define GL_CONSERVE_MEMORY_HINT_PGI 0x1A1FD
#define GL_RECLAIM_MEMORY_HINT_PGI 0x1A1FE
#define GL_NATIVE_GRAPHICS_HANDLE_PGI 0x1A202
#define GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI 0x1A203
#define GL_NATIVE_GRAPHICS_END_HINT_PGI 0x1A204
#define GL_ALWAYS_FAST_HINT_PGI 0x1A20C
#define GL_ALWAYS_SOFT_HINT_PGI 0x1A20D
#define GL_ALLOW_DRAW_OBJ_HINT_PGI 0x1A20E
#define GL_ALLOW_DRAW_WIN_HINT_PGI 0x1A20F
#define GL_ALLOW_DRAW_FRG_HINT_PGI 0x1A210
#define GL_ALLOW_DRAW_MEM_HINT_PGI 0x1A211
#define GL_STRICT_DEPTHFUNC_HINT_PGI 0x1A216
#define GL_STRICT_LIGHTING_HINT_PGI 0x1A217
#define GL_STRICT_SCISSOR_HINT_PGI 0x1A218
#define GL_FULL_STIPPLE_HINT_PGI 0x1A219
#define GL_CLIP_NEAR_HINT_PGI 0x1A220
#define GL_CLIP_FAR_HINT_PGI 0x1A221
#define GL_WIDE_LINE_HINT_PGI 0x1A222
#define GL_BACK_NORMALS_HINT_PGI 0x1A223
#define GL_VERTEX_DATA_HINT_PGI 0x1A22A
#define GL_VERTEX_CONSISTENT_HINT_PGI 0x1A22B
#define GL_MATERIAL_SIDE_HINT_PGI 0x1A22C
#define GL_MAX_VERTEX_HINT_PGI 0x1A22D

typedef void (GL_APIENTRY * PFNGLACCUMPROC)(GLenum op,GLfloat value);
typedef void (GL_APIENTRY * PFNGLACCUMXOESPROC)(GLenum op,GLfixed value);
typedef void (GL_APIENTRY * PFNGLACTIVEPROGRAMEXTPROC)(GLuint program);
typedef void (GL_APIENTRY * PFNGLACTIVESHADERPROGRAMPROC)(GLuint pipeline,GLuint program);
typedef void (GL_APIENTRY * PFNGLACTIVESHADERPROGRAMEXTPROC)(GLuint pipeline,GLuint program);
typedef void (GL_APIENTRY * PFNGLACTIVESTENCILFACEEXTPROC)(GLenum face);
typedef void (GL_APIENTRY * PFNGLACTIVETEXTUREPROC)(GLenum texture);
typedef void (GL_APIENTRY * PFNGLACTIVETEXTUREARBPROC)(GLenum texture);
typedef void (GL_APIENTRY * PFNGLACTIVEVARYINGNVPROC)(GLuint program,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLALPHAFRAGMENTOP1ATIPROC)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod);
typedef void (GL_APIENTRY * PFNGLALPHAFRAGMENTOP2ATIPROC)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod);
typedef void (GL_APIENTRY * PFNGLALPHAFRAGMENTOP3ATIPROC)(GLenum op,GLuint dst,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod);
typedef void (GL_APIENTRY * PFNGLALPHAFUNCPROC)(GLenum func,GLfloat ref);
typedef void (GL_APIENTRY * PFNGLALPHAFUNCQCOMPROC)(GLenum func,GLclampf ref);
typedef void (GL_APIENTRY * PFNGLALPHAFUNCXPROC)(GLenum func,GLfixed ref);
typedef void (GL_APIENTRY * PFNGLALPHAFUNCXOESPROC)(GLenum func,GLfixed ref);
typedef void (GL_APIENTRY * PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC)(void);
typedef void (GL_APIENTRY * PFNGLAPPLYTEXTUREEXTPROC)(GLenum mode);
typedef GLboolean (GL_APIENTRY * PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC)(GLuint memory,GLuint64 key,GLuint timeout);
typedef GLboolean (GL_APIENTRY * PFNGLAREPROGRAMSRESIDENTNVPROC)(GLsizei n,const GLuint *programs,GLboolean *residences);
typedef GLboolean (GL_APIENTRY * PFNGLARETEXTURESRESIDENTPROC)(GLsizei n,const GLuint *textures,GLboolean *residences);
typedef GLboolean (GL_APIENTRY * PFNGLARETEXTURESRESIDENTEXTPROC)(GLsizei n,const GLuint *textures,GLboolean *residences);
typedef void (GL_APIENTRY * PFNGLARRAYELEMENTPROC)(GLint i);
typedef void (GL_APIENTRY * PFNGLARRAYELEMENTEXTPROC)(GLint i);
typedef void (GL_APIENTRY * PFNGLARRAYOBJECTATIPROC)(GLenum array,GLint size,GLenum type,GLsizei stride,GLuint buffer,GLuint offset);
typedef GLuint (GL_APIENTRY * PFNGLASYNCCOPYBUFFERSUBDATANVXPROC)(GLsizei waitSemaphoreCount,const GLuint *waitSemaphoreArray,const GLuint64 *fenceValueArray,GLuint readGpu,GLbitfield writeGpuMask,GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size,GLsizei signalSemaphoreCount,const GLuint *signalSemaphoreArray,const GLuint64 *signalValueArray);
typedef GLuint (GL_APIENTRY * PFNGLASYNCCOPYIMAGESUBDATANVXPROC)(GLsizei waitSemaphoreCount,const GLuint *waitSemaphoreArray,const GLuint64 *waitValueArray,GLuint srcGpu,GLbitfield dstGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth,GLsizei signalSemaphoreCount,const GLuint *signalSemaphoreArray,const GLuint64 *signalValueArray);
typedef void (GL_APIENTRY * PFNGLASYNCMARKERSGIXPROC)(GLuint marker);
typedef void (GL_APIENTRY * PFNGLATTACHOBJECTARBPROC)(GLhandleARB containerObj,GLhandleARB obj);
typedef void (GL_APIENTRY * PFNGLATTACHSHADERPROC)(GLuint program,GLuint shader);
typedef void (GL_APIENTRY * PFNGLBEGINPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLBEGINCONDITIONALRENDERPROC)(GLuint id,GLenum mode);
typedef void (GL_APIENTRY * PFNGLBEGINCONDITIONALRENDERNVPROC)(GLuint id,GLenum mode);
typedef void (GL_APIENTRY * PFNGLBEGINCONDITIONALRENDERNVXPROC)(GLuint id);
typedef void (GL_APIENTRY * PFNGLBEGINFRAGMENTSHADERATIPROC)(void);
typedef void (GL_APIENTRY * PFNGLBEGINOCCLUSIONQUERYNVPROC)(GLuint id);
typedef void (GL_APIENTRY * PFNGLBEGINPERFMONITORAMDPROC)(GLuint monitor);
typedef void (GL_APIENTRY * PFNGLBEGINPERFQUERYINTELPROC)(GLuint queryHandle);
typedef void (GL_APIENTRY * PFNGLBEGINQUERYPROC)(GLenum target,GLuint id);
typedef void (GL_APIENTRY * PFNGLBEGINQUERYARBPROC)(GLenum target,GLuint id);
typedef void (GL_APIENTRY * PFNGLBEGINQUERYEXTPROC)(GLenum target,GLuint id);
typedef void (GL_APIENTRY * PFNGLBEGINQUERYINDEXEDPROC)(GLenum target,GLuint index,GLuint id);
typedef void (GL_APIENTRY * PFNGLBEGINTRANSFORMFEEDBACKPROC)(GLenum primitiveMode);
typedef void (GL_APIENTRY * PFNGLBEGINTRANSFORMFEEDBACKEXTPROC)(GLenum primitiveMode);
typedef void (GL_APIENTRY * PFNGLBEGINTRANSFORMFEEDBACKNVPROC)(GLenum primitiveMode);
typedef void (GL_APIENTRY * PFNGLBEGINVERTEXSHADEREXTPROC)(void);
typedef void (GL_APIENTRY * PFNGLBEGINVIDEOCAPTURENVPROC)(GLuint video_capture_slot);
typedef void (GL_APIENTRY * PFNGLBINDATTRIBLOCATIONPROC)(GLuint program,GLuint index,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLBINDATTRIBLOCATIONARBPROC)(GLhandleARB programObj,GLuint index,const GLcharARB *name);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERPROC)(GLenum target,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERARBPROC)(GLenum target,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERBASEPROC)(GLenum target,GLuint index,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERBASEEXTPROC)(GLenum target,GLuint index,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERBASENVPROC)(GLenum target,GLuint index,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLBINDBUFFEROFFSETEXTPROC)(GLenum target,GLuint index,GLuint buffer,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLBINDBUFFEROFFSETNVPROC)(GLenum target,GLuint index,GLuint buffer,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERRANGEPROC)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERRANGEEXTPROC)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERRANGENVPROC)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERSBASEPROC)(GLenum target,GLuint first,GLsizei count,const GLuint *buffers);
typedef void (GL_APIENTRY * PFNGLBINDBUFFERSRANGEPROC)(GLenum target,GLuint first,GLsizei count,const GLuint *buffers,const GLintptr *offsets,const GLsizeiptr *sizes);
typedef void (GL_APIENTRY * PFNGLBINDFRAGDATALOCATIONPROC)(GLuint program,GLuint color,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLBINDFRAGDATALOCATIONEXTPROC)(GLuint program,GLuint color,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)(GLuint program,GLuint colorNumber,GLuint index,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC)(GLuint program,GLuint colorNumber,GLuint index,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLBINDFRAGMENTSHADERATIPROC)(GLuint id);
typedef void (GL_APIENTRY * PFNGLBINDFRAMEBUFFERPROC)(GLenum target,GLuint framebuffer);
typedef void (GL_APIENTRY * PFNGLBINDFRAMEBUFFEREXTPROC)(GLenum target,GLuint framebuffer);
typedef void (GL_APIENTRY * PFNGLBINDFRAMEBUFFEROESPROC)(GLenum target,GLuint framebuffer);
typedef void (GL_APIENTRY * PFNGLBINDIMAGETEXTUREPROC)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format);
typedef void (GL_APIENTRY * PFNGLBINDIMAGETEXTUREEXTPROC)(GLuint index,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLint format);
typedef void (GL_APIENTRY * PFNGLBINDIMAGETEXTURESPROC)(GLuint first,GLsizei count,const GLuint *textures);
typedef GLuint (GL_APIENTRY * PFNGLBINDLIGHTPARAMETEREXTPROC)(GLenum light,GLenum value);
typedef GLuint (GL_APIENTRY * PFNGLBINDMATERIALPARAMETEREXTPROC)(GLenum face,GLenum value);
typedef void (GL_APIENTRY * PFNGLBINDMULTITEXTUREEXTPROC)(GLenum texunit,GLenum target,GLuint texture);
typedef GLuint (GL_APIENTRY * PFNGLBINDPARAMETEREXTPROC)(GLenum value);
typedef void (GL_APIENTRY * PFNGLBINDPROGRAMARBPROC)(GLenum target,GLuint program);
typedef void (GL_APIENTRY * PFNGLBINDPROGRAMNVPROC)(GLenum target,GLuint id);
typedef void (GL_APIENTRY * PFNGLBINDPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GL_APIENTRY * PFNGLBINDPROGRAMPIPELINEEXTPROC)(GLuint pipeline);
typedef void (GL_APIENTRY * PFNGLBINDRENDERBUFFERPROC)(GLenum target,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLBINDRENDERBUFFEREXTPROC)(GLenum target,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLBINDRENDERBUFFEROESPROC)(GLenum target,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLBINDSAMPLERPROC)(GLuint unit,GLuint sampler);
typedef void (GL_APIENTRY * PFNGLBINDSAMPLERSPROC)(GLuint first,GLsizei count,const GLuint *samplers);
typedef void (GL_APIENTRY * PFNGLBINDSHADINGRATEIMAGENVPROC)(GLuint texture);
typedef GLuint (GL_APIENTRY * PFNGLBINDTEXGENPARAMETEREXTPROC)(GLenum unit,GLenum coord,GLenum value);
typedef void (GL_APIENTRY * PFNGLBINDTEXTUREPROC)(GLenum target,GLuint texture);
typedef void (GL_APIENTRY * PFNGLBINDTEXTUREEXTPROC)(GLenum target,GLuint texture);
typedef void (GL_APIENTRY * PFNGLBINDTEXTUREUNITPROC)(GLuint unit,GLuint texture);
typedef GLuint (GL_APIENTRY * PFNGLBINDTEXTUREUNITPARAMETEREXTPROC)(GLenum unit,GLenum value);
typedef void (GL_APIENTRY * PFNGLBINDTEXTURESPROC)(GLuint first,GLsizei count,const GLuint *textures);
typedef void (GL_APIENTRY * PFNGLBINDTRANSFORMFEEDBACKPROC)(GLenum target,GLuint id);
typedef void (GL_APIENTRY * PFNGLBINDTRANSFORMFEEDBACKNVPROC)(GLenum target,GLuint id);
typedef void (GL_APIENTRY * PFNGLBINDVERTEXARRAYPROC)(GLuint array);
typedef void (GL_APIENTRY * PFNGLBINDVERTEXARRAYAPPLEPROC)(GLuint array);
typedef void (GL_APIENTRY * PFNGLBINDVERTEXARRAYOESPROC)(GLuint array);
typedef void (GL_APIENTRY * PFNGLBINDVERTEXBUFFERPROC)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLBINDVERTEXBUFFERSPROC)(GLuint first,GLsizei count,const GLuint *buffers,const GLintptr *offsets,const GLsizei *strides);
typedef void (GL_APIENTRY * PFNGLBINDVERTEXSHADEREXTPROC)(GLuint id);
typedef void (GL_APIENTRY * PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLintptrARB offset);
typedef void (GL_APIENTRY * PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC)(GLuint video_capture_slot,GLuint stream,GLenum frame_region,GLenum target,GLuint texture);
typedef void (GL_APIENTRY * PFNGLBINORMAL3BEXTPROC)(GLbyte bx,GLbyte by,GLbyte bz);
typedef void (GL_APIENTRY * PFNGLBINORMAL3BVEXTPROC)(const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLBINORMAL3DEXTPROC)(GLdouble bx,GLdouble by,GLdouble bz);
typedef void (GL_APIENTRY * PFNGLBINORMAL3DVEXTPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLBINORMAL3FEXTPROC)(GLfloat bx,GLfloat by,GLfloat bz);
typedef void (GL_APIENTRY * PFNGLBINORMAL3FVEXTPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLBINORMAL3IEXTPROC)(GLint bx,GLint by,GLint bz);
typedef void (GL_APIENTRY * PFNGLBINORMAL3IVEXTPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLBINORMAL3SEXTPROC)(GLshort bx,GLshort by,GLshort bz);
typedef void (GL_APIENTRY * PFNGLBINORMAL3SVEXTPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLBINORMALPOINTEREXTPROC)(GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLBITMAPPROC)(GLsizei width,GLsizei height,GLfloat xorig,GLfloat yorig,GLfloat xmove,GLfloat ymove,const GLubyte *bitmap);
typedef void (GL_APIENTRY * PFNGLBITMAPXOESPROC)(GLsizei width,GLsizei height,GLfixed xorig,GLfixed yorig,GLfixed xmove,GLfixed ymove,const GLubyte *bitmap);
typedef void (GL_APIENTRY * PFNGLBLENDBARRIERPROC)(void);
typedef void (GL_APIENTRY * PFNGLBLENDBARRIERKHRPROC)(void);
typedef void (GL_APIENTRY * PFNGLBLENDBARRIERNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLBLENDCOLORPROC)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
typedef void (GL_APIENTRY * PFNGLBLENDCOLOREXTPROC)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
typedef void (GL_APIENTRY * PFNGLBLENDCOLORXOESPROC)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONEXTPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONINDEXEDAMDPROC)(GLuint buf,GLenum mode);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONOESPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONSEPARATEPROC)(GLenum modeRGB,GLenum modeAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONSEPARATEEXTPROC)(GLenum modeRGB,GLenum modeAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC)(GLuint buf,GLenum modeRGB,GLenum modeAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONSEPARATEOESPROC)(GLenum modeRGB,GLenum modeAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONSEPARATEIPROC)(GLuint buf,GLenum modeRGB,GLenum modeAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONSEPARATEIARBPROC)(GLuint buf,GLenum modeRGB,GLenum modeAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONSEPARATEIEXTPROC)(GLuint buf,GLenum modeRGB,GLenum modeAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONSEPARATEIOESPROC)(GLuint buf,GLenum modeRGB,GLenum modeAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONIPROC)(GLuint buf,GLenum mode);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONIARBPROC)(GLuint buf,GLenum mode);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONIEXTPROC)(GLuint buf,GLenum mode);
typedef void (GL_APIENTRY * PFNGLBLENDEQUATIONIOESPROC)(GLuint buf,GLenum mode);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCPROC)(GLenum sfactor,GLenum dfactor);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCINDEXEDAMDPROC)(GLuint buf,GLenum src,GLenum dst);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCSEPARATEPROC)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCSEPARATEEXTPROC)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCSEPARATEINGRPROC)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCSEPARATEOESPROC)(GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCSEPARATEIPROC)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCSEPARATEIARBPROC)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCSEPARATEIEXTPROC)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCSEPARATEIOESPROC)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCIPROC)(GLuint buf,GLenum src,GLenum dst);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCIARBPROC)(GLuint buf,GLenum src,GLenum dst);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCIEXTPROC)(GLuint buf,GLenum src,GLenum dst);
typedef void (GL_APIENTRY * PFNGLBLENDFUNCIOESPROC)(GLuint buf,GLenum src,GLenum dst);
typedef void (GL_APIENTRY * PFNGLBLENDPARAMETERINVPROC)(GLenum pname,GLint value);
typedef void (GL_APIENTRY * PFNGLBLITFRAMEBUFFERPROC)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter);
typedef void (GL_APIENTRY * PFNGLBLITFRAMEBUFFERANGLEPROC)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter);
typedef void (GL_APIENTRY * PFNGLBLITFRAMEBUFFEREXTPROC)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter);
typedef void (GL_APIENTRY * PFNGLBLITFRAMEBUFFERLAYEREXTPROC)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint srcLayer,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLint dstLayer,GLbitfield mask,GLenum filter);
typedef void (GL_APIENTRY * PFNGLBLITFRAMEBUFFERLAYERSEXTPROC)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter);
typedef void (GL_APIENTRY * PFNGLBLITFRAMEBUFFERNVPROC)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter);
typedef void (GL_APIENTRY * PFNGLBLITNAMEDFRAMEBUFFERPROC)(GLuint readFramebuffer,GLuint drawFramebuffer,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter);
typedef void (GL_APIENTRY * PFNGLBUFFERADDRESSRANGENVPROC)(GLenum pname,GLuint index,GLuint64EXT address,GLsizeiptr length);
typedef void (GL_APIENTRY * PFNGLBUFFERATTACHMEMORYNVPROC)(GLenum target,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLBUFFERDATAPROC)(GLenum target,GLsizeiptr size,const void *data,GLenum usage);
typedef void (GL_APIENTRY * PFNGLBUFFERDATAARBPROC)(GLenum target,GLsizeiptrARB size,const void *data,GLenum usage);
typedef void (GL_APIENTRY * PFNGLBUFFERPAGECOMMITMENTARBPROC)(GLenum target,GLintptr offset,GLsizeiptr size,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLBUFFERPAGECOMMITMENTMEMNVPROC)(GLenum target,GLintptr offset,GLsizeiptr size,GLuint memory,GLuint64 memOffset,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLBUFFERPARAMETERIAPPLEPROC)(GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLBUFFERSTORAGEPROC)(GLenum target,GLsizeiptr size,const void *data,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLBUFFERSTORAGEEXTPROC)(GLenum target,GLsizeiptr size,const void *data,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLBUFFERSTORAGEEXTERNALEXTPROC)(GLenum target,GLintptr offset,GLsizeiptr size,GLeglClientBufferEXT clientBuffer,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLBUFFERSTORAGEMEMEXTPROC)(GLenum target,GLsizeiptr size,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLBUFFERSUBDATAPROC)(GLenum target,GLintptr offset,GLsizeiptr size,const void *data);
typedef void (GL_APIENTRY * PFNGLBUFFERSUBDATAARBPROC)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,const void *data);
typedef void (GL_APIENTRY * PFNGLCALLCOMMANDLISTNVPROC)(GLuint list);
typedef void (GL_APIENTRY * PFNGLCALLLISTPROC)(GLuint list);
typedef void (GL_APIENTRY * PFNGLCALLLISTSPROC)(GLsizei n,GLenum type,const void *lists);
typedef GLenum (GL_APIENTRY * PFNGLCHECKFRAMEBUFFERSTATUSPROC)(GLenum target);
typedef GLenum (GL_APIENTRY * PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC)(GLenum target);
typedef GLenum (GL_APIENTRY * PFNGLCHECKFRAMEBUFFERSTATUSOESPROC)(GLenum target);
typedef GLenum (GL_APIENTRY * PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC)(GLuint framebuffer,GLenum target);
typedef GLenum (GL_APIENTRY * PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC)(GLuint framebuffer,GLenum target);
typedef void (GL_APIENTRY * PFNGLCLAMPCOLORPROC)(GLenum target,GLenum clamp);
typedef void (GL_APIENTRY * PFNGLCLAMPCOLORARBPROC)(GLenum target,GLenum clamp);
typedef void (GL_APIENTRY * PFNGLCLEARPROC)(GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLCLEARACCUMPROC)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
typedef void (GL_APIENTRY * PFNGLCLEARACCUMXOESPROC)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha);
typedef void (GL_APIENTRY * PFNGLCLEARBUFFERDATAPROC)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLEARBUFFERSUBDATAPROC)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLEARBUFFERFIPROC)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil);
typedef void (GL_APIENTRY * PFNGLCLEARBUFFERFVPROC)(GLenum buffer,GLint drawbuffer,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLCLEARBUFFERIVPROC)(GLenum buffer,GLint drawbuffer,const GLint *value);
typedef void (GL_APIENTRY * PFNGLCLEARBUFFERUIVPROC)(GLenum buffer,GLint drawbuffer,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLCLEARCOLORPROC)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
typedef void (GL_APIENTRY * PFNGLCLEARCOLORIIEXTPROC)(GLint red,GLint green,GLint blue,GLint alpha);
typedef void (GL_APIENTRY * PFNGLCLEARCOLORIUIEXTPROC)(GLuint red,GLuint green,GLuint blue,GLuint alpha);
typedef void (GL_APIENTRY * PFNGLCLEARCOLORXPROC)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha);
typedef void (GL_APIENTRY * PFNGLCLEARCOLORXOESPROC)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha);
typedef void (GL_APIENTRY * PFNGLCLEARDEPTHPROC)(GLdouble depth);
typedef void (GL_APIENTRY * PFNGLCLEARDEPTHDNVPROC)(GLdouble depth);
typedef void (GL_APIENTRY * PFNGLCLEARDEPTHFPROC)(GLfloat d);
typedef void (GL_APIENTRY * PFNGLCLEARDEPTHFOESPROC)(GLclampf depth);
typedef void (GL_APIENTRY * PFNGLCLEARDEPTHXPROC)(GLfixed depth);
typedef void (GL_APIENTRY * PFNGLCLEARDEPTHXOESPROC)(GLfixed depth);
typedef void (GL_APIENTRY * PFNGLCLEARINDEXPROC)(GLfloat c);
typedef void (GL_APIENTRY * PFNGLCLEARNAMEDBUFFERDATAPROC)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLEARNAMEDBUFFERDATAEXTPROC)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLEARNAMEDBUFFERSUBDATAPROC)(GLuint buffer,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer,GLenum internalformat,GLsizeiptr offset,GLsizeiptr size,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERFIPROC)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil);
typedef void (GL_APIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERFVPROC)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERIVPROC)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLint *value);
typedef void (GL_APIENTRY * PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC)(GLuint framebuffer,GLenum buffer,GLint drawbuffer,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC)(GLsizei offset,GLsizei n,const GLuint *values);
typedef void (GL_APIENTRY * PFNGLCLEARSTENCILPROC)(GLint s);
typedef void (GL_APIENTRY * PFNGLCLEARTEXIMAGEPROC)(GLuint texture,GLint level,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLEARTEXIMAGEEXTPROC)(GLuint texture,GLint level,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLEARTEXSUBIMAGEPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLEARTEXSUBIMAGEEXTPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCLIENTACTIVETEXTUREPROC)(GLenum texture);
typedef void (GL_APIENTRY * PFNGLCLIENTACTIVETEXTUREARBPROC)(GLenum texture);
typedef void (GL_APIENTRY * PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC)(GLenum stream);
typedef void (GL_APIENTRY * PFNGLCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC)(GLsizei fenceObjectCount,const GLuint *semaphoreArray,const GLuint64 *fenceValueArray);
typedef GLenum (GL_APIENTRY * PFNGLCLIENTWAITSYNCPROC)(GLsync sync,GLbitfield flags,GLuint64 timeout);
typedef GLenum (GL_APIENTRY * PFNGLCLIENTWAITSYNCAPPLEPROC)(GLsync sync,GLbitfield flags,GLuint64 timeout);
typedef void (GL_APIENTRY * PFNGLCLIPCONTROLPROC)(GLenum origin,GLenum depth);
typedef void (GL_APIENTRY * PFNGLCLIPCONTROLEXTPROC)(GLenum origin,GLenum depth);
typedef void (GL_APIENTRY * PFNGLCLIPPLANEPROC)(GLenum plane,const GLdouble *equation);
typedef void (GL_APIENTRY * PFNGLCLIPPLANEFPROC)(GLenum p,const GLfloat *eqn);
typedef void (GL_APIENTRY * PFNGLCLIPPLANEFIMGPROC)(GLenum p,const GLfloat *eqn);
typedef void (GL_APIENTRY * PFNGLCLIPPLANEFOESPROC)(GLenum plane,const GLfloat *equation);
typedef void (GL_APIENTRY * PFNGLCLIPPLANEXPROC)(GLenum plane,const GLfixed *equation);
typedef void (GL_APIENTRY * PFNGLCLIPPLANEXIMGPROC)(GLenum p,const GLfixed *eqn);
typedef void (GL_APIENTRY * PFNGLCLIPPLANEXOESPROC)(GLenum plane,const GLfixed *equation);
typedef void (GL_APIENTRY * PFNGLCOLOR3BPROC)(GLbyte red,GLbyte green,GLbyte blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3BVPROC)(const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3DPROC)(GLdouble red,GLdouble green,GLdouble blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3FPROC)(GLfloat red,GLfloat green,GLfloat blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3FVERTEX3FSUNPROC)(GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLCOLOR3FVERTEX3FVSUNPROC)(const GLfloat *c,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3HNVPROC)(GLhalfNV red,GLhalfNV green,GLhalfNV blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3IPROC)(GLint red,GLint green,GLint blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3SPROC)(GLshort red,GLshort green,GLshort blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3UBPROC)(GLubyte red,GLubyte green,GLubyte blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3UBVPROC)(const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3UIPROC)(GLuint red,GLuint green,GLuint blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3UIVPROC)(const GLuint *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3USPROC)(GLushort red,GLushort green,GLushort blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3USVPROC)(const GLushort *v);
typedef void (GL_APIENTRY * PFNGLCOLOR3XOESPROC)(GLfixed red,GLfixed green,GLfixed blue);
typedef void (GL_APIENTRY * PFNGLCOLOR3XVOESPROC)(const GLfixed *components);
typedef void (GL_APIENTRY * PFNGLCOLOR4BPROC)(GLbyte red,GLbyte green,GLbyte blue,GLbyte alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4BVPROC)(const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4DPROC)(GLdouble red,GLdouble green,GLdouble blue,GLdouble alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4FPROC)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat *c,const GLfloat *n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4HNVPROC)(GLhalfNV red,GLhalfNV green,GLhalfNV blue,GLhalfNV alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4IPROC)(GLint red,GLint green,GLint blue,GLint alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4SPROC)(GLshort red,GLshort green,GLshort blue,GLshort alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4UBPROC)(GLubyte red,GLubyte green,GLubyte blue,GLubyte alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4UBVERTEX2FSUNPROC)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLCOLOR4UBVERTEX2FVSUNPROC)(const GLubyte *c,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4UBVERTEX3FSUNPROC)(GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLCOLOR4UBVERTEX3FVSUNPROC)(const GLubyte *c,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4UBVPROC)(const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4UIPROC)(GLuint red,GLuint green,GLuint blue,GLuint alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4UIVPROC)(const GLuint *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4USPROC)(GLushort red,GLushort green,GLushort blue,GLushort alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4USVPROC)(const GLushort *v);
typedef void (GL_APIENTRY * PFNGLCOLOR4XPROC)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4XOESPROC)(GLfixed red,GLfixed green,GLfixed blue,GLfixed alpha);
typedef void (GL_APIENTRY * PFNGLCOLOR4XVOESPROC)(const GLfixed *components);
typedef void (GL_APIENTRY * PFNGLCOLORFORMATNVPROC)(GLint size,GLenum type,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLCOLORFRAGMENTOP1ATIPROC)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod);
typedef void (GL_APIENTRY * PFNGLCOLORFRAGMENTOP2ATIPROC)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod);
typedef void (GL_APIENTRY * PFNGLCOLORFRAGMENTOP3ATIPROC)(GLenum op,GLuint dst,GLuint dstMask,GLuint dstMod,GLuint arg1,GLuint arg1Rep,GLuint arg1Mod,GLuint arg2,GLuint arg2Rep,GLuint arg2Mod,GLuint arg3,GLuint arg3Rep,GLuint arg3Mod);
typedef void (GL_APIENTRY * PFNGLCOLORMASKPROC)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha);
typedef void (GL_APIENTRY * PFNGLCOLORMASKINDEXEDEXTPROC)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a);
typedef void (GL_APIENTRY * PFNGLCOLORMASKIPROC)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a);
typedef void (GL_APIENTRY * PFNGLCOLORMASKIEXTPROC)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a);
typedef void (GL_APIENTRY * PFNGLCOLORMASKIOESPROC)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a);
typedef void (GL_APIENTRY * PFNGLCOLORMATERIALPROC)(GLenum face,GLenum mode);
typedef void (GL_APIENTRY * PFNGLCOLORP3UIPROC)(GLenum type,GLuint color);
typedef void (GL_APIENTRY * PFNGLCOLORP3UIVPROC)(GLenum type,const GLuint *color);
typedef void (GL_APIENTRY * PFNGLCOLORP4UIPROC)(GLenum type,GLuint color);
typedef void (GL_APIENTRY * PFNGLCOLORP4UIVPROC)(GLenum type,const GLuint *color);
typedef void (GL_APIENTRY * PFNGLCOLORPOINTERPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLCOLORPOINTEREXTPROC)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void *pointer);
typedef void (GL_APIENTRY * PFNGLCOLORPOINTERLISTIBMPROC)(GLint size,GLenum type,GLint stride,const void **pointer,GLint ptrstride);
typedef void (GL_APIENTRY * PFNGLCOLORPOINTERVINTELPROC)(GLint size,GLenum type,const void **pointer);
typedef void (GL_APIENTRY * PFNGLCOLORSUBTABLEPROC)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCOLORSUBTABLEEXTPROC)(GLenum target,GLsizei start,GLsizei count,GLenum format,GLenum type,const void *data);
typedef void (GL_APIENTRY * PFNGLCOLORTABLEPROC)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void *table);
typedef void (GL_APIENTRY * PFNGLCOLORTABLEEXTPROC)(GLenum target,GLenum internalFormat,GLsizei width,GLenum format,GLenum type,const void *table);
typedef void (GL_APIENTRY * PFNGLCOLORTABLEPARAMETERFVPROC)(GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLCOLORTABLEPARAMETERFVSGIPROC)(GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLCOLORTABLEPARAMETERIVPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLCOLORTABLEPARAMETERIVSGIPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLCOLORTABLESGIPROC)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void *table);
typedef void (GL_APIENTRY * PFNGLCOMBINERINPUTNVPROC)(GLenum stage,GLenum portion,GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage);
typedef void (GL_APIENTRY * PFNGLCOMBINEROUTPUTNVPROC)(GLenum stage,GLenum portion,GLenum abOutput,GLenum cdOutput,GLenum sumOutput,GLenum scale,GLenum bias,GLboolean abDotProduct,GLboolean cdDotProduct,GLboolean muxSum);
typedef void (GL_APIENTRY * PFNGLCOMBINERPARAMETERFNVPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLCOMBINERPARAMETERFVNVPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLCOMBINERPARAMETERINVPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLCOMBINERPARAMETERIVNVPROC)(GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum stage,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLCOMMANDLISTSEGMENTSNVPROC)(GLuint list,GLuint segments);
typedef void (GL_APIENTRY * PFNGLCOMPILECOMMANDLISTNVPROC)(GLuint list);
typedef void (GL_APIENTRY * PFNGLCOMPILESHADERPROC)(GLuint shader);
typedef void (GL_APIENTRY * PFNGLCOMPILESHADERARBPROC)(GLhandleARB shaderObj);
typedef void (GL_APIENTRY * PFNGLCOMPILESHADERINCLUDEARBPROC)(GLuint shader,GLsizei count,const GLchar *const*path,const GLint *length);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXIMAGE1DARBPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXIMAGE2DARBPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DARBPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXIMAGE3DOESPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void *data);
typedef void (GL_APIENTRY * PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const void *bits);
typedef void (GL_APIENTRY * PFNGLCONSERVATIVERASTERPARAMETERFNVPROC)(GLenum pname,GLfloat value);
typedef void (GL_APIENTRY * PFNGLCONSERVATIVERASTERPARAMETERINVPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONFILTER1DPROC)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void *image);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONFILTER1DEXTPROC)(GLenum target,GLenum internalformat,GLsizei width,GLenum format,GLenum type,const void *image);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONFILTER2DPROC)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void *image);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONFILTER2DEXTPROC)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void *image);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERFPROC)(GLenum target,GLenum pname,GLfloat params);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERFEXTPROC)(GLenum target,GLenum pname,GLfloat params);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERFVPROC)(GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERFVEXTPROC)(GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERIPROC)(GLenum target,GLenum pname,GLint params);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERIEXTPROC)(GLenum target,GLenum pname,GLint params);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERIVPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERIVEXTPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERXOESPROC)(GLenum target,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLCONVOLUTIONPARAMETERXVOESPROC)(GLenum target,GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLCOPYBUFFERSUBDATAPROC)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLCOPYBUFFERSUBDATANVPROC)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLCOPYCOLORSUBTABLEPROC)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYCOLORSUBTABLEEXTPROC)(GLenum target,GLsizei start,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYCOLORTABLEPROC)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYCOLORTABLESGIPROC)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DPROC)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DPROC)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC)(GLenum target,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYIMAGESUBDATAPROC)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth);
typedef void (GL_APIENTRY * PFNGLCOPYIMAGESUBDATAEXTPROC)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth);
typedef void (GL_APIENTRY * PFNGLCOPYIMAGESUBDATANVPROC)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth);
typedef void (GL_APIENTRY * PFNGLCOPYIMAGESUBDATAOESPROC)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth);
typedef void (GL_APIENTRY * PFNGLCOPYMULTITEXIMAGE1DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border);
typedef void (GL_APIENTRY * PFNGLCOPYMULTITEXIMAGE2DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border);
typedef void (GL_APIENTRY * PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYNAMEDBUFFERSUBDATAPROC)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLCOPYPATHNVPROC)(GLuint resultPath,GLuint srcPath);
typedef void (GL_APIENTRY * PFNGLCOPYPIXELSPROC)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum type);
typedef void (GL_APIENTRY * PFNGLCOPYTEXIMAGE1DPROC)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border);
typedef void (GL_APIENTRY * PFNGLCOPYTEXIMAGE1DEXTPROC)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border);
typedef void (GL_APIENTRY * PFNGLCOPYTEXIMAGE2DPROC)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border);
typedef void (GL_APIENTRY * PFNGLCOPYTEXIMAGE2DEXTPROC)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border);
typedef void (GL_APIENTRY * PFNGLCOPYTEXSUBIMAGE1DPROC)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYTEXSUBIMAGE1DEXTPROC)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYTEXSUBIMAGE2DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYTEXSUBIMAGE2DEXTPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYTEXSUBIMAGE3DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYTEXSUBIMAGE3DEXTPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYTEXSUBIMAGE3DOESPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYTEXTUREIMAGE1DEXTPROC)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border);
typedef void (GL_APIENTRY * PFNGLCOPYTEXTUREIMAGE2DEXTPROC)(GLuint texture,GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border);
typedef void (GL_APIENTRY * PFNGLCOPYTEXTURELEVELSAPPLEPROC)(GLuint destinationTexture,GLuint sourceTexture,GLint sourceBaseLevel,GLsizei sourceLevelCount);
typedef void (GL_APIENTRY * PFNGLCOPYTEXTURESUBIMAGE1DPROC)(GLuint texture,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width);
typedef void (GL_APIENTRY * PFNGLCOPYTEXTURESUBIMAGE2DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYTEXTURESUBIMAGE3DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLCOVERFILLPATHINSTANCEDNVPROC)(GLsizei numPaths,GLenum pathNameType,const void *paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat *transformValues);
typedef void (GL_APIENTRY * PFNGLCOVERFILLPATHNVPROC)(GLuint path,GLenum coverMode);
typedef void (GL_APIENTRY * PFNGLCOVERSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths,GLenum pathNameType,const void *paths,GLuint pathBase,GLenum coverMode,GLenum transformType,const GLfloat *transformValues);
typedef void (GL_APIENTRY * PFNGLCOVERSTROKEPATHNVPROC)(GLuint path,GLenum coverMode);
typedef void (GL_APIENTRY * PFNGLCOVERAGEMASKNVPROC)(GLboolean mask);
typedef void (GL_APIENTRY * PFNGLCOVERAGEMODULATIONNVPROC)(GLenum components);
typedef void (GL_APIENTRY * PFNGLCOVERAGEMODULATIONTABLENVPROC)(GLsizei n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLCOVERAGEOPERATIONNVPROC)(GLenum operation);
typedef void (GL_APIENTRY * PFNGLCREATEBUFFERSPROC)(GLsizei n,GLuint *buffers);
typedef void (GL_APIENTRY * PFNGLCREATECOMMANDLISTSNVPROC)(GLsizei n,GLuint *lists);
typedef void (GL_APIENTRY * PFNGLCREATEFRAMEBUFFERSPROC)(GLsizei n,GLuint *framebuffers);
typedef void (GL_APIENTRY * PFNGLCREATEMEMORYOBJECTSEXTPROC)(GLsizei n,GLuint *memoryObjects);
typedef void (GL_APIENTRY * PFNGLCREATEPERFQUERYINTELPROC)(GLuint queryId,GLuint *queryHandle);
typedef GLuint (GL_APIENTRY * PFNGLCREATEPROGRAMPROC)(void);
typedef GLhandleARB (GL_APIENTRY * PFNGLCREATEPROGRAMOBJECTARBPROC)(void);
typedef void (GL_APIENTRY * PFNGLCREATEPROGRAMPIPELINESPROC)(GLsizei n,GLuint *pipelines);
typedef GLuint (GL_APIENTRY * PFNGLCREATEPROGRESSFENCENVXPROC)(void);
typedef void (GL_APIENTRY * PFNGLCREATEQUERIESPROC)(GLenum target,GLsizei n,GLuint *ids);
typedef void (GL_APIENTRY * PFNGLCREATERENDERBUFFERSPROC)(GLsizei n,GLuint *renderbuffers);
typedef void (GL_APIENTRY * PFNGLCREATESAMPLERSPROC)(GLsizei n,GLuint *samplers);
typedef void (GL_APIENTRY * PFNGLCREATESEMAPHORESNVPROC)(GLsizei n,GLuint *semaphores);
typedef GLuint (GL_APIENTRY * PFNGLCREATESHADERPROC)(GLenum type);
typedef GLhandleARB (GL_APIENTRY * PFNGLCREATESHADEROBJECTARBPROC)(GLenum shaderType);
typedef GLuint (GL_APIENTRY * PFNGLCREATESHADERPROGRAMEXTPROC)(GLenum type,const GLchar *string);
typedef GLuint (GL_APIENTRY * PFNGLCREATESHADERPROGRAMVPROC)(GLenum type,GLsizei count,const GLchar *const*strings);
typedef GLuint (GL_APIENTRY * PFNGLCREATESHADERPROGRAMVEXTPROC)(GLenum type,GLsizei count,const GLchar *const*strings);
typedef void (GL_APIENTRY * PFNGLCREATESTATESNVPROC)(GLsizei n,GLuint *states);
typedef GLsync (GL_APIENTRY * PFNGLCREATESYNCFROMCLEVENTARBPROC)(struct _cl_context *context,struct _cl_event *event,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLCREATETEXTURESPROC)(GLenum target,GLsizei n,GLuint *textures);
typedef void (GL_APIENTRY * PFNGLCREATETRANSFORMFEEDBACKSPROC)(GLsizei n,GLuint *ids);
typedef void (GL_APIENTRY * PFNGLCREATEVERTEXARRAYSPROC)(GLsizei n,GLuint *arrays);
typedef void (GL_APIENTRY * PFNGLCULLFACEPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLCULLPARAMETERDVEXTPROC)(GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLCULLPARAMETERFVEXTPROC)(GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLCURRENTPALETTEMATRIXARBPROC)(GLint index);
typedef void (GL_APIENTRY * PFNGLCURRENTPALETTEMATRIXOESPROC)(GLuint matrixpaletteindex);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGECALLBACKPROC)(GLDEBUGPROC callback,const void *userParam);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGECALLBACKAMDPROC)(GLDEBUGPROCAMD callback,void *userParam);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGECALLBACKARBPROC)(GLDEBUGPROCARB callback,const void *userParam);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGECALLBACKKHRPROC)(GLDEBUGPROCKHR callback,const void *userParam);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGECONTROLPROC)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint *ids,GLboolean enabled);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGECONTROLARBPROC)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint *ids,GLboolean enabled);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGECONTROLKHRPROC)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint *ids,GLboolean enabled);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGEENABLEAMDPROC)(GLenum category,GLenum severity,GLsizei count,const GLuint *ids,GLboolean enabled);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGEINSERTPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *buf);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGEINSERTAMDPROC)(GLenum category,GLenum severity,GLuint id,GLsizei length,const GLchar *buf);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGEINSERTARBPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *buf);
typedef void (GL_APIENTRY * PFNGLDEBUGMESSAGEINSERTKHRPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *buf);
typedef void (GL_APIENTRY * PFNGLDEFORMSGIXPROC)(GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLDEFORMATIONMAP3DSGIXPROC)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,GLdouble w1,GLdouble w2,GLint wstride,GLint worder,const GLdouble *points);
typedef void (GL_APIENTRY * PFNGLDEFORMATIONMAP3FSGIXPROC)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,GLfloat w1,GLfloat w2,GLint wstride,GLint worder,const GLfloat *points);
typedef void (GL_APIENTRY * PFNGLDELETEASYNCMARKERSSGIXPROC)(GLuint marker,GLsizei range);
typedef void (GL_APIENTRY * PFNGLDELETEBUFFERSPROC)(GLsizei n,const GLuint *buffers);
typedef void (GL_APIENTRY * PFNGLDELETEBUFFERSARBPROC)(GLsizei n,const GLuint *buffers);
typedef void (GL_APIENTRY * PFNGLDELETECOMMANDLISTSNVPROC)(GLsizei n,const GLuint *lists);
typedef void (GL_APIENTRY * PFNGLDELETEFENCESAPPLEPROC)(GLsizei n,const GLuint *fences);
typedef void (GL_APIENTRY * PFNGLDELETEFENCESNVPROC)(GLsizei n,const GLuint *fences);
typedef void (GL_APIENTRY * PFNGLDELETEFRAGMENTSHADERATIPROC)(GLuint id);
typedef void (GL_APIENTRY * PFNGLDELETEFRAMEBUFFERSPROC)(GLsizei n,const GLuint *framebuffers);
typedef void (GL_APIENTRY * PFNGLDELETEFRAMEBUFFERSEXTPROC)(GLsizei n,const GLuint *framebuffers);
typedef void (GL_APIENTRY * PFNGLDELETEFRAMEBUFFERSOESPROC)(GLsizei n,const GLuint *framebuffers);
typedef void (GL_APIENTRY * PFNGLDELETELISTSPROC)(GLuint list,GLsizei range);
typedef void (GL_APIENTRY * PFNGLDELETEMEMORYOBJECTSEXTPROC)(GLsizei n,const GLuint *memoryObjects);
typedef void (GL_APIENTRY * PFNGLDELETENAMEDSTRINGARBPROC)(GLint namelen,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLDELETENAMESAMDPROC)(GLenum identifier,GLuint num,const GLuint *names);
typedef void (GL_APIENTRY * PFNGLDELETEOBJECTARBPROC)(GLhandleARB obj);
typedef void (GL_APIENTRY * PFNGLDELETEOCCLUSIONQUERIESNVPROC)(GLsizei n,const GLuint *ids);
typedef void (GL_APIENTRY * PFNGLDELETEPATHSNVPROC)(GLuint path,GLsizei range);
typedef void (GL_APIENTRY * PFNGLDELETEPERFMONITORSAMDPROC)(GLsizei n,GLuint *monitors);
typedef void (GL_APIENTRY * PFNGLDELETEPERFQUERYINTELPROC)(GLuint queryHandle);
typedef void (GL_APIENTRY * PFNGLDELETEPROGRAMPROC)(GLuint program);
typedef void (GL_APIENTRY * PFNGLDELETEPROGRAMPIPELINESPROC)(GLsizei n,const GLuint *pipelines);
typedef void (GL_APIENTRY * PFNGLDELETEPROGRAMPIPELINESEXTPROC)(GLsizei n,const GLuint *pipelines);
typedef void (GL_APIENTRY * PFNGLDELETEPROGRAMSARBPROC)(GLsizei n,const GLuint *programs);
typedef void (GL_APIENTRY * PFNGLDELETEPROGRAMSNVPROC)(GLsizei n,const GLuint *programs);
typedef void (GL_APIENTRY * PFNGLDELETEQUERIESPROC)(GLsizei n,const GLuint *ids);
typedef void (GL_APIENTRY * PFNGLDELETEQUERIESARBPROC)(GLsizei n,const GLuint *ids);
typedef void (GL_APIENTRY * PFNGLDELETEQUERIESEXTPROC)(GLsizei n,const GLuint *ids);
typedef void (GL_APIENTRY * PFNGLDELETEQUERYRESOURCETAGNVPROC)(GLsizei n,const GLint *tagIds);
typedef void (GL_APIENTRY * PFNGLDELETERENDERBUFFERSPROC)(GLsizei n,const GLuint *renderbuffers);
typedef void (GL_APIENTRY * PFNGLDELETERENDERBUFFERSEXTPROC)(GLsizei n,const GLuint *renderbuffers);
typedef void (GL_APIENTRY * PFNGLDELETERENDERBUFFERSOESPROC)(GLsizei n,const GLuint *renderbuffers);
typedef void (GL_APIENTRY * PFNGLDELETESAMPLERSPROC)(GLsizei count,const GLuint *samplers);
typedef void (GL_APIENTRY * PFNGLDELETESEMAPHORESEXTPROC)(GLsizei n,const GLuint *semaphores);
typedef void (GL_APIENTRY * PFNGLDELETESHADERPROC)(GLuint shader);
typedef void (GL_APIENTRY * PFNGLDELETESTATESNVPROC)(GLsizei n,const GLuint *states);
typedef void (GL_APIENTRY * PFNGLDELETESYNCPROC)(GLsync sync);
typedef void (GL_APIENTRY * PFNGLDELETESYNCAPPLEPROC)(GLsync sync);
typedef void (GL_APIENTRY * PFNGLDELETETEXTURESPROC)(GLsizei n,const GLuint *textures);
typedef void (GL_APIENTRY * PFNGLDELETETEXTURESEXTPROC)(GLsizei n,const GLuint *textures);
typedef void (GL_APIENTRY * PFNGLDELETETRANSFORMFEEDBACKSPROC)(GLsizei n,const GLuint *ids);
typedef void (GL_APIENTRY * PFNGLDELETETRANSFORMFEEDBACKSNVPROC)(GLsizei n,const GLuint *ids);
typedef void (GL_APIENTRY * PFNGLDELETEVERTEXARRAYSPROC)(GLsizei n,const GLuint *arrays);
typedef void (GL_APIENTRY * PFNGLDELETEVERTEXARRAYSAPPLEPROC)(GLsizei n,const GLuint *arrays);
typedef void (GL_APIENTRY * PFNGLDELETEVERTEXARRAYSOESPROC)(GLsizei n,const GLuint *arrays);
typedef void (GL_APIENTRY * PFNGLDELETEVERTEXSHADEREXTPROC)(GLuint id);
typedef void (GL_APIENTRY * PFNGLDEPTHBOUNDSEXTPROC)(GLclampd zmin,GLclampd zmax);
typedef void (GL_APIENTRY * PFNGLDEPTHBOUNDSDNVPROC)(GLdouble zmin,GLdouble zmax);
typedef void (GL_APIENTRY * PFNGLDEPTHFUNCPROC)(GLenum func);
typedef void (GL_APIENTRY * PFNGLDEPTHMASKPROC)(GLboolean flag);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEPROC)(GLdouble n,GLdouble f);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEARRAYDVNVPROC)(GLuint first,GLsizei count,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEARRAYFVNVPROC)(GLuint first,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEARRAYFVOESPROC)(GLuint first,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEARRAYVPROC)(GLuint first,GLsizei count,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEINDEXEDPROC)(GLuint index,GLdouble n,GLdouble f);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEINDEXEDDNVPROC)(GLuint index,GLdouble n,GLdouble f);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEINDEXEDFNVPROC)(GLuint index,GLfloat n,GLfloat f);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEINDEXEDFOESPROC)(GLuint index,GLfloat n,GLfloat f);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEDNVPROC)(GLdouble zNear,GLdouble zFar);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEFPROC)(GLfloat n,GLfloat f);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEFOESPROC)(GLclampf n,GLclampf f);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEXPROC)(GLfixed n,GLfixed f);
typedef void (GL_APIENTRY * PFNGLDEPTHRANGEXOESPROC)(GLfixed n,GLfixed f);
typedef void (GL_APIENTRY * PFNGLDETACHOBJECTARBPROC)(GLhandleARB containerObj,GLhandleARB attachedObj);
typedef void (GL_APIENTRY * PFNGLDETACHSHADERPROC)(GLuint program,GLuint shader);
typedef void (GL_APIENTRY * PFNGLDETAILTEXFUNCSGISPROC)(GLenum target,GLsizei n,const GLfloat *points);
typedef void (GL_APIENTRY * PFNGLDISABLEPROC)(GLenum cap);
typedef void (GL_APIENTRY * PFNGLDISABLECLIENTSTATEPROC)(GLenum array);
typedef void (GL_APIENTRY * PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array,GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLECLIENTSTATEIEXTPROC)(GLenum array,GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLEDRIVERCONTROLQCOMPROC)(GLuint driverControl);
typedef void (GL_APIENTRY * PFNGLDISABLEINDEXEDEXTPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC)(GLuint id);
typedef void (GL_APIENTRY * PFNGLDISABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj,GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj,GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLEVERTEXARRAYEXTPROC)(GLuint vaobj,GLenum array);
typedef void (GL_APIENTRY * PFNGLDISABLEVERTEXATTRIBAPPLEPROC)(GLuint index,GLenum pname);
typedef void (GL_APIENTRY * PFNGLDISABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLEIPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLEIEXTPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLEINVPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLDISABLEIOESPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLDISCARDFRAMEBUFFEREXTPROC)(GLenum target,GLsizei numAttachments,const GLenum *attachments);
typedef void (GL_APIENTRY * PFNGLDISPATCHCOMPUTEPROC)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z);
typedef void (GL_APIENTRY * PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z,GLuint group_size_x,GLuint group_size_y,GLuint group_size_z);
typedef void (GL_APIENTRY * PFNGLDISPATCHCOMPUTEINDIRECTPROC)(GLintptr indirect);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSPROC)(GLenum mode,GLint first,GLsizei count);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSEXTPROC)(GLenum mode,GLint first,GLsizei count);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSINDIRECTPROC)(GLenum mode,const void *indirect);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSINSTANCEDPROC)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSINSTANCEDANGLEPROC)(GLenum mode,GLint first,GLsizei count,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSINSTANCEDARBPROC)(GLenum mode,GLint first,GLsizei count,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSINSTANCEDEXTPROC)(GLenum mode,GLint start,GLsizei count,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLDRAWARRAYSINSTANCEDNVPROC)(GLenum mode,GLint first,GLsizei count,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLDRAWBUFFERPROC)(GLenum buf);
typedef void (GL_APIENTRY * PFNGLDRAWBUFFERSPROC)(GLsizei n,const GLenum *bufs);
typedef void (GL_APIENTRY * PFNGLDRAWBUFFERSARBPROC)(GLsizei n,const GLenum *bufs);
typedef void (GL_APIENTRY * PFNGLDRAWBUFFERSATIPROC)(GLsizei n,const GLenum *bufs);
typedef void (GL_APIENTRY * PFNGLDRAWBUFFERSEXTPROC)(GLsizei n,const GLenum *bufs);
typedef void (GL_APIENTRY * PFNGLDRAWBUFFERSINDEXEDEXTPROC)(GLint n,const GLenum *location,const GLint *indices);
typedef void (GL_APIENTRY * PFNGLDRAWBUFFERSNVPROC)(GLsizei n,const GLenum *bufs);
typedef void (GL_APIENTRY * PFNGLDRAWCOMMANDSADDRESSNVPROC)(GLenum primitiveMode,const GLuint64 *indirects,const GLsizei *sizes,GLuint count);
typedef void (GL_APIENTRY * PFNGLDRAWCOMMANDSNVPROC)(GLenum primitiveMode,GLuint buffer,const GLintptr *indirects,const GLsizei *sizes,GLuint count);
typedef void (GL_APIENTRY * PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC)(const GLuint64 *indirects,const GLsizei *sizes,const GLuint *states,const GLuint *fbos,GLuint count);
typedef void (GL_APIENTRY * PFNGLDRAWCOMMANDSSTATESNVPROC)(GLuint buffer,const GLintptr *indirects,const GLsizei *sizes,const GLuint *states,const GLuint *fbos,GLuint count);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTARRAYAPPLEPROC)(GLenum mode,GLint first,GLsizei count);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTARRAYATIPROC)(GLenum mode,GLsizei count);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSBASEVERTEXPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLint basevertex);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSBASEVERTEXEXTPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLint basevertex);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSBASEVERTEXOESPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLint basevertex);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINDIRECTPROC)(GLenum mode,GLenum type,const void *indirect);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei instancecount);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDANGLEPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDARBPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei instancecount,GLuint baseinstance);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei instancecount,GLuint baseinstance);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei instancecount,GLint basevertex);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei instancecount,GLint basevertex);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei instancecount,GLint basevertex);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDEXTPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLDRAWELEMENTSINSTANCEDNVPROC)(GLenum mode,GLsizei count,GLenum type,const void *indices,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLDRAWMESHARRAYSSUNPROC)(GLenum mode,GLint first,GLsizei count,GLsizei width);
typedef void (GL_APIENTRY * PFNGLDRAWMESHTASKSNVPROC)(GLuint first,GLuint count);
typedef void (GL_APIENTRY * PFNGLDRAWMESHTASKSINDIRECTNVPROC)(GLintptr indirect);
typedef void (GL_APIENTRY * PFNGLDRAWPIXELSPROC)(GLsizei width,GLsizei height,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum mode,GLuint start,GLuint end,GLint first,GLsizei count);
typedef void (GL_APIENTRY * PFNGLDRAWRANGEELEMENTARRAYATIPROC)(GLenum mode,GLuint start,GLuint end,GLsizei count);
typedef void (GL_APIENTRY * PFNGLDRAWRANGEELEMENTSPROC)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void *indices);
typedef void (GL_APIENTRY * PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void *indices,GLint basevertex);
typedef void (GL_APIENTRY * PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void *indices,GLint basevertex);
typedef void (GL_APIENTRY * PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void *indices,GLint basevertex);
typedef void (GL_APIENTRY * PFNGLDRAWRANGEELEMENTSEXTPROC)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const void *indices);
typedef void (GL_APIENTRY * PFNGLDRAWTEXFOESPROC)(GLfloat x,GLfloat y,GLfloat z,GLfloat width,GLfloat height);
typedef void (GL_APIENTRY * PFNGLDRAWTEXFVOESPROC)(const GLfloat *coords);
typedef void (GL_APIENTRY * PFNGLDRAWTEXIOESPROC)(GLint x,GLint y,GLint z,GLint width,GLint height);
typedef void (GL_APIENTRY * PFNGLDRAWTEXIVOESPROC)(const GLint *coords);
typedef void (GL_APIENTRY * PFNGLDRAWTEXSOESPROC)(GLshort x,GLshort y,GLshort z,GLshort width,GLshort height);
typedef void (GL_APIENTRY * PFNGLDRAWTEXSVOESPROC)(const GLshort *coords);
typedef void (GL_APIENTRY * PFNGLDRAWTEXTURENVPROC)(GLuint texture,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1);
typedef void (GL_APIENTRY * PFNGLDRAWTEXXOESPROC)(GLfixed x,GLfixed y,GLfixed z,GLfixed width,GLfixed height);
typedef void (GL_APIENTRY * PFNGLDRAWTEXXVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLDRAWTRANSFORMFEEDBACKPROC)(GLenum mode,GLuint id);
typedef void (GL_APIENTRY * PFNGLDRAWTRANSFORMFEEDBACKEXTPROC)(GLenum mode,GLuint id);
typedef void (GL_APIENTRY * PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)(GLenum mode,GLuint id,GLsizei instancecount);
typedef void (GL_APIENTRY * PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC)(GLenum mode,GLuint id,GLsizei instancecount);
typedef void (GL_APIENTRY * PFNGLDRAWTRANSFORMFEEDBACKNVPROC)(GLenum mode,GLuint id);
typedef void (GL_APIENTRY * PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)(GLenum mode,GLuint id,GLuint stream);
typedef void (GL_APIENTRY * PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount);
typedef void (GL_APIENTRY * PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC)(GLenum target,GLeglImageOES image);
typedef void (GL_APIENTRY * PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC)(GLenum target,GLeglImageOES image,const GLint* attrib_list);
typedef void (GL_APIENTRY * PFNGLEGLIMAGETARGETTEXTURE2DOESPROC)(GLenum target,GLeglImageOES image);
typedef void (GL_APIENTRY * PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC)(GLuint texture,GLeglImageOES image,const GLint* attrib_list);
typedef void (GL_APIENTRY * PFNGLEDGEFLAGPROC)(GLboolean flag);
typedef void (GL_APIENTRY * PFNGLEDGEFLAGFORMATNVPROC)(GLsizei stride);
typedef void (GL_APIENTRY * PFNGLEDGEFLAGPOINTERPROC)(GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLEDGEFLAGPOINTEREXTPROC)(GLsizei stride,GLsizei count,const GLboolean *pointer);
typedef void (GL_APIENTRY * PFNGLEDGEFLAGPOINTERLISTIBMPROC)(GLint stride,const GLboolean **pointer,GLint ptrstride);
typedef void (GL_APIENTRY * PFNGLEDGEFLAGVPROC)(const GLboolean *flag);
typedef void (GL_APIENTRY * PFNGLELEMENTPOINTERAPPLEPROC)(GLenum type,const void *pointer);
typedef void (GL_APIENTRY * PFNGLELEMENTPOINTERATIPROC)(GLenum type,const void *pointer);
typedef void (GL_APIENTRY * PFNGLENABLEPROC)(GLenum cap);
typedef void (GL_APIENTRY * PFNGLENABLECLIENTSTATEPROC)(GLenum array);
typedef void (GL_APIENTRY * PFNGLENABLECLIENTSTATEINDEXEDEXTPROC)(GLenum array,GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLECLIENTSTATEIEXTPROC)(GLenum array,GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLEDRIVERCONTROLQCOMPROC)(GLuint driverControl);
typedef void (GL_APIENTRY * PFNGLENABLEINDEXEDEXTPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLEVARIANTCLIENTSTATEEXTPROC)(GLuint id);
typedef void (GL_APIENTRY * PFNGLENABLEVERTEXARRAYATTRIBPROC)(GLuint vaobj,GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLEVERTEXARRAYATTRIBEXTPROC)(GLuint vaobj,GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLEVERTEXARRAYEXTPROC)(GLuint vaobj,GLenum array);
typedef void (GL_APIENTRY * PFNGLENABLEVERTEXATTRIBAPPLEPROC)(GLuint index,GLenum pname);
typedef void (GL_APIENTRY * PFNGLENABLEVERTEXATTRIBARRAYPROC)(GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLEVERTEXATTRIBARRAYARBPROC)(GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLEIPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLEIEXTPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLEINVPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLENABLEIOESPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLENDPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDCONDITIONALRENDERPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDCONDITIONALRENDERNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDCONDITIONALRENDERNVXPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDFRAGMENTSHADERATIPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDLISTPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDOCCLUSIONQUERYNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDPERFMONITORAMDPROC)(GLuint monitor);
typedef void (GL_APIENTRY * PFNGLENDPERFQUERYINTELPROC)(GLuint queryHandle);
typedef void (GL_APIENTRY * PFNGLENDQUERYPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLENDQUERYARBPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLENDQUERYEXTPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLENDQUERYINDEXEDPROC)(GLenum target,GLuint index);
typedef void (GL_APIENTRY * PFNGLENDTILINGQCOMPROC)(GLbitfield preserveMask);
typedef void (GL_APIENTRY * PFNGLENDTRANSFORMFEEDBACKPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDTRANSFORMFEEDBACKEXTPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDTRANSFORMFEEDBACKNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDVERTEXSHADEREXTPROC)(void);
typedef void (GL_APIENTRY * PFNGLENDVIDEOCAPTURENVPROC)(GLuint video_capture_slot);
typedef void (GL_APIENTRY * PFNGLEVALCOORD1DPROC)(GLdouble u);
typedef void (GL_APIENTRY * PFNGLEVALCOORD1DVPROC)(const GLdouble *u);
typedef void (GL_APIENTRY * PFNGLEVALCOORD1FPROC)(GLfloat u);
typedef void (GL_APIENTRY * PFNGLEVALCOORD1FVPROC)(const GLfloat *u);
typedef void (GL_APIENTRY * PFNGLEVALCOORD1XOESPROC)(GLfixed u);
typedef void (GL_APIENTRY * PFNGLEVALCOORD1XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLEVALCOORD2DPROC)(GLdouble u,GLdouble v);
typedef void (GL_APIENTRY * PFNGLEVALCOORD2DVPROC)(const GLdouble *u);
typedef void (GL_APIENTRY * PFNGLEVALCOORD2FPROC)(GLfloat u,GLfloat v);
typedef void (GL_APIENTRY * PFNGLEVALCOORD2FVPROC)(const GLfloat *u);
typedef void (GL_APIENTRY * PFNGLEVALCOORD2XOESPROC)(GLfixed u,GLfixed v);
typedef void (GL_APIENTRY * PFNGLEVALCOORD2XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLEVALMAPSNVPROC)(GLenum target,GLenum mode);
typedef void (GL_APIENTRY * PFNGLEVALMESH1PROC)(GLenum mode,GLint i1,GLint i2);
typedef void (GL_APIENTRY * PFNGLEVALMESH2PROC)(GLenum mode,GLint i1,GLint i2,GLint j1,GLint j2);
typedef void (GL_APIENTRY * PFNGLEVALPOINT1PROC)(GLint i);
typedef void (GL_APIENTRY * PFNGLEVALPOINT2PROC)(GLint i,GLint j);
typedef void (GL_APIENTRY * PFNGLEVALUATEDEPTHVALUESARBPROC)(void);
typedef void (GL_APIENTRY * PFNGLEXECUTEPROGRAMNVPROC)(GLenum target,GLuint id,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLEXTGETBUFFERPOINTERVQCOMPROC)(GLenum target,void **params);
typedef void (GL_APIENTRY * PFNGLEXTGETBUFFERSQCOMPROC)(GLuint *buffers,GLint maxBuffers,GLint *numBuffers);
typedef void (GL_APIENTRY * PFNGLEXTGETFRAMEBUFFERSQCOMPROC)(GLuint *framebuffers,GLint maxFramebuffers,GLint *numFramebuffers);
typedef void (GL_APIENTRY * PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC)(GLuint program,GLenum shadertype,GLchar *source,GLint *length);
typedef void (GL_APIENTRY * PFNGLEXTGETPROGRAMSQCOMPROC)(GLuint *programs,GLint maxPrograms,GLint *numPrograms);
typedef void (GL_APIENTRY * PFNGLEXTGETRENDERBUFFERSQCOMPROC)(GLuint *renderbuffers,GLint maxRenderbuffers,GLint *numRenderbuffers);
typedef void (GL_APIENTRY * PFNGLEXTGETSHADERSQCOMPROC)(GLuint *shaders,GLint maxShaders,GLint *numShaders);
typedef void (GL_APIENTRY * PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC)(GLuint texture,GLenum face,GLint level,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLEXTGETTEXSUBIMAGEQCOMPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,void *texels);
typedef void (GL_APIENTRY * PFNGLEXTGETTEXTURESQCOMPROC)(GLuint *textures,GLint maxTextures,GLint *numTextures);
typedef GLboolean (GL_APIENTRY * PFNGLEXTISPROGRAMBINARYQCOMPROC)(GLuint program);
typedef void (GL_APIENTRY * PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC)(GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLEXTRACTCOMPONENTEXTPROC)(GLuint res,GLuint src,GLuint num);
typedef void (GL_APIENTRY * PFNGLFEEDBACKBUFFERPROC)(GLsizei size,GLenum type,GLfloat *buffer);
typedef void (GL_APIENTRY * PFNGLFEEDBACKBUFFERXOESPROC)(GLsizei n,GLenum type,const GLfixed *buffer);
typedef GLsync (GL_APIENTRY * PFNGLFENCESYNCPROC)(GLenum condition,GLbitfield flags);
typedef GLsync (GL_APIENTRY * PFNGLFENCESYNCAPPLEPROC)(GLenum condition,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLFINALCOMBINERINPUTNVPROC)(GLenum variable,GLenum input,GLenum mapping,GLenum componentUsage);
typedef void (GL_APIENTRY * PFNGLFINISHPROC)(void);
typedef GLint (GL_APIENTRY * PFNGLFINISHASYNCSGIXPROC)(GLuint *markerp);
typedef void (GL_APIENTRY * PFNGLFINISHFENCEAPPLEPROC)(GLuint fence);
typedef void (GL_APIENTRY * PFNGLFINISHFENCENVPROC)(GLuint fence);
typedef void (GL_APIENTRY * PFNGLFINISHOBJECTAPPLEPROC)(GLenum object,GLint name);
typedef void (GL_APIENTRY * PFNGLFINISHTEXTURESUNXPROC)(void);
typedef void (GL_APIENTRY * PFNGLFLUSHPROC)(void);
typedef void (GL_APIENTRY * PFNGLFLUSHMAPPEDBUFFERRANGEPROC)(GLenum target,GLintptr offset,GLsizeiptr length);
typedef void (GL_APIENTRY * PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC)(GLenum target,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC)(GLenum target,GLintptr offset,GLsizeiptr length);
typedef void (GL_APIENTRY * PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC)(GLuint buffer,GLintptr offset,GLsizeiptr length);
typedef void (GL_APIENTRY * PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC)(GLuint buffer,GLintptr offset,GLsizeiptr length);
typedef void (GL_APIENTRY * PFNGLFLUSHPIXELDATARANGENVPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLFLUSHRASTERSGIXPROC)(void);
typedef void (GL_APIENTRY * PFNGLFLUSHSTATICDATAIBMPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC)(GLsizei length,void *pointer);
typedef void (GL_APIENTRY * PFNGLFLUSHVERTEXARRAYRANGENVPROC)(void);
typedef void (GL_APIENTRY * PFNGLFOGCOORDFORMATNVPROC)(GLenum type,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLFOGCOORDPOINTERPROC)(GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLFOGCOORDPOINTEREXTPROC)(GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLFOGCOORDPOINTERLISTIBMPROC)(GLenum type,GLint stride,const void **pointer,GLint ptrstride);
typedef void (GL_APIENTRY * PFNGLFOGCOORDDPROC)(GLdouble coord);
typedef void (GL_APIENTRY * PFNGLFOGCOORDDEXTPROC)(GLdouble coord);
typedef void (GL_APIENTRY * PFNGLFOGCOORDDVPROC)(const GLdouble *coord);
typedef void (GL_APIENTRY * PFNGLFOGCOORDDVEXTPROC)(const GLdouble *coord);
typedef void (GL_APIENTRY * PFNGLFOGCOORDFPROC)(GLfloat coord);
typedef void (GL_APIENTRY * PFNGLFOGCOORDFEXTPROC)(GLfloat coord);
typedef void (GL_APIENTRY * PFNGLFOGCOORDFVPROC)(const GLfloat *coord);
typedef void (GL_APIENTRY * PFNGLFOGCOORDFVEXTPROC)(const GLfloat *coord);
typedef void (GL_APIENTRY * PFNGLFOGCOORDHNVPROC)(GLhalfNV fog);
typedef void (GL_APIENTRY * PFNGLFOGCOORDHVNVPROC)(const GLhalfNV *fog);
typedef void (GL_APIENTRY * PFNGLFOGFUNCSGISPROC)(GLsizei n,const GLfloat *points);
typedef void (GL_APIENTRY * PFNGLFOGFPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLFOGFVPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLFOGIPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLFOGIVPROC)(GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLFOGXPROC)(GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLFOGXOESPROC)(GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLFOGXVPROC)(GLenum pname,const GLfixed *param);
typedef void (GL_APIENTRY * PFNGLFOGXVOESPROC)(GLenum pname,const GLfixed *param);
typedef void (GL_APIENTRY * PFNGLFRAGMENTCOLORMATERIALSGIXPROC)(GLenum face,GLenum mode);
typedef void (GL_APIENTRY * PFNGLFRAGMENTCOVERAGECOLORNVPROC)(GLuint color);
typedef void (GL_APIENTRY * PFNGLFRAGMENTLIGHTMODELFSGIXPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLFRAGMENTLIGHTMODELFVSGIXPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLFRAGMENTLIGHTMODELISGIXPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLFRAGMENTLIGHTMODELIVSGIXPROC)(GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLFRAGMENTLIGHTFSGIXPROC)(GLenum light,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLFRAGMENTLIGHTFVSGIXPROC)(GLenum light,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLFRAGMENTLIGHTISGIXPROC)(GLenum light,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLFRAGMENTLIGHTIVSGIXPROC)(GLenum light,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLFRAGMENTMATERIALFSGIXPROC)(GLenum face,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLFRAGMENTMATERIALFVSGIXPROC)(GLenum face,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLFRAGMENTMATERIALISGIXPROC)(GLenum face,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLFRAGMENTMATERIALIVSGIXPROC)(GLenum face,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLFRAMETERMINATORGREMEDYPROC)(void);
typedef void (GL_APIENTRY * PFNGLFRAMEZOOMSGIXPROC)(GLint factor);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC)(GLuint framebuffer,GLenum mode);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC)(GLuint framebuffer,GLsizei n,const GLenum *bufs);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC)(void);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC)(void);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC)(GLuint framebuffer,GLuint numLayers,GLuint focalPointsPerLayer,GLuint requestedFeatures,GLuint *providedFeatures);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC)(GLuint framebuffer,GLuint layer,GLuint focalPoint,GLfloat focalX,GLfloat focalY,GLfloat gainX,GLfloat gainY,GLfloat foveaArea);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERPARAMETERIPROC)(GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC)(GLuint target,GLsizei size);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERREADBUFFEREXTPROC)(GLuint framebuffer,GLenum mode);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERRENDERBUFFERPROC)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERRENDERBUFFEROESPROC)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)(GLenum target,GLuint start,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLenum target,GLuint start,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC)(GLenum target,GLuint numsamples,GLuint pixelindex,const GLfloat *values);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERSHADINGRATEEXTPROC)(GLenum target,GLenum attachment,GLuint texture,GLint baseLayer,GLsizei numLayers,GLsizei texelWidth,GLsizei texelHeight);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTUREPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE1DPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE1DEXTPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE2DPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE2DEXTPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint xscale,GLint yscale);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLsizei samples);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE2DOESPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE3DPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE3DEXTPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURE3DOESPROC)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTUREARBPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTUREEXTPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTUREFACEARBPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLenum face);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURELAYERPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURELAYERARBPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer,GLint xscale,GLint yscale);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLsizei samples,GLint baseViewIndex,GLsizei numViews);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint baseViewIndex,GLsizei numViews);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERTEXTUREOESPROC)(GLenum target,GLenum attachment,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLFREEOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (GL_APIENTRY * PFNGLFRONTFACEPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLFRUSTUMPROC)(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar);
typedef void (GL_APIENTRY * PFNGLFRUSTUMFPROC)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f);
typedef void (GL_APIENTRY * PFNGLFRUSTUMFOESPROC)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f);
typedef void (GL_APIENTRY * PFNGLFRUSTUMXPROC)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f);
typedef void (GL_APIENTRY * PFNGLFRUSTUMXOESPROC)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f);
typedef GLuint (GL_APIENTRY * PFNGLGENASYNCMARKERSSGIXPROC)(GLsizei range);
typedef void (GL_APIENTRY * PFNGLGENBUFFERSPROC)(GLsizei n,GLuint *buffers);
typedef void (GL_APIENTRY * PFNGLGENBUFFERSARBPROC)(GLsizei n,GLuint *buffers);
typedef void (GL_APIENTRY * PFNGLGENFENCESAPPLEPROC)(GLsizei n,GLuint *fences);
typedef void (GL_APIENTRY * PFNGLGENFENCESNVPROC)(GLsizei n,GLuint *fences);
typedef GLuint (GL_APIENTRY * PFNGLGENFRAGMENTSHADERSATIPROC)(GLuint range);
typedef void (GL_APIENTRY * PFNGLGENFRAMEBUFFERSPROC)(GLsizei n,GLuint *framebuffers);
typedef void (GL_APIENTRY * PFNGLGENFRAMEBUFFERSEXTPROC)(GLsizei n,GLuint *framebuffers);
typedef void (GL_APIENTRY * PFNGLGENFRAMEBUFFERSOESPROC)(GLsizei n,GLuint *framebuffers);
typedef GLuint (GL_APIENTRY * PFNGLGENLISTSPROC)(GLsizei range);
typedef void (GL_APIENTRY * PFNGLGENNAMESAMDPROC)(GLenum identifier,GLuint num,GLuint *names);
typedef void (GL_APIENTRY * PFNGLGENOCCLUSIONQUERIESNVPROC)(GLsizei n,GLuint *ids);
typedef GLuint (GL_APIENTRY * PFNGLGENPATHSNVPROC)(GLsizei range);
typedef void (GL_APIENTRY * PFNGLGENPERFMONITORSAMDPROC)(GLsizei n,GLuint *monitors);
typedef void (GL_APIENTRY * PFNGLGENPROGRAMPIPELINESPROC)(GLsizei n,GLuint *pipelines);
typedef void (GL_APIENTRY * PFNGLGENPROGRAMPIPELINESEXTPROC)(GLsizei n,GLuint *pipelines);
typedef void (GL_APIENTRY * PFNGLGENPROGRAMSARBPROC)(GLsizei n,GLuint *programs);
typedef void (GL_APIENTRY * PFNGLGENPROGRAMSNVPROC)(GLsizei n,GLuint *programs);
typedef void (GL_APIENTRY * PFNGLGENQUERIESPROC)(GLsizei n,GLuint *ids);
typedef void (GL_APIENTRY * PFNGLGENQUERIESARBPROC)(GLsizei n,GLuint *ids);
typedef void (GL_APIENTRY * PFNGLGENQUERIESEXTPROC)(GLsizei n,GLuint *ids);
typedef void (GL_APIENTRY * PFNGLGENQUERYRESOURCETAGNVPROC)(GLsizei n,GLint *tagIds);
typedef void (GL_APIENTRY * PFNGLGENRENDERBUFFERSPROC)(GLsizei n,GLuint *renderbuffers);
typedef void (GL_APIENTRY * PFNGLGENRENDERBUFFERSEXTPROC)(GLsizei n,GLuint *renderbuffers);
typedef void (GL_APIENTRY * PFNGLGENRENDERBUFFERSOESPROC)(GLsizei n,GLuint *renderbuffers);
typedef void (GL_APIENTRY * PFNGLGENSAMPLERSPROC)(GLsizei count,GLuint *samplers);
typedef void (GL_APIENTRY * PFNGLGENSEMAPHORESEXTPROC)(GLsizei n,GLuint *semaphores);
typedef GLuint (GL_APIENTRY * PFNGLGENSYMBOLSEXTPROC)(GLenum datatype,GLenum storagetype,GLenum range,GLuint components);
typedef void (GL_APIENTRY * PFNGLGENTEXTURESPROC)(GLsizei n,GLuint *textures);
typedef void (GL_APIENTRY * PFNGLGENTEXTURESEXTPROC)(GLsizei n,GLuint *textures);
typedef void (GL_APIENTRY * PFNGLGENTRANSFORMFEEDBACKSPROC)(GLsizei n,GLuint *ids);
typedef void (GL_APIENTRY * PFNGLGENTRANSFORMFEEDBACKSNVPROC)(GLsizei n,GLuint *ids);
typedef void (GL_APIENTRY * PFNGLGENVERTEXARRAYSPROC)(GLsizei n,GLuint *arrays);
typedef void (GL_APIENTRY * PFNGLGENVERTEXARRAYSAPPLEPROC)(GLsizei n,GLuint *arrays);
typedef void (GL_APIENTRY * PFNGLGENVERTEXARRAYSOESPROC)(GLsizei n,GLuint *arrays);
typedef GLuint (GL_APIENTRY * PFNGLGENVERTEXSHADERSEXTPROC)(GLuint range);
typedef void (GL_APIENTRY * PFNGLGENERATEMIPMAPPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLGENERATEMIPMAPEXTPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLGENERATEMIPMAPOESPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLGENERATEMULTITEXMIPMAPEXTPROC)(GLenum texunit,GLenum target);
typedef void (GL_APIENTRY * PFNGLGENERATETEXTUREMIPMAPPROC)(GLuint texture);
typedef void (GL_APIENTRY * PFNGLGENERATETEXTUREMIPMAPEXTPROC)(GLuint texture,GLenum target);
typedef void (GL_APIENTRY * PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)(GLuint program,GLuint bufferIndex,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETACTIVEATTRIBPROC)(GLuint program,GLuint index,GLsizei bufSize,GLsizei *length,GLint *size,GLenum *type,GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETACTIVEATTRIBARBPROC)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei *length,GLint *size,GLenum *type,GLcharARB *name);
typedef void (GL_APIENTRY * PFNGLGETACTIVESUBROUTINENAMEPROC)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufSize,GLsizei *length,GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufSize,GLsizei *length,GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint *values);
typedef void (GL_APIENTRY * PFNGLGETACTIVEUNIFORMPROC)(GLuint program,GLuint index,GLsizei bufSize,GLsizei *length,GLint *size,GLenum *type,GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETACTIVEUNIFORMARBPROC)(GLhandleARB programObj,GLuint index,GLsizei maxLength,GLsizei *length,GLint *size,GLenum *type,GLcharARB *name);
typedef void (GL_APIENTRY * PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei *length,GLchar *uniformBlockName);
typedef void (GL_APIENTRY * PFNGLGETACTIVEUNIFORMBLOCKIVPROC)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETACTIVEUNIFORMNAMEPROC)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei *length,GLchar *uniformName);
typedef void (GL_APIENTRY * PFNGLGETACTIVEUNIFORMSIVPROC)(GLuint program,GLsizei uniformCount,const GLuint *uniformIndices,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETACTIVEVARYINGNVPROC)(GLuint program,GLuint index,GLsizei bufSize,GLsizei *length,GLsizei *size,GLenum *type,GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETARRAYOBJECTFVATIPROC)(GLenum array,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETARRAYOBJECTIVATIPROC)(GLenum array,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETATTACHEDOBJECTSARBPROC)(GLhandleARB containerObj,GLsizei maxCount,GLsizei *count,GLhandleARB *obj);
typedef void (GL_APIENTRY * PFNGLGETATTACHEDSHADERSPROC)(GLuint program,GLsizei maxCount,GLsizei *count,GLuint *shaders);
typedef GLint (GL_APIENTRY * PFNGLGETATTRIBLOCATIONPROC)(GLuint program,const GLchar *name);
typedef GLint (GL_APIENTRY * PFNGLGETATTRIBLOCATIONARBPROC)(GLhandleARB programObj,const GLcharARB *name);
typedef void (GL_APIENTRY * PFNGLGETBOOLEANINDEXEDVEXTPROC)(GLenum target,GLuint index,GLboolean *data);
typedef void (GL_APIENTRY * PFNGLGETBOOLEANI_VPROC)(GLenum target,GLuint index,GLboolean *data);
typedef void (GL_APIENTRY * PFNGLGETBOOLEANVPROC)(GLenum pname,GLboolean *data);
typedef void (GL_APIENTRY * PFNGLGETBUFFERPARAMETERI64VPROC)(GLenum target,GLenum pname,GLint64 *params);
typedef void (GL_APIENTRY * PFNGLGETBUFFERPARAMETERIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETBUFFERPARAMETERIVARBPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETBUFFERPARAMETERUI64VNVPROC)(GLenum target,GLenum pname,GLuint64EXT *params);
typedef void (GL_APIENTRY * PFNGLGETBUFFERPOINTERVPROC)(GLenum target,GLenum pname,void **params);
typedef void (GL_APIENTRY * PFNGLGETBUFFERPOINTERVARBPROC)(GLenum target,GLenum pname,void **params);
typedef void (GL_APIENTRY * PFNGLGETBUFFERPOINTERVOESPROC)(GLenum target,GLenum pname,void **params);
typedef void (GL_APIENTRY * PFNGLGETBUFFERSUBDATAPROC)(GLenum target,GLintptr offset,GLsizeiptr size,void *data);
typedef void (GL_APIENTRY * PFNGLGETBUFFERSUBDATAARBPROC)(GLenum target,GLintptrARB offset,GLsizeiptrARB size,void *data);
typedef void (GL_APIENTRY * PFNGLGETCLIPPLANEPROC)(GLenum plane,GLdouble *equation);
typedef void (GL_APIENTRY * PFNGLGETCLIPPLANEFPROC)(GLenum plane,GLfloat *equation);
typedef void (GL_APIENTRY * PFNGLGETCLIPPLANEFOESPROC)(GLenum plane,GLfloat *equation);
typedef void (GL_APIENTRY * PFNGLGETCLIPPLANEXPROC)(GLenum plane,GLfixed *equation);
typedef void (GL_APIENTRY * PFNGLGETCLIPPLANEXOESPROC)(GLenum plane,GLfixed *equation);
typedef void (GL_APIENTRY * PFNGLGETCOLORTABLEPROC)(GLenum target,GLenum format,GLenum type,void *table);
typedef void (GL_APIENTRY * PFNGLGETCOLORTABLEEXTPROC)(GLenum target,GLenum format,GLenum type,void *data);
typedef void (GL_APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVEXTPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETCOLORTABLEPARAMETERFVSGIPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVEXTPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETCOLORTABLEPARAMETERIVSGIPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETCOLORTABLESGIPROC)(GLenum target,GLenum format,GLenum type,void *table);
typedef void (GL_APIENTRY * PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC)(GLenum stage,GLenum portion,GLenum variable,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC)(GLenum stage,GLenum portion,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC)(GLenum stage,GLenum portion,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC)(GLenum stage,GLenum pname,GLfloat *params);
typedef GLuint (GL_APIENTRY * PFNGLGETCOMMANDHEADERNVPROC)(GLenum tokenID,GLuint size);
typedef void (GL_APIENTRY * PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC)(GLenum texunit,GLenum target,GLint lod,void *img);
typedef void (GL_APIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEPROC)(GLenum target,GLint level,void *img);
typedef void (GL_APIENTRY * PFNGLGETCOMPRESSEDTEXIMAGEARBPROC)(GLenum target,GLint level,void *img);
typedef void (GL_APIENTRY * PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC)(GLuint texture,GLint level,GLsizei bufSize,void *pixels);
typedef void (GL_APIENTRY * PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC)(GLuint texture,GLenum target,GLint lod,void *img);
typedef void (GL_APIENTRY * PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei bufSize,void *pixels);
typedef void (GL_APIENTRY * PFNGLGETCONVOLUTIONFILTERPROC)(GLenum target,GLenum format,GLenum type,void *image);
typedef void (GL_APIENTRY * PFNGLGETCONVOLUTIONFILTEREXTPROC)(GLenum target,GLenum format,GLenum type,void *image);
typedef void (GL_APIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETCONVOLUTIONPARAMETERXVOESPROC)(GLenum target,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETCOVERAGEMODULATIONTABLENVPROC)(GLsizei bufSize,GLfloat *v);
typedef GLuint (GL_APIENTRY * PFNGLGETDEBUGMESSAGELOGPROC)(GLuint count,GLsizei bufSize,GLenum *sources,GLenum *types,GLuint *ids,GLenum *severities,GLsizei *lengths,GLchar *messageLog);
typedef GLuint (GL_APIENTRY * PFNGLGETDEBUGMESSAGELOGAMDPROC)(GLuint count,GLsizei bufSize,GLenum *categories,GLenum *severities,GLuint *ids,GLsizei *lengths,GLchar *message);
typedef GLuint (GL_APIENTRY * PFNGLGETDEBUGMESSAGELOGARBPROC)(GLuint count,GLsizei bufSize,GLenum *sources,GLenum *types,GLuint *ids,GLenum *severities,GLsizei *lengths,GLchar *messageLog);
typedef GLuint (GL_APIENTRY * PFNGLGETDEBUGMESSAGELOGKHRPROC)(GLuint count,GLsizei bufSize,GLenum *sources,GLenum *types,GLuint *ids,GLenum *severities,GLsizei *lengths,GLchar *messageLog);
typedef void (GL_APIENTRY * PFNGLGETDETAILTEXFUNCSGISPROC)(GLenum target,GLfloat *points);
typedef void (GL_APIENTRY * PFNGLGETDOUBLEINDEXEDVEXTPROC)(GLenum target,GLuint index,GLdouble *data);
typedef void (GL_APIENTRY * PFNGLGETDOUBLEI_VPROC)(GLenum target,GLuint index,GLdouble *data);
typedef void (GL_APIENTRY * PFNGLGETDOUBLEI_VEXTPROC)(GLenum pname,GLuint index,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETDOUBLEVPROC)(GLenum pname,GLdouble *data);
typedef void (GL_APIENTRY * PFNGLGETDRIVERCONTROLSTRINGQCOMPROC)(GLuint driverControl,GLsizei bufSize,GLsizei *length,GLchar *driverControlString);
typedef void (GL_APIENTRY * PFNGLGETDRIVERCONTROLSQCOMPROC)(GLint *num,GLsizei size,GLuint *driverControls);
typedef GLenum (GL_APIENTRY * PFNGLGETERRORPROC)(void);
typedef void (GL_APIENTRY * PFNGLGETFENCEIVNVPROC)(GLuint fence,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC)(GLenum variable,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC)(GLenum variable,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETFIRSTPERFQUERYIDINTELPROC)(GLuint *queryId);
typedef void (GL_APIENTRY * PFNGLGETFIXEDVPROC)(GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETFIXEDVOESPROC)(GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETFLOATINDEXEDVEXTPROC)(GLenum target,GLuint index,GLfloat *data);
typedef void (GL_APIENTRY * PFNGLGETFLOATI_VPROC)(GLenum target,GLuint index,GLfloat *data);
typedef void (GL_APIENTRY * PFNGLGETFLOATI_VEXTPROC)(GLenum pname,GLuint index,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETFLOATI_VNVPROC)(GLenum target,GLuint index,GLfloat *data);
typedef void (GL_APIENTRY * PFNGLGETFLOATI_VOESPROC)(GLenum target,GLuint index,GLfloat *data);
typedef void (GL_APIENTRY * PFNGLGETFLOATVPROC)(GLenum pname,GLfloat *data);
typedef void (GL_APIENTRY * PFNGLGETFOGFUNCSGISPROC)(GLfloat *points);
typedef GLint (GL_APIENTRY * PFNGLGETFRAGDATAINDEXPROC)(GLuint program,const GLchar *name);
typedef GLint (GL_APIENTRY * PFNGLGETFRAGDATAINDEXEXTPROC)(GLuint program,const GLchar *name);
typedef GLint (GL_APIENTRY * PFNGLGETFRAGDATALOCATIONPROC)(GLuint program,const GLchar *name);
typedef GLint (GL_APIENTRY * PFNGLGETFRAGDATALOCATIONEXTPROC)(GLuint program,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETFRAGMENTLIGHTFVSGIXPROC)(GLenum light,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETFRAGMENTLIGHTIVSGIXPROC)(GLenum light,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETFRAGMENTMATERIALFVSGIXPROC)(GLenum face,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETFRAGMENTMATERIALIVSGIXPROC)(GLenum face,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETFRAGMENTSHADINGRATESEXTPROC)(GLsizei samples,GLsizei maxCount,GLsizei *count,GLenum *shadingRates);
typedef void (GL_APIENTRY * PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLenum target,GLenum attachment,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLenum target,GLenum attachment,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC)(GLenum target,GLenum attachment,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC)(GLenum target,GLenum pname,GLuint numsamples,GLuint pixelindex,GLsizei size,GLfloat *values);
typedef void (GL_APIENTRY * PFNGLGETFRAMEBUFFERPARAMETERIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer,GLenum pname,GLint *params);
typedef GLsizei (GL_APIENTRY * PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC)(GLuint target);
typedef GLenum (GL_APIENTRY * PFNGLGETGRAPHICSRESETSTATUSPROC)(void);
typedef GLenum (GL_APIENTRY * PFNGLGETGRAPHICSRESETSTATUSARBPROC)(void);
typedef GLenum (GL_APIENTRY * PFNGLGETGRAPHICSRESETSTATUSEXTPROC)(void);
typedef GLenum (GL_APIENTRY * PFNGLGETGRAPHICSRESETSTATUSKHRPROC)(void);
typedef GLhandleARB (GL_APIENTRY * PFNGLGETHANDLEARBPROC)(GLenum pname);
typedef void (GL_APIENTRY * PFNGLGETHISTOGRAMPROC)(GLenum target,GLboolean reset,GLenum format,GLenum type,void *values);
typedef void (GL_APIENTRY * PFNGLGETHISTOGRAMEXTPROC)(GLenum target,GLboolean reset,GLenum format,GLenum type,void *values);
typedef void (GL_APIENTRY * PFNGLGETHISTOGRAMPARAMETERFVPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETHISTOGRAMPARAMETERFVEXTPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETHISTOGRAMPARAMETERIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETHISTOGRAMPARAMETERIVEXTPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETHISTOGRAMPARAMETERXVOESPROC)(GLenum target,GLenum pname,GLfixed *params);
typedef GLuint64 (GL_APIENTRY * PFNGLGETIMAGEHANDLEARBPROC)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format);
typedef GLuint64 (GL_APIENTRY * PFNGLGETIMAGEHANDLENVPROC)(GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum format);
typedef void (GL_APIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETINFOLOGARBPROC)(GLhandleARB obj,GLsizei maxLength,GLsizei *length,GLcharARB *infoLog);
typedef GLint (GL_APIENTRY * PFNGLGETINSTRUMENTSSGIXPROC)(void);
typedef void (GL_APIENTRY * PFNGLGETINTEGER64I_VPROC)(GLenum target,GLuint index,GLint64 *data);
typedef void (GL_APIENTRY * PFNGLGETINTEGER64VPROC)(GLenum pname,GLint64 *data);
typedef void (GL_APIENTRY * PFNGLGETINTEGER64VAPPLEPROC)(GLenum pname,GLint64 *params);
typedef void (GL_APIENTRY * PFNGLGETINTEGER64VEXTPROC)(GLenum pname,GLint64 *data);
typedef void (GL_APIENTRY * PFNGLGETINTEGERINDEXEDVEXTPROC)(GLenum target,GLuint index,GLint *data);
typedef void (GL_APIENTRY * PFNGLGETINTEGERI_VPROC)(GLenum target,GLuint index,GLint *data);
typedef void (GL_APIENTRY * PFNGLGETINTEGERI_VEXTPROC)(GLenum target,GLuint index,GLint *data);
typedef void (GL_APIENTRY * PFNGLGETINTEGERUI64I_VNVPROC)(GLenum value,GLuint index,GLuint64EXT *result);
typedef void (GL_APIENTRY * PFNGLGETINTEGERUI64VNVPROC)(GLenum value,GLuint64EXT *result);
typedef void (GL_APIENTRY * PFNGLGETINTEGERVPROC)(GLenum pname,GLint *data);
typedef void (GL_APIENTRY * PFNGLGETINTERNALFORMATSAMPLEIVNVPROC)(GLenum target,GLenum internalformat,GLsizei samples,GLenum pname,GLsizei count,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETINTERNALFORMATI64VPROC)(GLenum target,GLenum internalformat,GLenum pname,GLsizei count,GLint64 *params);
typedef void (GL_APIENTRY * PFNGLGETINTERNALFORMATIVPROC)(GLenum target,GLenum internalformat,GLenum pname,GLsizei count,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETINVARIANTBOOLEANVEXTPROC)(GLuint id,GLenum value,GLboolean *data);
typedef void (GL_APIENTRY * PFNGLGETINVARIANTFLOATVEXTPROC)(GLuint id,GLenum value,GLfloat *data);
typedef void (GL_APIENTRY * PFNGLGETINVARIANTINTEGERVEXTPROC)(GLuint id,GLenum value,GLint *data);
typedef void (GL_APIENTRY * PFNGLGETLIGHTFVPROC)(GLenum light,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETLIGHTIVPROC)(GLenum light,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETLIGHTXOESPROC)(GLenum light,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETLIGHTXVPROC)(GLenum light,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETLIGHTXVOESPROC)(GLenum light,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETLISTPARAMETERFVSGIXPROC)(GLuint list,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETLISTPARAMETERIVSGIXPROC)(GLuint list,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC)(GLuint id,GLenum value,GLboolean *data);
typedef void (GL_APIENTRY * PFNGLGETLOCALCONSTANTFLOATVEXTPROC)(GLuint id,GLenum value,GLfloat *data);
typedef void (GL_APIENTRY * PFNGLGETLOCALCONSTANTINTEGERVEXTPROC)(GLuint id,GLenum value,GLint *data);
typedef void (GL_APIENTRY * PFNGLGETMAPATTRIBPARAMETERFVNVPROC)(GLenum target,GLuint index,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETMAPATTRIBPARAMETERIVNVPROC)(GLenum target,GLuint index,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMAPCONTROLPOINTSNVPROC)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLboolean packed,void *points);
typedef void (GL_APIENTRY * PFNGLGETMAPPARAMETERFVNVPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETMAPPARAMETERIVNVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMAPDVPROC)(GLenum target,GLenum query,GLdouble *v);
typedef void (GL_APIENTRY * PFNGLGETMAPFVPROC)(GLenum target,GLenum query,GLfloat *v);
typedef void (GL_APIENTRY * PFNGLGETMAPIVPROC)(GLenum target,GLenum query,GLint *v);
typedef void (GL_APIENTRY * PFNGLGETMAPXVOESPROC)(GLenum target,GLenum query,GLfixed *v);
typedef void (GL_APIENTRY * PFNGLGETMATERIALFVPROC)(GLenum face,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETMATERIALIVPROC)(GLenum face,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMATERIALXOESPROC)(GLenum face,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLGETMATERIALXVPROC)(GLenum face,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETMATERIALXVOESPROC)(GLenum face,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC)(GLuint memory,GLenum pname,GLint first,GLsizei count,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC)(GLuint memoryObject,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMINMAXPROC)(GLenum target,GLboolean reset,GLenum format,GLenum type,void *values);
typedef void (GL_APIENTRY * PFNGLGETMINMAXEXTPROC)(GLenum target,GLboolean reset,GLenum format,GLenum type,void *values);
typedef void (GL_APIENTRY * PFNGLGETMINMAXPARAMETERFVPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETMINMAXPARAMETERFVEXTPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETMINMAXPARAMETERIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMINMAXPARAMETERIVEXTPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXENVFVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXENVIVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXGENDVEXTPROC)(GLenum texunit,GLenum coord,GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXGENFVEXTPROC)(GLenum texunit,GLenum coord,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXGENIVEXTPROC)(GLenum texunit,GLenum coord,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXIMAGEEXTPROC)(GLenum texunit,GLenum target,GLint level,GLenum format,GLenum type,void *pixels);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC)(GLenum texunit,GLenum target,GLint level,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXPARAMETERFVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETMULTITEXPARAMETERIVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETMULTISAMPLEFVPROC)(GLenum pname,GLuint index,GLfloat *val);
typedef void (GL_APIENTRY * PFNGLGETMULTISAMPLEFVNVPROC)(GLenum pname,GLuint index,GLfloat *val);
typedef void (GL_APIENTRY * PFNGLGETNAMEDBUFFERPARAMETERI64VPROC)(GLuint buffer,GLenum pname,GLint64 *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDBUFFERPARAMETERIVPROC)(GLuint buffer,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC)(GLuint buffer,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC)(GLuint buffer,GLenum pname,GLuint64EXT *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDBUFFERPOINTERVPROC)(GLuint buffer,GLenum pname,void **params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDBUFFERPOINTERVEXTPROC)(GLuint buffer,GLenum pname,void **params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDBUFFERSUBDATAPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,void *data);
typedef void (GL_APIENTRY * PFNGLGETNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,void *data);
typedef void (GL_APIENTRY * PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC)(GLuint framebuffer,GLenum pname,GLuint numsamples,GLuint pixelindex,GLsizei size,GLfloat *values);
typedef void (GL_APIENTRY * PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC)(GLuint framebuffer,GLenum attachment,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC)(GLuint framebuffer,GLenum pname,GLint *param);
typedef void (GL_APIENTRY * PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC)(GLuint framebuffer,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC)(GLuint program,GLenum target,GLuint index,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC)(GLuint program,GLenum target,GLuint index,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC)(GLuint program,GLenum target,GLuint index,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC)(GLuint program,GLenum target,GLuint index,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDPROGRAMSTRINGEXTPROC)(GLuint program,GLenum target,GLenum pname,void *string);
typedef void (GL_APIENTRY * PFNGLGETNAMEDPROGRAMIVEXTPROC)(GLuint program,GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC)(GLuint renderbuffer,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC)(GLuint renderbuffer,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNAMEDSTRINGARBPROC)(GLint namelen,const GLchar *name,GLsizei bufSize,GLint *stringlen,GLchar *string);
typedef void (GL_APIENTRY * PFNGLGETNAMEDSTRINGIVARBPROC)(GLint namelen,const GLchar *name,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNEXTPERFQUERYIDINTELPROC)(GLuint queryId,GLuint *nextQueryId);
typedef void (GL_APIENTRY * PFNGLGETOBJECTBUFFERFVATIPROC)(GLuint buffer,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETOBJECTBUFFERIVATIPROC)(GLuint buffer,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETOBJECTLABELPROC)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei *length,GLchar *label);
typedef void (GL_APIENTRY * PFNGLGETOBJECTLABELEXTPROC)(GLenum type,GLuint object,GLsizei bufSize,GLsizei *length,GLchar *label);
typedef void (GL_APIENTRY * PFNGLGETOBJECTLABELKHRPROC)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei *length,GLchar *label);
typedef void (GL_APIENTRY * PFNGLGETOBJECTPARAMETERFVARBPROC)(GLhandleARB obj,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETOBJECTPARAMETERIVAPPLEPROC)(GLenum objectType,GLuint name,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETOBJECTPARAMETERIVARBPROC)(GLhandleARB obj,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETOBJECTPTRLABELPROC)(const void *ptr,GLsizei bufSize,GLsizei *length,GLchar *label);
typedef void (GL_APIENTRY * PFNGLGETOBJECTPTRLABELKHRPROC)(const void *ptr,GLsizei bufSize,GLsizei *length,GLchar *label);
typedef void (GL_APIENTRY * PFNGLGETOCCLUSIONQUERYIVNVPROC)(GLuint id,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETOCCLUSIONQUERYUIVNVPROC)(GLuint id,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETPATHCOLORGENFVNVPROC)(GLenum color,GLenum pname,GLfloat *value);
typedef void (GL_APIENTRY * PFNGLGETPATHCOLORGENIVNVPROC)(GLenum color,GLenum pname,GLint *value);
typedef void (GL_APIENTRY * PFNGLGETPATHCOMMANDSNVPROC)(GLuint path,GLubyte *commands);
typedef void (GL_APIENTRY * PFNGLGETPATHCOORDSNVPROC)(GLuint path,GLfloat *coords);
typedef void (GL_APIENTRY * PFNGLGETPATHDASHARRAYNVPROC)(GLuint path,GLfloat *dashArray);
typedef GLfloat (GL_APIENTRY * PFNGLGETPATHLENGTHNVPROC)(GLuint path,GLsizei startSegment,GLsizei numSegments);
typedef void (GL_APIENTRY * PFNGLGETPATHMETRICRANGENVPROC)(GLbitfield metricQueryMask,GLuint firstPathName,GLsizei numPaths,GLsizei stride,GLfloat *metrics);
typedef void (GL_APIENTRY * PFNGLGETPATHMETRICSNVPROC)(GLbitfield metricQueryMask,GLsizei numPaths,GLenum pathNameType,const void *paths,GLuint pathBase,GLsizei stride,GLfloat *metrics);
typedef void (GL_APIENTRY * PFNGLGETPATHPARAMETERFVNVPROC)(GLuint path,GLenum pname,GLfloat *value);
typedef void (GL_APIENTRY * PFNGLGETPATHPARAMETERIVNVPROC)(GLuint path,GLenum pname,GLint *value);
typedef void (GL_APIENTRY * PFNGLGETPATHSPACINGNVPROC)(GLenum pathListMode,GLsizei numPaths,GLenum pathNameType,const void *paths,GLuint pathBase,GLfloat advanceScale,GLfloat kerningScale,GLenum transformType,GLfloat *returnedSpacing);
typedef void (GL_APIENTRY * PFNGLGETPATHTEXGENFVNVPROC)(GLenum texCoordSet,GLenum pname,GLfloat *value);
typedef void (GL_APIENTRY * PFNGLGETPATHTEXGENIVNVPROC)(GLenum texCoordSet,GLenum pname,GLint *value);
typedef void (GL_APIENTRY * PFNGLGETPERFCOUNTERINFOINTELPROC)(GLuint queryId,GLuint counterId,GLuint counterNameLength,GLchar *counterName,GLuint counterDescLength,GLchar *counterDesc,GLuint *counterOffset,GLuint *counterDataSize,GLuint *counterTypeEnum,GLuint *counterDataTypeEnum,GLuint64 *rawCounterMaxValue);
typedef void (GL_APIENTRY * PFNGLGETPERFMONITORCOUNTERDATAAMDPROC)(GLuint monitor,GLenum pname,GLsizei dataSize,GLuint *data,GLint *bytesWritten);
typedef void (GL_APIENTRY * PFNGLGETPERFMONITORCOUNTERINFOAMDPROC)(GLuint group,GLuint counter,GLenum pname,void *data);
typedef void (GL_APIENTRY * PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC)(GLuint group,GLuint counter,GLsizei bufSize,GLsizei *length,GLchar *counterString);
typedef void (GL_APIENTRY * PFNGLGETPERFMONITORCOUNTERSAMDPROC)(GLuint group,GLint *numCounters,GLint *maxActiveCounters,GLsizei counterSize,GLuint *counters);
typedef void (GL_APIENTRY * PFNGLGETPERFMONITORGROUPSTRINGAMDPROC)(GLuint group,GLsizei bufSize,GLsizei *length,GLchar *groupString);
typedef void (GL_APIENTRY * PFNGLGETPERFMONITORGROUPSAMDPROC)(GLint *numGroups,GLsizei groupsSize,GLuint *groups);
typedef void (GL_APIENTRY * PFNGLGETPERFQUERYDATAINTELPROC)(GLuint queryHandle,GLuint flags,GLsizei dataSize,void *data,GLuint *bytesWritten);
typedef void (GL_APIENTRY * PFNGLGETPERFQUERYIDBYNAMEINTELPROC)(GLchar *queryName,GLuint *queryId);
typedef void (GL_APIENTRY * PFNGLGETPERFQUERYINFOINTELPROC)(GLuint queryId,GLuint queryNameLength,GLchar *queryName,GLuint *dataSize,GLuint *noCounters,GLuint *noInstances,GLuint *capsMask);
typedef void (GL_APIENTRY * PFNGLGETPIXELMAPFVPROC)(GLenum map,GLfloat *values);
typedef void (GL_APIENTRY * PFNGLGETPIXELMAPUIVPROC)(GLenum map,GLuint *values);
typedef void (GL_APIENTRY * PFNGLGETPIXELMAPUSVPROC)(GLenum map,GLushort *values);
typedef void (GL_APIENTRY * PFNGLGETPIXELMAPXVPROC)(GLenum map,GLint size,GLfixed *values);
typedef void (GL_APIENTRY * PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC)(GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC)(GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETPOINTERINDEXEDVEXTPROC)(GLenum target,GLuint index,void **data);
typedef void (GL_APIENTRY * PFNGLGETPOINTERI_VEXTPROC)(GLenum pname,GLuint index,void **params);
typedef void (GL_APIENTRY * PFNGLGETPOINTERVPROC)(GLenum pname,void **params);
typedef void (GL_APIENTRY * PFNGLGETPOINTERVEXTPROC)(GLenum pname,void **params);
typedef void (GL_APIENTRY * PFNGLGETPOINTERVKHRPROC)(GLenum pname,void **params);
typedef void (GL_APIENTRY * PFNGLGETPOLYGONSTIPPLEPROC)(GLubyte *mask);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMBINARYPROC)(GLuint program,GLsizei bufSize,GLsizei *length,GLenum *binaryFormat,void *binary);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMBINARYOESPROC)(GLuint program,GLsizei bufSize,GLsizei *length,GLenum *binaryFormat,void *binary);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMENVPARAMETERIIVNVPROC)(GLenum target,GLuint index,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC)(GLenum target,GLuint index,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMENVPARAMETERDVARBPROC)(GLenum target,GLuint index,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMENVPARAMETERFVARBPROC)(GLenum target,GLuint index,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMINFOLOGPROC)(GLuint program,GLsizei bufSize,GLsizei *length,GLchar *infoLog);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMINTERFACEIVPROC)(GLuint program,GLenum programInterface,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC)(GLenum target,GLuint index,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC)(GLenum target,GLuint index,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC)(GLenum target,GLuint index,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC)(GLenum target,GLuint index,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC)(GLuint id,GLsizei len,const GLubyte *name,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC)(GLuint id,GLsizei len,const GLubyte *name,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMPARAMETERDVNVPROC)(GLenum target,GLuint index,GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMPARAMETERFVNVPROC)(GLenum target,GLuint index,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMPIPELINEINFOLOGPROC)(GLuint pipeline,GLsizei bufSize,GLsizei *length,GLchar *infoLog);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC)(GLuint pipeline,GLsizei bufSize,GLsizei *length,GLchar *infoLog);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMPIPELINEIVPROC)(GLuint pipeline,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMPIPELINEIVEXTPROC)(GLuint pipeline,GLenum pname,GLint *params);
typedef GLuint (GL_APIENTRY * PFNGLGETPROGRAMRESOURCEINDEXPROC)(GLuint program,GLenum programInterface,const GLchar *name);
typedef GLint (GL_APIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONPROC)(GLuint program,GLenum programInterface,const GLchar *name);
typedef GLint (GL_APIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)(GLuint program,GLenum programInterface,const GLchar *name);
typedef GLint (GL_APIENTRY * PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC)(GLuint program,GLenum programInterface,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMRESOURCENAMEPROC)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei *length,GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMRESOURCEFVNVPROC)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum *props,GLsizei count,GLsizei *length,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMRESOURCEIVPROC)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum *props,GLsizei count,GLsizei *length,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMSTAGEIVPROC)(GLuint program,GLenum shadertype,GLenum pname,GLint *values);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMSTRINGARBPROC)(GLenum target,GLenum pname,void *string);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMSTRINGNVPROC)(GLuint id,GLenum pname,GLubyte *program);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC)(GLenum target,GLuint index,GLuint *param);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMIVPROC)(GLuint program,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMIVARBPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETPROGRAMIVNVPROC)(GLuint id,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYBUFFEROBJECTI64VPROC)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLGETQUERYBUFFEROBJECTIVPROC)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLGETQUERYBUFFEROBJECTUI64VPROC)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLGETQUERYBUFFEROBJECTUIVPROC)(GLuint id,GLuint buffer,GLenum pname,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLGETQUERYINDEXEDIVPROC)(GLenum target,GLuint index,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTI64VPROC)(GLuint id,GLenum pname,GLint64 *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTI64VEXTPROC)(GLuint id,GLenum pname,GLint64 *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTIVPROC)(GLuint id,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTIVARBPROC)(GLuint id,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTIVEXTPROC)(GLuint id,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTUI64VPROC)(GLuint id,GLenum pname,GLuint64 *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTUI64VEXTPROC)(GLuint id,GLenum pname,GLuint64 *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTUIVPROC)(GLuint id,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTUIVARBPROC)(GLuint id,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYOBJECTUIVEXTPROC)(GLuint id,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYIVARBPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETQUERYIVEXTPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETRENDERBUFFERPARAMETERIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETRENDERBUFFERPARAMETERIVOESPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETSAMPLERPARAMETERIIVPROC)(GLuint sampler,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETSAMPLERPARAMETERIIVEXTPROC)(GLuint sampler,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETSAMPLERPARAMETERIIVOESPROC)(GLuint sampler,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETSAMPLERPARAMETERIUIVPROC)(GLuint sampler,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETSAMPLERPARAMETERIUIVEXTPROC)(GLuint sampler,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETSAMPLERPARAMETERIUIVOESPROC)(GLuint sampler,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETSAMPLERPARAMETERFVPROC)(GLuint sampler,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETSAMPLERPARAMETERIVPROC)(GLuint sampler,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETSEMAPHOREPARAMETERIVNVPROC)(GLuint semaphore,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC)(GLuint semaphore,GLenum pname,GLuint64 *params);
typedef void (GL_APIENTRY * PFNGLGETSEPARABLEFILTERPROC)(GLenum target,GLenum format,GLenum type,void *row,void *column,void *span);
typedef void (GL_APIENTRY * PFNGLGETSEPARABLEFILTEREXTPROC)(GLenum target,GLenum format,GLenum type,void *row,void *column,void *span);
typedef void (GL_APIENTRY * PFNGLGETSHADERINFOLOGPROC)(GLuint shader,GLsizei bufSize,GLsizei *length,GLchar *infoLog);
typedef void (GL_APIENTRY * PFNGLGETSHADERPRECISIONFORMATPROC)(GLenum shadertype,GLenum precisiontype,GLint *range,GLint *precision);
typedef void (GL_APIENTRY * PFNGLGETSHADERSOURCEPROC)(GLuint shader,GLsizei bufSize,GLsizei *length,GLchar *source);
typedef void (GL_APIENTRY * PFNGLGETSHADERSOURCEARBPROC)(GLhandleARB obj,GLsizei maxLength,GLsizei *length,GLcharARB *source);
typedef void (GL_APIENTRY * PFNGLGETSHADERIVPROC)(GLuint shader,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETSHADINGRATEIMAGEPALETTENVPROC)(GLuint viewport,GLuint entry,GLenum *rate);
typedef void (GL_APIENTRY * PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC)(GLenum rate,GLuint samples,GLuint index,GLint *location);
typedef void (GL_APIENTRY * PFNGLGETSHARPENTEXFUNCSGISPROC)(GLenum target,GLfloat *points);
typedef GLushort (GL_APIENTRY * PFNGLGETSTAGEINDEXNVPROC)(GLenum shadertype);
typedef const GLubyte *(GL_APIENTRY * PFNGLGETSTRINGPROC)(GLenum name);
typedef const GLubyte *(GL_APIENTRY * PFNGLGETSTRINGIPROC)(GLenum name,GLuint index);
typedef GLuint (GL_APIENTRY * PFNGLGETSUBROUTINEINDEXPROC)(GLuint program,GLenum shadertype,const GLchar *name);
typedef GLint (GL_APIENTRY * PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)(GLuint program,GLenum shadertype,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETSYNCIVPROC)(GLsync sync,GLenum pname,GLsizei count,GLsizei *length,GLint *values);
typedef void (GL_APIENTRY * PFNGLGETSYNCIVAPPLEPROC)(GLsync sync,GLenum pname,GLsizei count,GLsizei *length,GLint *values);
typedef void (GL_APIENTRY * PFNGLGETTEXBUMPPARAMETERFVATIPROC)(GLenum pname,GLfloat *param);
typedef void (GL_APIENTRY * PFNGLGETTEXBUMPPARAMETERIVATIPROC)(GLenum pname,GLint *param);
typedef void (GL_APIENTRY * PFNGLGETTEXENVFVPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETTEXENVIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXENVXVPROC)(GLenum target,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETTEXENVXVOESPROC)(GLenum target,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETTEXFILTERFUNCSGISPROC)(GLenum target,GLenum filter,GLfloat *weights);
typedef void (GL_APIENTRY * PFNGLGETTEXGENDVPROC)(GLenum coord,GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETTEXGENFVPROC)(GLenum coord,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETTEXGENFVOESPROC)(GLenum coord,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETTEXGENIVPROC)(GLenum coord,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXGENIVOESPROC)(GLenum coord,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXGENXVOESPROC)(GLenum coord,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETTEXIMAGEPROC)(GLenum target,GLint level,GLenum format,GLenum type,void *pixels);
typedef void (GL_APIENTRY * PFNGLGETTEXLEVELPARAMETERFVPROC)(GLenum target,GLint level,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETTEXLEVELPARAMETERIVPROC)(GLenum target,GLint level,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXLEVELPARAMETERXVOESPROC)(GLenum target,GLint level,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERIIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERIIVEXTPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERIIVOESPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERIUIVPROC)(GLenum target,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERIUIVEXTPROC)(GLenum target,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERIUIVOESPROC)(GLenum target,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC)(GLenum target,GLenum pname,void **params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERFVPROC)(GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERIVPROC)(GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERXVPROC)(GLenum target,GLenum pname,GLfixed *params);
typedef void (GL_APIENTRY * PFNGLGETTEXPARAMETERXVOESPROC)(GLenum target,GLenum pname,GLfixed *params);
typedef GLuint64 (GL_APIENTRY * PFNGLGETTEXTUREHANDLEARBPROC)(GLuint texture);
typedef GLuint64 (GL_APIENTRY * PFNGLGETTEXTUREHANDLEIMGPROC)(GLuint texture);
typedef GLuint64 (GL_APIENTRY * PFNGLGETTEXTUREHANDLENVPROC)(GLuint texture);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREIMAGEPROC)(GLuint texture,GLint level,GLenum format,GLenum type,GLsizei bufSize,void *pixels);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREIMAGEEXTPROC)(GLuint texture,GLenum target,GLint level,GLenum format,GLenum type,void *pixels);
typedef void (GL_APIENTRY * PFNGLGETTEXTURELEVELPARAMETERFVPROC)(GLuint texture,GLint level,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC)(GLuint texture,GLenum target,GLint level,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTURELEVELPARAMETERIVPROC)(GLuint texture,GLint level,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC)(GLuint texture,GLenum target,GLint level,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREPARAMETERIIVPROC)(GLuint texture,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREPARAMETERIIVEXTPROC)(GLuint texture,GLenum target,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREPARAMETERIUIVPROC)(GLuint texture,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture,GLenum target,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREPARAMETERFVPROC)(GLuint texture,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREPARAMETERFVEXTPROC)(GLuint texture,GLenum target,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREPARAMETERIVPROC)(GLuint texture,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTEXTUREPARAMETERIVEXTPROC)(GLuint texture,GLenum target,GLenum pname,GLint *params);
typedef GLuint64 (GL_APIENTRY * PFNGLGETTEXTURESAMPLERHANDLEARBPROC)(GLuint texture,GLuint sampler);
typedef GLuint64 (GL_APIENTRY * PFNGLGETTEXTURESAMPLERHANDLEIMGPROC)(GLuint texture,GLuint sampler);
typedef GLuint64 (GL_APIENTRY * PFNGLGETTEXTURESAMPLERHANDLENVPROC)(GLuint texture,GLuint sampler);
typedef void (GL_APIENTRY * PFNGLGETTEXTURESUBIMAGEPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,GLsizei bufSize,void *pixels);
typedef void (GL_APIENTRY * PFNGLGETTRACKMATRIXIVNVPROC)(GLenum target,GLuint address,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)(GLuint program,GLuint index,GLsizei bufSize,GLsizei *length,GLsizei *size,GLenum *type,GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC)(GLuint program,GLuint index,GLsizei bufSize,GLsizei *length,GLsizei *size,GLenum *type,GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC)(GLuint program,GLuint index,GLint *location);
typedef void (GL_APIENTRY * PFNGLGETTRANSFORMFEEDBACKI64_VPROC)(GLuint xfb,GLenum pname,GLuint index,GLint64 *param);
typedef void (GL_APIENTRY * PFNGLGETTRANSFORMFEEDBACKI_VPROC)(GLuint xfb,GLenum pname,GLuint index,GLint *param);
typedef void (GL_APIENTRY * PFNGLGETTRANSFORMFEEDBACKIVPROC)(GLuint xfb,GLenum pname,GLint *param);
typedef void (GL_APIENTRY * PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC)(GLuint shader,GLsizei bufSize,GLsizei *length,GLchar *source);
typedef GLuint (GL_APIENTRY * PFNGLGETUNIFORMBLOCKINDEXPROC)(GLuint program,const GLchar *uniformBlockName);
typedef GLint (GL_APIENTRY * PFNGLGETUNIFORMBUFFERSIZEEXTPROC)(GLuint program,GLint location);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMINDICESPROC)(GLuint program,GLsizei uniformCount,const GLchar *const*uniformNames,GLuint *uniformIndices);
typedef GLint (GL_APIENTRY * PFNGLGETUNIFORMLOCATIONPROC)(GLuint program,const GLchar *name);
typedef GLint (GL_APIENTRY * PFNGLGETUNIFORMLOCATIONARBPROC)(GLhandleARB programObj,const GLcharARB *name);
typedef GLintptr (GL_APIENTRY * PFNGLGETUNIFORMOFFSETEXTPROC)(GLuint program,GLint location);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMSUBROUTINEUIVPROC)(GLenum shadertype,GLint location,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMDVPROC)(GLuint program,GLint location,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMFVPROC)(GLuint program,GLint location,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMFVARBPROC)(GLhandleARB programObj,GLint location,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMI64VARBPROC)(GLuint program,GLint location,GLint64 *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMI64VNVPROC)(GLuint program,GLint location,GLint64EXT *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMIVPROC)(GLuint program,GLint location,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMIVARBPROC)(GLhandleARB programObj,GLint location,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMUI64VARBPROC)(GLuint program,GLint location,GLuint64 *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMUI64VNVPROC)(GLuint program,GLint location,GLuint64EXT *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMUIVPROC)(GLuint program,GLint location,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETUNIFORMUIVEXTPROC)(GLuint program,GLint location,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETUNSIGNEDBYTEVEXTPROC)(GLenum pname,GLubyte *data);
typedef void (GL_APIENTRY * PFNGLGETUNSIGNEDBYTEI_VEXTPROC)(GLenum target,GLuint index,GLubyte *data);
typedef void (GL_APIENTRY * PFNGLGETVARIANTARRAYOBJECTFVATIPROC)(GLuint id,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETVARIANTARRAYOBJECTIVATIPROC)(GLuint id,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVARIANTBOOLEANVEXTPROC)(GLuint id,GLenum value,GLboolean *data);
typedef void (GL_APIENTRY * PFNGLGETVARIANTFLOATVEXTPROC)(GLuint id,GLenum value,GLfloat *data);
typedef void (GL_APIENTRY * PFNGLGETVARIANTINTEGERVEXTPROC)(GLuint id,GLenum value,GLint *data);
typedef void (GL_APIENTRY * PFNGLGETVARIANTPOINTERVEXTPROC)(GLuint id,GLenum value,void **data);
typedef GLint (GL_APIENTRY * PFNGLGETVARYINGLOCATIONNVPROC)(GLuint program,const GLchar *name);
typedef void (GL_APIENTRY * PFNGLGETVERTEXARRAYINDEXED64IVPROC)(GLuint vaobj,GLuint index,GLenum pname,GLint64 *param);
typedef void (GL_APIENTRY * PFNGLGETVERTEXARRAYINDEXEDIVPROC)(GLuint vaobj,GLuint index,GLenum pname,GLint *param);
typedef void (GL_APIENTRY * PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC)(GLuint vaobj,GLuint index,GLenum pname,GLint *param);
typedef void (GL_APIENTRY * PFNGLGETVERTEXARRAYINTEGERVEXTPROC)(GLuint vaobj,GLenum pname,GLint *param);
typedef void (GL_APIENTRY * PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC)(GLuint vaobj,GLuint index,GLenum pname,void **param);
typedef void (GL_APIENTRY * PFNGLGETVERTEXARRAYPOINTERVEXTPROC)(GLuint vaobj,GLenum pname,void **param);
typedef void (GL_APIENTRY * PFNGLGETVERTEXARRAYIVPROC)(GLuint vaobj,GLenum pname,GLint *param);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC)(GLuint index,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC)(GLuint index,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBIIVPROC)(GLuint index,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBIIVEXTPROC)(GLuint index,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBIUIVPROC)(GLuint index,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBIUIVEXTPROC)(GLuint index,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBLDVPROC)(GLuint index,GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBLDVEXTPROC)(GLuint index,GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBLI64VNVPROC)(GLuint index,GLenum pname,GLint64EXT *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBLUI64VARBPROC)(GLuint index,GLenum pname,GLuint64EXT *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBLUI64VNVPROC)(GLuint index,GLenum pname,GLuint64EXT *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBPOINTERVPROC)(GLuint index,GLenum pname,void **pointer);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBPOINTERVARBPROC)(GLuint index,GLenum pname,void **pointer);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBPOINTERVNVPROC)(GLuint index,GLenum pname,void **pointer);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBDVPROC)(GLuint index,GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBDVARBPROC)(GLuint index,GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBDVNVPROC)(GLuint index,GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBFVPROC)(GLuint index,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBFVARBPROC)(GLuint index,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBFVNVPROC)(GLuint index,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBIVPROC)(GLuint index,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBIVARBPROC)(GLuint index,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVERTEXATTRIBIVNVPROC)(GLuint index,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVIDEOCAPTURESTREAMDVNVPROC)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETVIDEOCAPTURESTREAMFVNVPROC)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETVIDEOCAPTURESTREAMIVNVPROC)(GLuint video_capture_slot,GLuint stream,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVIDEOCAPTUREIVNVPROC)(GLuint video_capture_slot,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVIDEOI64VNVPROC)(GLuint video_slot,GLenum pname,GLint64EXT *params);
typedef void (GL_APIENTRY * PFNGLGETVIDEOIVNVPROC)(GLuint video_slot,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETVIDEOUI64VNVPROC)(GLuint video_slot,GLenum pname,GLuint64EXT *params);
typedef void (GL_APIENTRY * PFNGLGETVIDEOUIVNVPROC)(GLuint video_slot,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETNCOLORTABLEPROC)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void *table);
typedef void (GL_APIENTRY * PFNGLGETNCOLORTABLEARBPROC)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void *table);
typedef void (GL_APIENTRY * PFNGLGETNCOMPRESSEDTEXIMAGEPROC)(GLenum target,GLint lod,GLsizei bufSize,void *pixels);
typedef void (GL_APIENTRY * PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC)(GLenum target,GLint lod,GLsizei bufSize,void *img);
typedef void (GL_APIENTRY * PFNGLGETNCONVOLUTIONFILTERPROC)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void *image);
typedef void (GL_APIENTRY * PFNGLGETNCONVOLUTIONFILTERARBPROC)(GLenum target,GLenum format,GLenum type,GLsizei bufSize,void *image);
typedef void (GL_APIENTRY * PFNGLGETNHISTOGRAMPROC)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void *values);
typedef void (GL_APIENTRY * PFNGLGETNHISTOGRAMARBPROC)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void *values);
typedef void (GL_APIENTRY * PFNGLGETNMAPDVPROC)(GLenum target,GLenum query,GLsizei bufSize,GLdouble *v);
typedef void (GL_APIENTRY * PFNGLGETNMAPDVARBPROC)(GLenum target,GLenum query,GLsizei bufSize,GLdouble *v);
typedef void (GL_APIENTRY * PFNGLGETNMAPFVPROC)(GLenum target,GLenum query,GLsizei bufSize,GLfloat *v);
typedef void (GL_APIENTRY * PFNGLGETNMAPFVARBPROC)(GLenum target,GLenum query,GLsizei bufSize,GLfloat *v);
typedef void (GL_APIENTRY * PFNGLGETNMAPIVPROC)(GLenum target,GLenum query,GLsizei bufSize,GLint *v);
typedef void (GL_APIENTRY * PFNGLGETNMAPIVARBPROC)(GLenum target,GLenum query,GLsizei bufSize,GLint *v);
typedef void (GL_APIENTRY * PFNGLGETNMINMAXPROC)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void *values);
typedef void (GL_APIENTRY * PFNGLGETNMINMAXARBPROC)(GLenum target,GLboolean reset,GLenum format,GLenum type,GLsizei bufSize,void *values);
typedef void (GL_APIENTRY * PFNGLGETNPIXELMAPFVPROC)(GLenum map,GLsizei bufSize,GLfloat *values);
typedef void (GL_APIENTRY * PFNGLGETNPIXELMAPFVARBPROC)(GLenum map,GLsizei bufSize,GLfloat *values);
typedef void (GL_APIENTRY * PFNGLGETNPIXELMAPUIVPROC)(GLenum map,GLsizei bufSize,GLuint *values);
typedef void (GL_APIENTRY * PFNGLGETNPIXELMAPUIVARBPROC)(GLenum map,GLsizei bufSize,GLuint *values);
typedef void (GL_APIENTRY * PFNGLGETNPIXELMAPUSVPROC)(GLenum map,GLsizei bufSize,GLushort *values);
typedef void (GL_APIENTRY * PFNGLGETNPIXELMAPUSVARBPROC)(GLenum map,GLsizei bufSize,GLushort *values);
typedef void (GL_APIENTRY * PFNGLGETNPOLYGONSTIPPLEPROC)(GLsizei bufSize,GLubyte *pattern);
typedef void (GL_APIENTRY * PFNGLGETNPOLYGONSTIPPLEARBPROC)(GLsizei bufSize,GLubyte *pattern);
typedef void (GL_APIENTRY * PFNGLGETNSEPARABLEFILTERPROC)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void *row,GLsizei columnBufSize,void *column,void *span);
typedef void (GL_APIENTRY * PFNGLGETNSEPARABLEFILTERARBPROC)(GLenum target,GLenum format,GLenum type,GLsizei rowBufSize,void *row,GLsizei columnBufSize,void *column,void *span);
typedef void (GL_APIENTRY * PFNGLGETNTEXIMAGEPROC)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void *pixels);
typedef void (GL_APIENTRY * PFNGLGETNTEXIMAGEARBPROC)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,void *img);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMDVPROC)(GLuint program,GLint location,GLsizei bufSize,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMDVARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLdouble *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMFVPROC)(GLuint program,GLint location,GLsizei bufSize,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMFVARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMFVEXTPROC)(GLuint program,GLint location,GLsizei bufSize,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMFVKHRPROC)(GLuint program,GLint location,GLsizei bufSize,GLfloat *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMI64VARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLint64 *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMIVPROC)(GLuint program,GLint location,GLsizei bufSize,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMIVARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMIVEXTPROC)(GLuint program,GLint location,GLsizei bufSize,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMIVKHRPROC)(GLuint program,GLint location,GLsizei bufSize,GLint *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMUI64VARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLuint64 *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMUIVPROC)(GLuint program,GLint location,GLsizei bufSize,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMUIVARBPROC)(GLuint program,GLint location,GLsizei bufSize,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGETNUNIFORMUIVKHRPROC)(GLuint program,GLint location,GLsizei bufSize,GLuint *params);
typedef void (GL_APIENTRY * PFNGLGLOBALALPHAFACTORBSUNPROC)(GLbyte factor);
typedef void (GL_APIENTRY * PFNGLGLOBALALPHAFACTORDSUNPROC)(GLdouble factor);
typedef void (GL_APIENTRY * PFNGLGLOBALALPHAFACTORFSUNPROC)(GLfloat factor);
typedef void (GL_APIENTRY * PFNGLGLOBALALPHAFACTORISUNPROC)(GLint factor);
typedef void (GL_APIENTRY * PFNGLGLOBALALPHAFACTORSSUNPROC)(GLshort factor);
typedef void (GL_APIENTRY * PFNGLGLOBALALPHAFACTORUBSUNPROC)(GLubyte factor);
typedef void (GL_APIENTRY * PFNGLGLOBALALPHAFACTORUISUNPROC)(GLuint factor);
typedef void (GL_APIENTRY * PFNGLGLOBALALPHAFACTORUSSUNPROC)(GLushort factor);
typedef void (GL_APIENTRY * PFNGLHINTPROC)(GLenum target,GLenum mode);
typedef void (GL_APIENTRY * PFNGLHINTPGIPROC)(GLenum target,GLint mode);
typedef void (GL_APIENTRY * PFNGLHISTOGRAMPROC)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink);
typedef void (GL_APIENTRY * PFNGLHISTOGRAMEXTPROC)(GLenum target,GLsizei width,GLenum internalformat,GLboolean sink);
typedef void (GL_APIENTRY * PFNGLIGLOOINTERFACESGIXPROC)(GLenum pname,const void *params);
typedef void (GL_APIENTRY * PFNGLIMAGETRANSFORMPARAMETERFHPPROC)(GLenum target,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLIMAGETRANSFORMPARAMETERFVHPPROC)(GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLIMAGETRANSFORMPARAMETERIHPPROC)(GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLIMAGETRANSFORMPARAMETERIVHPPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLIMPORTMEMORYFDEXTPROC)(GLuint memory,GLuint64 size,GLenum handleType,GLint fd);
typedef void (GL_APIENTRY * PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC)(GLuint memory,GLuint64 size,GLenum handleType,void *handle);
typedef void (GL_APIENTRY * PFNGLIMPORTMEMORYWIN32NAMEEXTPROC)(GLuint memory,GLuint64 size,GLenum handleType,const void *name);
typedef void (GL_APIENTRY * PFNGLIMPORTSEMAPHOREFDEXTPROC)(GLuint semaphore,GLenum handleType,GLint fd);
typedef void (GL_APIENTRY * PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC)(GLuint semaphore,GLenum handleType,void *handle);
typedef void (GL_APIENTRY * PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC)(GLuint semaphore,GLenum handleType,const void *name);
typedef GLsync (GL_APIENTRY * PFNGLIMPORTSYNCEXTPROC)(GLenum external_sync_type,GLintptr external_sync,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLINDEXFORMATNVPROC)(GLenum type,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLINDEXFUNCEXTPROC)(GLenum func,GLclampf ref);
typedef void (GL_APIENTRY * PFNGLINDEXMASKPROC)(GLuint mask);
typedef void (GL_APIENTRY * PFNGLINDEXMATERIALEXTPROC)(GLenum face,GLenum mode);
typedef void (GL_APIENTRY * PFNGLINDEXPOINTERPROC)(GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLINDEXPOINTEREXTPROC)(GLenum type,GLsizei stride,GLsizei count,const void *pointer);
typedef void (GL_APIENTRY * PFNGLINDEXPOINTERLISTIBMPROC)(GLenum type,GLint stride,const void **pointer,GLint ptrstride);
typedef void (GL_APIENTRY * PFNGLINDEXDPROC)(GLdouble c);
typedef void (GL_APIENTRY * PFNGLINDEXDVPROC)(const GLdouble *c);
typedef void (GL_APIENTRY * PFNGLINDEXFPROC)(GLfloat c);
typedef void (GL_APIENTRY * PFNGLINDEXFVPROC)(const GLfloat *c);
typedef void (GL_APIENTRY * PFNGLINDEXIPROC)(GLint c);
typedef void (GL_APIENTRY * PFNGLINDEXIVPROC)(const GLint *c);
typedef void (GL_APIENTRY * PFNGLINDEXSPROC)(GLshort c);
typedef void (GL_APIENTRY * PFNGLINDEXSVPROC)(const GLshort *c);
typedef void (GL_APIENTRY * PFNGLINDEXUBPROC)(GLubyte c);
typedef void (GL_APIENTRY * PFNGLINDEXUBVPROC)(const GLubyte *c);
typedef void (GL_APIENTRY * PFNGLINDEXXOESPROC)(GLfixed component);
typedef void (GL_APIENTRY * PFNGLINDEXXVOESPROC)(const GLfixed *component);
typedef void (GL_APIENTRY * PFNGLINITNAMESPROC)(void);
typedef void (GL_APIENTRY * PFNGLINSERTCOMPONENTEXTPROC)(GLuint res,GLuint src,GLuint num);
typedef void (GL_APIENTRY * PFNGLINSERTEVENTMARKEREXTPROC)(GLsizei length,const GLchar *marker);
typedef void (GL_APIENTRY * PFNGLINSTRUMENTSBUFFERSGIXPROC)(GLsizei size,GLint *buffer);
typedef void (GL_APIENTRY * PFNGLINTERLEAVEDARRAYSPROC)(GLenum format,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLINTERPOLATEPATHSNVPROC)(GLuint resultPath,GLuint pathA,GLuint pathB,GLfloat weight);
typedef void (GL_APIENTRY * PFNGLINVALIDATEBUFFERDATAPROC)(GLuint buffer);
typedef void (GL_APIENTRY * PFNGLINVALIDATEBUFFERSUBDATAPROC)(GLuint buffer,GLintptr offset,GLsizeiptr length);
typedef void (GL_APIENTRY * PFNGLINVALIDATEFRAMEBUFFERPROC)(GLenum target,GLsizei numAttachments,const GLenum *attachments);
typedef void (GL_APIENTRY * PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC)(GLuint framebuffer,GLsizei numAttachments,const GLenum *attachments);
typedef void (GL_APIENTRY * PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC)(GLuint framebuffer,GLsizei numAttachments,const GLenum *attachments,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLINVALIDATESUBFRAMEBUFFERPROC)(GLenum target,GLsizei numAttachments,const GLenum *attachments,GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLINVALIDATETEXIMAGEPROC)(GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLINVALIDATETEXSUBIMAGEPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth);
typedef GLboolean (GL_APIENTRY * PFNGLISASYNCMARKERSGIXPROC)(GLuint marker);
typedef GLboolean (GL_APIENTRY * PFNGLISBUFFERPROC)(GLuint buffer);
typedef GLboolean (GL_APIENTRY * PFNGLISBUFFERARBPROC)(GLuint buffer);
typedef GLboolean (GL_APIENTRY * PFNGLISBUFFERRESIDENTNVPROC)(GLenum target);
typedef GLboolean (GL_APIENTRY * PFNGLISCOMMANDLISTNVPROC)(GLuint list);
typedef GLboolean (GL_APIENTRY * PFNGLISENABLEDPROC)(GLenum cap);
typedef GLboolean (GL_APIENTRY * PFNGLISENABLEDINDEXEDEXTPROC)(GLenum target,GLuint index);
typedef GLboolean (GL_APIENTRY * PFNGLISENABLEDIPROC)(GLenum target,GLuint index);
typedef GLboolean (GL_APIENTRY * PFNGLISENABLEDIEXTPROC)(GLenum target,GLuint index);
typedef GLboolean (GL_APIENTRY * PFNGLISENABLEDINVPROC)(GLenum target,GLuint index);
typedef GLboolean (GL_APIENTRY * PFNGLISENABLEDIOESPROC)(GLenum target,GLuint index);
typedef GLboolean (GL_APIENTRY * PFNGLISFENCEAPPLEPROC)(GLuint fence);
typedef GLboolean (GL_APIENTRY * PFNGLISFENCENVPROC)(GLuint fence);
typedef GLboolean (GL_APIENTRY * PFNGLISFRAMEBUFFERPROC)(GLuint framebuffer);
typedef GLboolean (GL_APIENTRY * PFNGLISFRAMEBUFFEREXTPROC)(GLuint framebuffer);
typedef GLboolean (GL_APIENTRY * PFNGLISFRAMEBUFFEROESPROC)(GLuint framebuffer);
typedef GLboolean (GL_APIENTRY * PFNGLISIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle);
typedef GLboolean (GL_APIENTRY * PFNGLISIMAGEHANDLERESIDENTNVPROC)(GLuint64 handle);
typedef GLboolean (GL_APIENTRY * PFNGLISLISTPROC)(GLuint list);
typedef GLboolean (GL_APIENTRY * PFNGLISMEMORYOBJECTEXTPROC)(GLuint memoryObject);
typedef GLboolean (GL_APIENTRY * PFNGLISNAMEAMDPROC)(GLenum identifier,GLuint name);
typedef GLboolean (GL_APIENTRY * PFNGLISNAMEDBUFFERRESIDENTNVPROC)(GLuint buffer);
typedef GLboolean (GL_APIENTRY * PFNGLISNAMEDSTRINGARBPROC)(GLint namelen,const GLchar *name);
typedef GLboolean (GL_APIENTRY * PFNGLISOBJECTBUFFERATIPROC)(GLuint buffer);
typedef GLboolean (GL_APIENTRY * PFNGLISOCCLUSIONQUERYNVPROC)(GLuint id);
typedef GLboolean (GL_APIENTRY * PFNGLISPATHNVPROC)(GLuint path);
typedef GLboolean (GL_APIENTRY * PFNGLISPOINTINFILLPATHNVPROC)(GLuint path,GLuint mask,GLfloat x,GLfloat y);
typedef GLboolean (GL_APIENTRY * PFNGLISPOINTINSTROKEPATHNVPROC)(GLuint path,GLfloat x,GLfloat y);
typedef GLboolean (GL_APIENTRY * PFNGLISPROGRAMPROC)(GLuint program);
typedef GLboolean (GL_APIENTRY * PFNGLISPROGRAMARBPROC)(GLuint program);
typedef GLboolean (GL_APIENTRY * PFNGLISPROGRAMNVPROC)(GLuint id);
typedef GLboolean (GL_APIENTRY * PFNGLISPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef GLboolean (GL_APIENTRY * PFNGLISPROGRAMPIPELINEEXTPROC)(GLuint pipeline);
typedef GLboolean (GL_APIENTRY * PFNGLISQUERYPROC)(GLuint id);
typedef GLboolean (GL_APIENTRY * PFNGLISQUERYARBPROC)(GLuint id);
typedef GLboolean (GL_APIENTRY * PFNGLISQUERYEXTPROC)(GLuint id);
typedef GLboolean (GL_APIENTRY * PFNGLISRENDERBUFFERPROC)(GLuint renderbuffer);
typedef GLboolean (GL_APIENTRY * PFNGLISRENDERBUFFEREXTPROC)(GLuint renderbuffer);
typedef GLboolean (GL_APIENTRY * PFNGLISRENDERBUFFEROESPROC)(GLuint renderbuffer);
typedef GLboolean (GL_APIENTRY * PFNGLISSEMAPHOREEXTPROC)(GLuint semaphore);
typedef GLboolean (GL_APIENTRY * PFNGLISSAMPLERPROC)(GLuint sampler);
typedef GLboolean (GL_APIENTRY * PFNGLISSHADERPROC)(GLuint shader);
typedef GLboolean (GL_APIENTRY * PFNGLISSTATENVPROC)(GLuint state);
typedef GLboolean (GL_APIENTRY * PFNGLISSYNCPROC)(GLsync sync);
typedef GLboolean (GL_APIENTRY * PFNGLISSYNCAPPLEPROC)(GLsync sync);
typedef GLboolean (GL_APIENTRY * PFNGLISTEXTUREPROC)(GLuint texture);
typedef GLboolean (GL_APIENTRY * PFNGLISTEXTUREEXTPROC)(GLuint texture);
typedef GLboolean (GL_APIENTRY * PFNGLISTEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle);
typedef GLboolean (GL_APIENTRY * PFNGLISTEXTUREHANDLERESIDENTNVPROC)(GLuint64 handle);
typedef GLboolean (GL_APIENTRY * PFNGLISTRANSFORMFEEDBACKPROC)(GLuint id);
typedef GLboolean (GL_APIENTRY * PFNGLISTRANSFORMFEEDBACKNVPROC)(GLuint id);
typedef GLboolean (GL_APIENTRY * PFNGLISVARIANTENABLEDEXTPROC)(GLuint id,GLenum cap);
typedef GLboolean (GL_APIENTRY * PFNGLISVERTEXARRAYPROC)(GLuint array);
typedef GLboolean (GL_APIENTRY * PFNGLISVERTEXARRAYAPPLEPROC)(GLuint array);
typedef GLboolean (GL_APIENTRY * PFNGLISVERTEXARRAYOESPROC)(GLuint array);
typedef GLboolean (GL_APIENTRY * PFNGLISVERTEXATTRIBENABLEDAPPLEPROC)(GLuint index,GLenum pname);
typedef void (GL_APIENTRY * PFNGLLGPUCOPYIMAGESUBDATANVXPROC)(GLuint sourceGpu,GLbitfield destinationGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srxY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei width,GLsizei height,GLsizei depth);
typedef void (GL_APIENTRY * PFNGLLGPUINTERLOCKNVXPROC)(void);
typedef void (GL_APIENTRY * PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC)(GLbitfield gpuMask,GLuint buffer,GLintptr offset,GLsizeiptr size,const void *data);
typedef void (GL_APIENTRY * PFNGLLABELOBJECTEXTPROC)(GLenum type,GLuint object,GLsizei length,const GLchar *label);
typedef void (GL_APIENTRY * PFNGLLIGHTENVISGIXPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLLIGHTMODELFPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLLIGHTMODELFVPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLLIGHTMODELIPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLLIGHTMODELIVPROC)(GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLLIGHTMODELXPROC)(GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLLIGHTMODELXOESPROC)(GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLLIGHTMODELXVPROC)(GLenum pname,const GLfixed *param);
typedef void (GL_APIENTRY * PFNGLLIGHTMODELXVOESPROC)(GLenum pname,const GLfixed *param);
typedef void (GL_APIENTRY * PFNGLLIGHTFPROC)(GLenum light,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLLIGHTFVPROC)(GLenum light,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLLIGHTIPROC)(GLenum light,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLLIGHTIVPROC)(GLenum light,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLLIGHTXPROC)(GLenum light,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLLIGHTXOESPROC)(GLenum light,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLLIGHTXVPROC)(GLenum light,GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLLIGHTXVOESPROC)(GLenum light,GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLLINESTIPPLEPROC)(GLint factor,GLushort pattern);
typedef void (GL_APIENTRY * PFNGLLINEWIDTHPROC)(GLfloat width);
typedef void (GL_APIENTRY * PFNGLLINEWIDTHXPROC)(GLfixed width);
typedef void (GL_APIENTRY * PFNGLLINEWIDTHXOESPROC)(GLfixed width);
typedef void (GL_APIENTRY * PFNGLLINKPROGRAMPROC)(GLuint program);
typedef void (GL_APIENTRY * PFNGLLINKPROGRAMARBPROC)(GLhandleARB programObj);
typedef void (GL_APIENTRY * PFNGLLISTBASEPROC)(GLuint base);
typedef void (GL_APIENTRY * PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC)(GLuint list,GLuint segment,const void **indirects,const GLsizei *sizes,const GLuint *states,const GLuint *fbos,GLuint count);
typedef void (GL_APIENTRY * PFNGLLISTPARAMETERFSGIXPROC)(GLuint list,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLLISTPARAMETERFVSGIXPROC)(GLuint list,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLLISTPARAMETERISGIXPROC)(GLuint list,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLLISTPARAMETERIVSGIXPROC)(GLuint list,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLLOADIDENTITYPROC)(void);
typedef void (GL_APIENTRY * PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC)(GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLLOADMATRIXDPROC)(const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLLOADMATRIXFPROC)(const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLLOADMATRIXXPROC)(const GLfixed *m);
typedef void (GL_APIENTRY * PFNGLLOADMATRIXXOESPROC)(const GLfixed *m);
typedef void (GL_APIENTRY * PFNGLLOADNAMEPROC)(GLuint name);
typedef void (GL_APIENTRY * PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC)(void);
typedef void (GL_APIENTRY * PFNGLLOADPROGRAMNVPROC)(GLenum target,GLuint id,GLsizei len,const GLubyte *program);
typedef void (GL_APIENTRY * PFNGLLOADTRANSPOSEMATRIXDPROC)(const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLLOADTRANSPOSEMATRIXDARBPROC)(const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLLOADTRANSPOSEMATRIXFPROC)(const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLLOADTRANSPOSEMATRIXFARBPROC)(const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLLOADTRANSPOSEMATRIXXOESPROC)(const GLfixed *m);
typedef void (GL_APIENTRY * PFNGLLOCKARRAYSEXTPROC)(GLint first,GLsizei count);
typedef void (GL_APIENTRY * PFNGLLOGICOPPROC)(GLenum opcode);
typedef void (GL_APIENTRY * PFNGLMAKEBUFFERNONRESIDENTNVPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLMAKEBUFFERRESIDENTNVPROC)(GLenum target,GLenum access);
typedef void (GL_APIENTRY * PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC)(GLuint64 handle);
typedef void (GL_APIENTRY * PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC)(GLuint64 handle);
typedef void (GL_APIENTRY * PFNGLMAKEIMAGEHANDLERESIDENTARBPROC)(GLuint64 handle,GLenum access);
typedef void (GL_APIENTRY * PFNGLMAKEIMAGEHANDLERESIDENTNVPROC)(GLuint64 handle,GLenum access);
typedef void (GL_APIENTRY * PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC)(GLuint buffer);
typedef void (GL_APIENTRY * PFNGLMAKENAMEDBUFFERRESIDENTNVPROC)(GLuint buffer,GLenum access);
typedef void (GL_APIENTRY * PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC)(GLuint64 handle);
typedef void (GL_APIENTRY * PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC)(GLuint64 handle);
typedef void (GL_APIENTRY * PFNGLMAKETEXTUREHANDLERESIDENTARBPROC)(GLuint64 handle);
typedef void (GL_APIENTRY * PFNGLMAKETEXTUREHANDLERESIDENTNVPROC)(GLuint64 handle);
typedef void (GL_APIENTRY * PFNGLMAP1DPROC)(GLenum target,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble *points);
typedef void (GL_APIENTRY * PFNGLMAP1FPROC)(GLenum target,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat *points);
typedef void (GL_APIENTRY * PFNGLMAP1XOESPROC)(GLenum target,GLfixed u1,GLfixed u2,GLint stride,GLint order,GLfixed points);
typedef void (GL_APIENTRY * PFNGLMAP2DPROC)(GLenum target,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble *points);
typedef void (GL_APIENTRY * PFNGLMAP2FPROC)(GLenum target,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat *points);
typedef void (GL_APIENTRY * PFNGLMAP2XOESPROC)(GLenum target,GLfixed u1,GLfixed u2,GLint ustride,GLint uorder,GLfixed v1,GLfixed v2,GLint vstride,GLint vorder,GLfixed points);
typedef void *(GL_APIENTRY * PFNGLMAPBUFFERPROC)(GLenum target,GLenum access);
typedef void *(GL_APIENTRY * PFNGLMAPBUFFERARBPROC)(GLenum target,GLenum access);
typedef void *(GL_APIENTRY * PFNGLMAPBUFFEROESPROC)(GLenum target,GLenum access);
typedef void *(GL_APIENTRY * PFNGLMAPBUFFERRANGEPROC)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access);
typedef void *(GL_APIENTRY * PFNGLMAPBUFFERRANGEEXTPROC)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access);
typedef void (GL_APIENTRY * PFNGLMAPCONTROLPOINTSNVPROC)(GLenum target,GLuint index,GLenum type,GLsizei ustride,GLsizei vstride,GLint uorder,GLint vorder,GLboolean packed,const void *points);
typedef void (GL_APIENTRY * PFNGLMAPGRID1DPROC)(GLint un,GLdouble u1,GLdouble u2);
typedef void (GL_APIENTRY * PFNGLMAPGRID1FPROC)(GLint un,GLfloat u1,GLfloat u2);
typedef void (GL_APIENTRY * PFNGLMAPGRID1XOESPROC)(GLint n,GLfixed u1,GLfixed u2);
typedef void (GL_APIENTRY * PFNGLMAPGRID2DPROC)(GLint un,GLdouble u1,GLdouble u2,GLint vn,GLdouble v1,GLdouble v2);
typedef void (GL_APIENTRY * PFNGLMAPGRID2FPROC)(GLint un,GLfloat u1,GLfloat u2,GLint vn,GLfloat v1,GLfloat v2);
typedef void (GL_APIENTRY * PFNGLMAPGRID2XOESPROC)(GLint n,GLfixed u1,GLfixed u2,GLfixed v1,GLfixed v2);
typedef void *(GL_APIENTRY * PFNGLMAPNAMEDBUFFERPROC)(GLuint buffer,GLenum access);
typedef void *(GL_APIENTRY * PFNGLMAPNAMEDBUFFEREXTPROC)(GLuint buffer,GLenum access);
typedef void *(GL_APIENTRY * PFNGLMAPNAMEDBUFFERRANGEPROC)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access);
typedef void *(GL_APIENTRY * PFNGLMAPNAMEDBUFFERRANGEEXTPROC)(GLuint buffer,GLintptr offset,GLsizeiptr length,GLbitfield access);
typedef void *(GL_APIENTRY * PFNGLMAPOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (GL_APIENTRY * PFNGLMAPPARAMETERFVNVPROC)(GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLMAPPARAMETERIVNVPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void *(GL_APIENTRY * PFNGLMAPTEXTURE2DINTELPROC)(GLuint texture,GLint level,GLbitfield access,GLint *stride,GLenum *layout);
typedef void (GL_APIENTRY * PFNGLMAPVERTEXATTRIB1DAPPLEPROC)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint stride,GLint order,const GLdouble *points);
typedef void (GL_APIENTRY * PFNGLMAPVERTEXATTRIB1FAPPLEPROC)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint stride,GLint order,const GLfloat *points);
typedef void (GL_APIENTRY * PFNGLMAPVERTEXATTRIB2DAPPLEPROC)(GLuint index,GLuint size,GLdouble u1,GLdouble u2,GLint ustride,GLint uorder,GLdouble v1,GLdouble v2,GLint vstride,GLint vorder,const GLdouble *points);
typedef void (GL_APIENTRY * PFNGLMAPVERTEXATTRIB2FAPPLEPROC)(GLuint index,GLuint size,GLfloat u1,GLfloat u2,GLint ustride,GLint uorder,GLfloat v1,GLfloat v2,GLint vstride,GLint vorder,const GLfloat *points);
typedef void (GL_APIENTRY * PFNGLMATERIALFPROC)(GLenum face,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLMATERIALFVPROC)(GLenum face,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLMATERIALIPROC)(GLenum face,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLMATERIALIVPROC)(GLenum face,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLMATERIALXPROC)(GLenum face,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLMATERIALXOESPROC)(GLenum face,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLMATERIALXVPROC)(GLenum face,GLenum pname,const GLfixed *param);
typedef void (GL_APIENTRY * PFNGLMATERIALXVOESPROC)(GLenum face,GLenum pname,const GLfixed *param);
typedef void (GL_APIENTRY * PFNGLMATRIXFRUSTUMEXTPROC)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar);
typedef void (GL_APIENTRY * PFNGLMATRIXINDEXPOINTERARBPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLMATRIXINDEXPOINTEROESPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLMATRIXINDEXUBVARBPROC)(GLint size,const GLubyte *indices);
typedef void (GL_APIENTRY * PFNGLMATRIXINDEXUIVARBPROC)(GLint size,const GLuint *indices);
typedef void (GL_APIENTRY * PFNGLMATRIXINDEXUSVARBPROC)(GLint size,const GLushort *indices);
typedef void (GL_APIENTRY * PFNGLMATRIXLOAD3X2FNVPROC)(GLenum matrixMode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXLOAD3X3FNVPROC)(GLenum matrixMode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXLOADIDENTITYEXTPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC)(GLenum matrixMode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXLOADTRANSPOSEDEXTPROC)(GLenum mode,const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLMATRIXLOADTRANSPOSEFEXTPROC)(GLenum mode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXLOADDEXTPROC)(GLenum mode,const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLMATRIXLOADFEXTPROC)(GLenum mode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXMODEPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLMATRIXMULT3X2FNVPROC)(GLenum matrixMode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXMULT3X3FNVPROC)(GLenum matrixMode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC)(GLenum matrixMode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXMULTTRANSPOSEDEXTPROC)(GLenum mode,const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLMATRIXMULTTRANSPOSEFEXTPROC)(GLenum mode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXMULTDEXTPROC)(GLenum mode,const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLMATRIXMULTFEXTPROC)(GLenum mode,const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMATRIXORTHOEXTPROC)(GLenum mode,GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar);
typedef void (GL_APIENTRY * PFNGLMATRIXPOPEXTPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLMATRIXPUSHEXTPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLMATRIXROTATEDEXTPROC)(GLenum mode,GLdouble angle,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLMATRIXROTATEFEXTPROC)(GLenum mode,GLfloat angle,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLMATRIXSCALEDEXTPROC)(GLenum mode,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLMATRIXSCALEFEXTPROC)(GLenum mode,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLMATRIXTRANSLATEDEXTPROC)(GLenum mode,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLMATRIXTRANSLATEFEXTPROC)(GLenum mode,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLMAXACTIVESHADERCORESARMPROC)(GLuint count);
typedef void (GL_APIENTRY * PFNGLMAXSHADERCOMPILERTHREADSKHRPROC)(GLuint count);
typedef void (GL_APIENTRY * PFNGLMAXSHADERCOMPILERTHREADSARBPROC)(GLuint count);
typedef void (GL_APIENTRY * PFNGLMEMORYBARRIERPROC)(GLbitfield barriers);
typedef void (GL_APIENTRY * PFNGLMEMORYBARRIERBYREGIONPROC)(GLbitfield barriers);
typedef void (GL_APIENTRY * PFNGLMEMORYBARRIEREXTPROC)(GLbitfield barriers);
typedef void (GL_APIENTRY * PFNGLMEMORYOBJECTPARAMETERIVEXTPROC)(GLuint memoryObject,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLMINSAMPLESHADINGPROC)(GLfloat value);
typedef void (GL_APIENTRY * PFNGLMINSAMPLESHADINGARBPROC)(GLfloat value);
typedef void (GL_APIENTRY * PFNGLMINSAMPLESHADINGOESPROC)(GLfloat value);
typedef void (GL_APIENTRY * PFNGLMINMAXPROC)(GLenum target,GLenum internalformat,GLboolean sink);
typedef void (GL_APIENTRY * PFNGLMINMAXEXTPROC)(GLenum target,GLenum internalformat,GLboolean sink);
typedef void (GL_APIENTRY * PFNGLMULTMATRIXDPROC)(const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLMULTMATRIXFPROC)(const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMULTMATRIXXPROC)(const GLfixed *m);
typedef void (GL_APIENTRY * PFNGLMULTMATRIXXOESPROC)(const GLfixed *m);
typedef void (GL_APIENTRY * PFNGLMULTTRANSPOSEMATRIXDPROC)(const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLMULTTRANSPOSEMATRIXDARBPROC)(const GLdouble *m);
typedef void (GL_APIENTRY * PFNGLMULTTRANSPOSEMATRIXFPROC)(const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMULTTRANSPOSEMATRIXFARBPROC)(const GLfloat *m);
typedef void (GL_APIENTRY * PFNGLMULTTRANSPOSEMATRIXXOESPROC)(const GLfixed *m);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWARRAYSPROC)(GLenum mode,const GLint *first,const GLsizei *count,GLsizei drawcount);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWARRAYSEXTPROC)(GLenum mode,const GLint *first,const GLsizei *count,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTPROC)(GLenum mode,const void *indirect,GLsizei drawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC)(GLenum mode,const void *indirect,GLsizei primcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC)(GLenum mode,const void *indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC)(GLenum mode,const void *indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC)(GLenum mode,const void *indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC)(GLenum mode,const void *indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC)(GLenum mode,const void *indirect,GLsizei drawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC)(GLenum mode,const GLint *first,const GLsizei *count,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSPROC)(GLenum mode,const GLsizei *count,GLenum type,const void *const*indices,GLsizei drawcount);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)(GLenum mode,const GLsizei *count,GLenum type,const void *const*indices,GLsizei drawcount,const GLint *basevertex);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC)(GLenum mode,const GLsizei *count,GLenum type,const void *const*indices,GLsizei drawcount,const GLint *basevertex);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSEXTPROC)(GLenum mode,const GLsizei *count,GLenum type,const void *const*indices,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTPROC)(GLenum mode,GLenum type,const void *indirect,GLsizei drawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC)(GLenum mode,GLenum type,const void *indirect,GLsizei primcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC)(GLenum mode,GLenum type,const void *indirect,GLsizei drawCount,GLsizei maxDrawCount,GLsizei stride,GLint vertexBufferCount);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC)(GLenum mode,GLenum type,const void *indirect,GLsizei drawCount,GLsizei stride,GLint vertexBufferCount);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC)(GLenum mode,GLenum type,const void *indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC)(GLenum mode,GLenum type,const void *indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC)(GLenum mode,GLenum type,const void *indirect,GLsizei drawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC)(GLintptr indirect,GLsizei drawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC)(GLintptr indirect,GLintptr drawcount,GLsizei maxdrawcount,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC)(GLenum mode,GLuint start,GLuint end,const GLint *first,const GLsizei *count,GLsizei primcount);
typedef void (GL_APIENTRY * PFNGLMULTIMODEDRAWARRAYSIBMPROC)(const GLenum *mode,const GLint *first,const GLsizei *count,GLsizei primcount,GLint modestride);
typedef void (GL_APIENTRY * PFNGLMULTIMODEDRAWELEMENTSIBMPROC)(const GLenum *mode,const GLsizei *count,GLenum type,const void *const*indices,GLsizei primcount,GLint modestride);
typedef void (GL_APIENTRY * PFNGLMULTITEXBUFFEREXTPROC)(GLenum texunit,GLenum target,GLenum internalformat,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1BOESPROC)(GLenum texture,GLbyte s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1BVOESPROC)(GLenum texture,const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1DPROC)(GLenum target,GLdouble s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1DARBPROC)(GLenum target,GLdouble s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1DVPROC)(GLenum target,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1DVARBPROC)(GLenum target,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1FPROC)(GLenum target,GLfloat s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1FARBPROC)(GLenum target,GLfloat s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1FVPROC)(GLenum target,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1FVARBPROC)(GLenum target,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1HNVPROC)(GLenum target,GLhalfNV s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1HVNVPROC)(GLenum target,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1IPROC)(GLenum target,GLint s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1IARBPROC)(GLenum target,GLint s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1IVPROC)(GLenum target,const GLint *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1IVARBPROC)(GLenum target,const GLint *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1SPROC)(GLenum target,GLshort s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1SARBPROC)(GLenum target,GLshort s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1SVPROC)(GLenum target,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1SVARBPROC)(GLenum target,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1XOESPROC)(GLenum texture,GLfixed s);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD1XVOESPROC)(GLenum texture,const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2BOESPROC)(GLenum texture,GLbyte s,GLbyte t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2BVOESPROC)(GLenum texture,const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2DPROC)(GLenum target,GLdouble s,GLdouble t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2DARBPROC)(GLenum target,GLdouble s,GLdouble t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2DVPROC)(GLenum target,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2DVARBPROC)(GLenum target,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2FPROC)(GLenum target,GLfloat s,GLfloat t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2FARBPROC)(GLenum target,GLfloat s,GLfloat t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2FVPROC)(GLenum target,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2FVARBPROC)(GLenum target,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2HNVPROC)(GLenum target,GLhalfNV s,GLhalfNV t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2HVNVPROC)(GLenum target,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2IPROC)(GLenum target,GLint s,GLint t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2IARBPROC)(GLenum target,GLint s,GLint t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2IVPROC)(GLenum target,const GLint *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2IVARBPROC)(GLenum target,const GLint *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2SPROC)(GLenum target,GLshort s,GLshort t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2SARBPROC)(GLenum target,GLshort s,GLshort t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2SVPROC)(GLenum target,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2SVARBPROC)(GLenum target,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2XOESPROC)(GLenum texture,GLfixed s,GLfixed t);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD2XVOESPROC)(GLenum texture,const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3BOESPROC)(GLenum texture,GLbyte s,GLbyte t,GLbyte r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3BVOESPROC)(GLenum texture,const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3DPROC)(GLenum target,GLdouble s,GLdouble t,GLdouble r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3DARBPROC)(GLenum target,GLdouble s,GLdouble t,GLdouble r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3DVPROC)(GLenum target,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3DVARBPROC)(GLenum target,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3FPROC)(GLenum target,GLfloat s,GLfloat t,GLfloat r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3FARBPROC)(GLenum target,GLfloat s,GLfloat t,GLfloat r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3FVPROC)(GLenum target,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3FVARBPROC)(GLenum target,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3HNVPROC)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3HVNVPROC)(GLenum target,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3IPROC)(GLenum target,GLint s,GLint t,GLint r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3IARBPROC)(GLenum target,GLint s,GLint t,GLint r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3IVPROC)(GLenum target,const GLint *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3IVARBPROC)(GLenum target,const GLint *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3SPROC)(GLenum target,GLshort s,GLshort t,GLshort r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3SARBPROC)(GLenum target,GLshort s,GLshort t,GLshort r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3SVPROC)(GLenum target,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3SVARBPROC)(GLenum target,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3XOESPROC)(GLenum texture,GLfixed s,GLfixed t,GLfixed r);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD3XVOESPROC)(GLenum texture,const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4BOESPROC)(GLenum texture,GLbyte s,GLbyte t,GLbyte r,GLbyte q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4BVOESPROC)(GLenum texture,const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4DPROC)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4DARBPROC)(GLenum target,GLdouble s,GLdouble t,GLdouble r,GLdouble q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4DVPROC)(GLenum target,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4DVARBPROC)(GLenum target,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4FPROC)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4FARBPROC)(GLenum target,GLfloat s,GLfloat t,GLfloat r,GLfloat q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4FVPROC)(GLenum target,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4FVARBPROC)(GLenum target,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4HNVPROC)(GLenum target,GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4HVNVPROC)(GLenum target,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4IPROC)(GLenum target,GLint s,GLint t,GLint r,GLint q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4IARBPROC)(GLenum target,GLint s,GLint t,GLint r,GLint q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4IVPROC)(GLenum target,const GLint *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4IVARBPROC)(GLenum target,const GLint *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4SPROC)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4SARBPROC)(GLenum target,GLshort s,GLshort t,GLshort r,GLshort q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4SVPROC)(GLenum target,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4SVARBPROC)(GLenum target,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4XPROC)(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4XOESPROC)(GLenum texture,GLfixed s,GLfixed t,GLfixed r,GLfixed q);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORD4XVOESPROC)(GLenum texture,const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORDP1UIPROC)(GLenum texture,GLenum type,GLuint coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORDP1UIVPROC)(GLenum texture,GLenum type,const GLuint *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORDP2UIPROC)(GLenum texture,GLenum type,GLuint coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORDP2UIVPROC)(GLenum texture,GLenum type,const GLuint *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORDP3UIPROC)(GLenum texture,GLenum type,GLuint coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORDP3UIVPROC)(GLenum texture,GLenum type,const GLuint *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORDP4UIPROC)(GLenum texture,GLenum type,GLuint coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORDP4UIVPROC)(GLenum texture,GLenum type,const GLuint *coords);
typedef void (GL_APIENTRY * PFNGLMULTITEXCOORDPOINTEREXTPROC)(GLenum texunit,GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLMULTITEXENVFEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLMULTITEXENVFVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLMULTITEXENVIEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLMULTITEXENVIVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLMULTITEXGENDEXTPROC)(GLenum texunit,GLenum coord,GLenum pname,GLdouble param);
typedef void (GL_APIENTRY * PFNGLMULTITEXGENDVEXTPROC)(GLenum texunit,GLenum coord,GLenum pname,const GLdouble *params);
typedef void (GL_APIENTRY * PFNGLMULTITEXGENFEXTPROC)(GLenum texunit,GLenum coord,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLMULTITEXGENFVEXTPROC)(GLenum texunit,GLenum coord,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLMULTITEXGENIEXTPROC)(GLenum texunit,GLenum coord,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLMULTITEXGENIVEXTPROC)(GLenum texunit,GLenum coord,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLMULTITEXIMAGE1DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLMULTITEXIMAGE2DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLMULTITEXIMAGE3DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLMULTITEXPARAMETERIIVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLMULTITEXPARAMETERIUIVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLMULTITEXPARAMETERFEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLMULTITEXPARAMETERFVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLMULTITEXPARAMETERIEXTPROC)(GLenum texunit,GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLMULTITEXPARAMETERIVEXTPROC)(GLenum texunit,GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLMULTITEXRENDERBUFFEREXTPROC)(GLenum texunit,GLenum target,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLMULTITEXSUBIMAGE1DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLMULTITEXSUBIMAGE2DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLMULTITEXSUBIMAGE3DEXTPROC)(GLenum texunit,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLMULTICASTBARRIERNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLMULTICASTBLITFRAMEBUFFERNVPROC)(GLuint srcGpu,GLuint dstGpu,GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter);
typedef void (GL_APIENTRY * PFNGLMULTICASTBUFFERSUBDATANVPROC)(GLbitfield gpuMask,GLuint buffer,GLintptr offset,GLsizeiptr size,const void *data);
typedef void (GL_APIENTRY * PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC)(GLuint readGpu,GLbitfield writeGpuMask,GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLMULTICASTCOPYIMAGESUBDATANVPROC)(GLuint srcGpu,GLbitfield dstGpuMask,GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth);
typedef void (GL_APIENTRY * PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLuint gpu,GLuint framebuffer,GLuint start,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC)(GLuint gpu,GLuint id,GLenum pname,GLint64 *params);
typedef void (GL_APIENTRY * PFNGLMULTICASTGETQUERYOBJECTIVNVPROC)(GLuint gpu,GLuint id,GLenum pname,GLint *params);
typedef void (GL_APIENTRY * PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC)(GLuint gpu,GLuint id,GLenum pname,GLuint64 *params);
typedef void (GL_APIENTRY * PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC)(GLuint gpu,GLuint id,GLenum pname,GLuint *params);
typedef void (GL_APIENTRY * PFNGLMULTICASTSCISSORARRAYVNVXPROC)(GLuint gpu,GLuint first,GLsizei count,const GLint *v);
typedef void (GL_APIENTRY * PFNGLMULTICASTVIEWPORTARRAYVNVXPROC)(GLuint gpu,GLuint first,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC)(GLuint gpu,GLuint index,GLfloat xcoeff,GLfloat ycoeff);
typedef void (GL_APIENTRY * PFNGLMULTICASTWAITSYNCNVPROC)(GLuint signalGpu,GLbitfield waitGpuMask);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERATTACHMEMORYNVPROC)(GLuint buffer,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERDATAPROC)(GLuint buffer,GLsizeiptr size,const void *data,GLenum usage);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERDATAEXTPROC)(GLuint buffer,GLsizeiptr size,const void *data,GLenum usage);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLuint memory,GLuint64 memOffset,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERSTORAGEPROC)(GLuint buffer,GLsizeiptr size,const void *data,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,GLeglClientBufferEXT clientBuffer,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERSTORAGEEXTPROC)(GLuint buffer,GLsizeiptr size,const void *data,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC)(GLuint buffer,GLsizeiptr size,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERSUBDATAPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void *data);
typedef void (GL_APIENTRY * PFNGLNAMEDBUFFERSUBDATAEXTPROC)(GLuint buffer,GLintptr offset,GLsizeiptr size,const void *data);
typedef void (GL_APIENTRY * PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC)(GLuint readBuffer,GLuint writeBuffer,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC)(GLuint framebuffer,GLenum buf);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC)(GLuint framebuffer,GLsizei n,const GLenum *bufs);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC)(GLuint framebuffer,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC)(GLuint framebuffer,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC)(GLuint framebuffer,GLenum src);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC)(GLuint framebuffer,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC)(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC)(GLuint framebuffer,GLuint start,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREPROC)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC)(GLuint framebuffer,GLuint numsamples,GLuint pixelindex,const GLfloat *values);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC)(GLuint framebuffer,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLenum face);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint layer);
typedef void (GL_APIENTRY * PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC)(GLuint framebuffer,GLenum attachment,GLuint texture,GLint level,GLint baseViewIndex,GLsizei numViews);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC)(GLuint program,GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC)(GLuint program,GLenum target,GLuint index,const GLdouble *params);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC)(GLuint program,GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC)(GLuint program,GLenum target,GLuint index,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC)(GLuint program,GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC)(GLuint program,GLenum target,GLuint index,const GLint *params);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC)(GLuint program,GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC)(GLuint program,GLenum target,GLuint index,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLint *params);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC)(GLuint program,GLenum target,GLuint index,GLsizei count,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLNAMEDPROGRAMSTRINGEXTPROC)(GLuint program,GLenum target,GLenum format,GLsizei len,const void *string);
typedef void (GL_APIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEPROC)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC)(GLuint renderbuffer,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC)(GLuint renderbuffer,GLsizei samples,GLsizei storageSamples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC)(GLuint renderbuffer,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLuint renderbuffer,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLNAMEDSTRINGARBPROC)(GLenum type,GLint namelen,const GLchar *name,GLint stringlen,const GLchar *string);
typedef void (GL_APIENTRY * PFNGLNEWLISTPROC)(GLuint list,GLenum mode);
typedef GLuint (GL_APIENTRY * PFNGLNEWOBJECTBUFFERATIPROC)(GLsizei size,const void *pointer,GLenum usage);
typedef void (GL_APIENTRY * PFNGLNORMAL3BPROC)(GLbyte nx,GLbyte ny,GLbyte nz);
typedef void (GL_APIENTRY * PFNGLNORMAL3BVPROC)(const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLNORMAL3DPROC)(GLdouble nx,GLdouble ny,GLdouble nz);
typedef void (GL_APIENTRY * PFNGLNORMAL3DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLNORMAL3FPROC)(GLfloat nx,GLfloat ny,GLfloat nz);
typedef void (GL_APIENTRY * PFNGLNORMAL3FVERTEX3FSUNPROC)(GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLNORMAL3FVERTEX3FVSUNPROC)(const GLfloat *n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLNORMAL3FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLNORMAL3HNVPROC)(GLhalfNV nx,GLhalfNV ny,GLhalfNV nz);
typedef void (GL_APIENTRY * PFNGLNORMAL3HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLNORMAL3IPROC)(GLint nx,GLint ny,GLint nz);
typedef void (GL_APIENTRY * PFNGLNORMAL3IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLNORMAL3SPROC)(GLshort nx,GLshort ny,GLshort nz);
typedef void (GL_APIENTRY * PFNGLNORMAL3SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLNORMAL3XPROC)(GLfixed nx,GLfixed ny,GLfixed nz);
typedef void (GL_APIENTRY * PFNGLNORMAL3XOESPROC)(GLfixed nx,GLfixed ny,GLfixed nz);
typedef void (GL_APIENTRY * PFNGLNORMAL3XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLNORMALFORMATNVPROC)(GLenum type,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLNORMALP3UIPROC)(GLenum type,GLuint coords);
typedef void (GL_APIENTRY * PFNGLNORMALP3UIVPROC)(GLenum type,const GLuint *coords);
typedef void (GL_APIENTRY * PFNGLNORMALPOINTERPROC)(GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLNORMALPOINTEREXTPROC)(GLenum type,GLsizei stride,GLsizei count,const void *pointer);
typedef void (GL_APIENTRY * PFNGLNORMALPOINTERLISTIBMPROC)(GLenum type,GLint stride,const void **pointer,GLint ptrstride);
typedef void (GL_APIENTRY * PFNGLNORMALPOINTERVINTELPROC)(GLenum type,const void **pointer);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3BATIPROC)(GLenum stream,GLbyte nx,GLbyte ny,GLbyte nz);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3BVATIPROC)(GLenum stream,const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3DATIPROC)(GLenum stream,GLdouble nx,GLdouble ny,GLdouble nz);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3DVATIPROC)(GLenum stream,const GLdouble *coords);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3FATIPROC)(GLenum stream,GLfloat nx,GLfloat ny,GLfloat nz);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3FVATIPROC)(GLenum stream,const GLfloat *coords);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3IATIPROC)(GLenum stream,GLint nx,GLint ny,GLint nz);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3IVATIPROC)(GLenum stream,const GLint *coords);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3SATIPROC)(GLenum stream,GLshort nx,GLshort ny,GLshort nz);
typedef void (GL_APIENTRY * PFNGLNORMALSTREAM3SVATIPROC)(GLenum stream,const GLshort *coords);
typedef void (GL_APIENTRY * PFNGLOBJECTLABELPROC)(GLenum identifier,GLuint name,GLsizei length,const GLchar *label);
typedef void (GL_APIENTRY * PFNGLOBJECTLABELKHRPROC)(GLenum identifier,GLuint name,GLsizei length,const GLchar *label);
typedef void (GL_APIENTRY * PFNGLOBJECTPTRLABELPROC)(const void *ptr,GLsizei length,const GLchar *label);
typedef void (GL_APIENTRY * PFNGLOBJECTPTRLABELKHRPROC)(const void *ptr,GLsizei length,const GLchar *label);
typedef GLenum (GL_APIENTRY * PFNGLOBJECTPURGEABLEAPPLEPROC)(GLenum objectType,GLuint name,GLenum option);
typedef GLenum (GL_APIENTRY * PFNGLOBJECTUNPURGEABLEAPPLEPROC)(GLenum objectType,GLuint name,GLenum option);
typedef void (GL_APIENTRY * PFNGLORTHOPROC)(GLdouble left,GLdouble right,GLdouble bottom,GLdouble top,GLdouble zNear,GLdouble zFar);
typedef void (GL_APIENTRY * PFNGLORTHOFPROC)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f);
typedef void (GL_APIENTRY * PFNGLORTHOFOESPROC)(GLfloat l,GLfloat r,GLfloat b,GLfloat t,GLfloat n,GLfloat f);
typedef void (GL_APIENTRY * PFNGLORTHOXPROC)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f);
typedef void (GL_APIENTRY * PFNGLORTHOXOESPROC)(GLfixed l,GLfixed r,GLfixed b,GLfixed t,GLfixed n,GLfixed f);
typedef void (GL_APIENTRY * PFNGLPNTRIANGLESFATIPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLPNTRIANGLESIATIPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLPASSTEXCOORDATIPROC)(GLuint dst,GLuint coord,GLenum swizzle);
typedef void (GL_APIENTRY * PFNGLPASSTHROUGHPROC)(GLfloat token);
typedef void (GL_APIENTRY * PFNGLPASSTHROUGHXOESPROC)(GLfixed token);
typedef void (GL_APIENTRY * PFNGLPATCHPARAMETERFVPROC)(GLenum pname,const GLfloat *values);
typedef void (GL_APIENTRY * PFNGLPATCHPARAMETERIPROC)(GLenum pname,GLint value);
typedef void (GL_APIENTRY * PFNGLPATCHPARAMETERIEXTPROC)(GLenum pname,GLint value);
typedef void (GL_APIENTRY * PFNGLPATCHPARAMETERIOESPROC)(GLenum pname,GLint value);
typedef void (GL_APIENTRY * PFNGLPATHCOLORGENNVPROC)(GLenum color,GLenum genMode,GLenum colorFormat,const GLfloat *coeffs);
typedef void (GL_APIENTRY * PFNGLPATHCOMMANDSNVPROC)(GLuint path,GLsizei numCommands,const GLubyte *commands,GLsizei numCoords,GLenum coordType,const void *coords);
typedef void (GL_APIENTRY * PFNGLPATHCOORDSNVPROC)(GLuint path,GLsizei numCoords,GLenum coordType,const void *coords);
typedef void (GL_APIENTRY * PFNGLPATHCOVERDEPTHFUNCNVPROC)(GLenum func);
typedef void (GL_APIENTRY * PFNGLPATHDASHARRAYNVPROC)(GLuint path,GLsizei dashCount,const GLfloat *dashArray);
typedef void (GL_APIENTRY * PFNGLPATHFOGGENNVPROC)(GLenum genMode);
typedef GLenum (GL_APIENTRY * PFNGLPATHGLYPHINDEXARRAYNVPROC)(GLuint firstPathName,GLenum fontTarget,const void *fontName,GLbitfield fontStyle,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale);
typedef GLenum (GL_APIENTRY * PFNGLPATHGLYPHINDEXRANGENVPROC)(GLenum fontTarget,const void *fontName,GLbitfield fontStyle,GLuint pathParameterTemplate,GLfloat emScale,GLuint *baseAndCount);
typedef void (GL_APIENTRY * PFNGLPATHGLYPHRANGENVPROC)(GLuint firstPathName,GLenum fontTarget,const void *fontName,GLbitfield fontStyle,GLuint firstGlyph,GLsizei numGlyphs,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale);
typedef void (GL_APIENTRY * PFNGLPATHGLYPHSNVPROC)(GLuint firstPathName,GLenum fontTarget,const void *fontName,GLbitfield fontStyle,GLsizei numGlyphs,GLenum type,const void *charcodes,GLenum handleMissingGlyphs,GLuint pathParameterTemplate,GLfloat emScale);
typedef GLenum (GL_APIENTRY * PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC)(GLuint firstPathName,GLenum fontTarget,GLsizeiptr fontSize,const void *fontData,GLsizei faceIndex,GLuint firstGlyphIndex,GLsizei numGlyphs,GLuint pathParameterTemplate,GLfloat emScale);
typedef void (GL_APIENTRY * PFNGLPATHPARAMETERFNVPROC)(GLuint path,GLenum pname,GLfloat value);
typedef void (GL_APIENTRY * PFNGLPATHPARAMETERFVNVPROC)(GLuint path,GLenum pname,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPATHPARAMETERINVPROC)(GLuint path,GLenum pname,GLint value);
typedef void (GL_APIENTRY * PFNGLPATHPARAMETERIVNVPROC)(GLuint path,GLenum pname,const GLint *value);
typedef void (GL_APIENTRY * PFNGLPATHSTENCILDEPTHOFFSETNVPROC)(GLfloat factor,GLfloat units);
typedef void (GL_APIENTRY * PFNGLPATHSTENCILFUNCNVPROC)(GLenum func,GLint ref,GLuint mask);
typedef void (GL_APIENTRY * PFNGLPATHSTRINGNVPROC)(GLuint path,GLenum format,GLsizei length,const void *pathString);
typedef void (GL_APIENTRY * PFNGLPATHSUBCOMMANDSNVPROC)(GLuint path,GLsizei commandStart,GLsizei commandsToDelete,GLsizei numCommands,const GLubyte *commands,GLsizei numCoords,GLenum coordType,const void *coords);
typedef void (GL_APIENTRY * PFNGLPATHSUBCOORDSNVPROC)(GLuint path,GLsizei coordStart,GLsizei numCoords,GLenum coordType,const void *coords);
typedef void (GL_APIENTRY * PFNGLPATHTEXGENNVPROC)(GLenum texCoordSet,GLenum genMode,GLint components,const GLfloat *coeffs);
typedef void (GL_APIENTRY * PFNGLPAUSETRANSFORMFEEDBACKPROC)(void);
typedef void (GL_APIENTRY * PFNGLPAUSETRANSFORMFEEDBACKNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLPIXELDATARANGENVPROC)(GLenum target,GLsizei length,const void *pointer);
typedef void (GL_APIENTRY * PFNGLPIXELMAPFVPROC)(GLenum map,GLsizei mapsize,const GLfloat *values);
typedef void (GL_APIENTRY * PFNGLPIXELMAPUIVPROC)(GLenum map,GLsizei mapsize,const GLuint *values);
typedef void (GL_APIENTRY * PFNGLPIXELMAPUSVPROC)(GLenum map,GLsizei mapsize,const GLushort *values);
typedef void (GL_APIENTRY * PFNGLPIXELMAPXPROC)(GLenum map,GLint size,const GLfixed *values);
typedef void (GL_APIENTRY * PFNGLPIXELSTOREFPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLPIXELSTOREIPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLPIXELSTOREXPROC)(GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLPIXELTEXGENPARAMETERFSGISPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLPIXELTEXGENPARAMETERFVSGISPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPIXELTEXGENPARAMETERISGISPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLPIXELTEXGENPARAMETERIVSGISPROC)(GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLPIXELTEXGENSGIXPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLPIXELTRANSFERFPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLPIXELTRANSFERIPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLPIXELTRANSFERXOESPROC)(GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLPIXELTRANSFORMPARAMETERFEXTPROC)(GLenum target,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC)(GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPIXELTRANSFORMPARAMETERIEXTPROC)(GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLPIXELZOOMPROC)(GLfloat xfactor,GLfloat yfactor);
typedef void (GL_APIENTRY * PFNGLPIXELZOOMXOESPROC)(GLfixed xfactor,GLfixed yfactor);
typedef GLboolean (GL_APIENTRY * PFNGLPOINTALONGPATHNVPROC)(GLuint path,GLsizei startSegment,GLsizei numSegments,GLfloat distance,GLfloat *x,GLfloat *y,GLfloat *tangentX,GLfloat *tangentY);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERFPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERFARBPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERFEXTPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERFSGISPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERFVPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERFVARBPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERFVEXTPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERFVSGISPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERIPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERINVPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERIVPROC)(GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERIVNVPROC)(GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERXPROC)(GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERXOESPROC)(GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERXVPROC)(GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLPOINTPARAMETERXVOESPROC)(GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLPOINTSIZEPROC)(GLfloat size);
typedef void (GL_APIENTRY * PFNGLPOINTSIZEPOINTEROESPROC)(GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLPOINTSIZEXPROC)(GLfixed size);
typedef void (GL_APIENTRY * PFNGLPOINTSIZEXOESPROC)(GLfixed size);
typedef GLint (GL_APIENTRY * PFNGLPOLLASYNCSGIXPROC)(GLuint *markerp);
typedef GLint (GL_APIENTRY * PFNGLPOLLINSTRUMENTSSGIXPROC)(GLint *marker_p);
typedef void (GL_APIENTRY * PFNGLPOLYGONMODEPROC)(GLenum face,GLenum mode);
typedef void (GL_APIENTRY * PFNGLPOLYGONMODENVPROC)(GLenum face,GLenum mode);
typedef void (GL_APIENTRY * PFNGLPOLYGONOFFSETPROC)(GLfloat factor,GLfloat units);
typedef void (GL_APIENTRY * PFNGLPOLYGONOFFSETCLAMPPROC)(GLfloat factor,GLfloat units,GLfloat clamp);
typedef void (GL_APIENTRY * PFNGLPOLYGONOFFSETCLAMPEXTPROC)(GLfloat factor,GLfloat units,GLfloat clamp);
typedef void (GL_APIENTRY * PFNGLPOLYGONOFFSETEXTPROC)(GLfloat factor,GLfloat bias);
typedef void (GL_APIENTRY * PFNGLPOLYGONOFFSETXPROC)(GLfixed factor,GLfixed units);
typedef void (GL_APIENTRY * PFNGLPOLYGONOFFSETXOESPROC)(GLfixed factor,GLfixed units);
typedef void (GL_APIENTRY * PFNGLPOLYGONSTIPPLEPROC)(const GLubyte *mask);
typedef void (GL_APIENTRY * PFNGLPOPATTRIBPROC)(void);
typedef void (GL_APIENTRY * PFNGLPOPCLIENTATTRIBPROC)(void);
typedef void (GL_APIENTRY * PFNGLPOPDEBUGGROUPPROC)(void);
typedef void (GL_APIENTRY * PFNGLPOPDEBUGGROUPKHRPROC)(void);
typedef void (GL_APIENTRY * PFNGLPOPGROUPMARKEREXTPROC)(void);
typedef void (GL_APIENTRY * PFNGLPOPMATRIXPROC)(void);
typedef void (GL_APIENTRY * PFNGLPOPNAMEPROC)(void);
typedef void (GL_APIENTRY * PFNGLPRESENTFRAMEDUALFILLNVPROC)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLenum target1,GLuint fill1,GLenum target2,GLuint fill2,GLenum target3,GLuint fill3);
typedef void (GL_APIENTRY * PFNGLPRESENTFRAMEKEYEDNVPROC)(GLuint video_slot,GLuint64EXT minPresentTime,GLuint beginPresentTimeId,GLuint presentDurationId,GLenum type,GLenum target0,GLuint fill0,GLuint key0,GLenum target1,GLuint fill1,GLuint key1);
typedef void (GL_APIENTRY * PFNGLPRIMITIVEBOUNDINGBOXPROC)(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW);
typedef void (GL_APIENTRY * PFNGLPRIMITIVEBOUNDINGBOXARBPROC)(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW);
typedef void (GL_APIENTRY * PFNGLPRIMITIVEBOUNDINGBOXEXTPROC)(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW);
typedef void (GL_APIENTRY * PFNGLPRIMITIVEBOUNDINGBOXOESPROC)(GLfloat minX,GLfloat minY,GLfloat minZ,GLfloat minW,GLfloat maxX,GLfloat maxY,GLfloat maxZ,GLfloat maxW);
typedef void (GL_APIENTRY * PFNGLPRIMITIVERESTARTINDEXPROC)(GLuint index);
typedef void (GL_APIENTRY * PFNGLPRIMITIVERESTARTINDEXNVPROC)(GLuint index);
typedef void (GL_APIENTRY * PFNGLPRIMITIVERESTARTNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLPRIORITIZETEXTURESPROC)(GLsizei n,const GLuint *textures,const GLfloat *priorities);
typedef void (GL_APIENTRY * PFNGLPRIORITIZETEXTURESEXTPROC)(GLsizei n,const GLuint *textures,const GLclampf *priorities);
typedef void (GL_APIENTRY * PFNGLPRIORITIZETEXTURESXOESPROC)(GLsizei n,const GLuint *textures,const GLfixed *priorities);
typedef void (GL_APIENTRY * PFNGLPROGRAMBINARYPROC)(GLuint program,GLenum binaryFormat,const void *binary,GLsizei length);
typedef void (GL_APIENTRY * PFNGLPROGRAMBINARYOESPROC)(GLuint program,GLenum binaryFormat,const void *binary,GLint length);
typedef void (GL_APIENTRY * PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC)(GLenum target,GLuint bindingIndex,GLuint wordIndex,GLsizei count,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETER4DARBPROC)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETER4DVARBPROC)(GLenum target,GLuint index,const GLdouble *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETER4FARBPROC)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETER4FVARBPROC)(GLenum target,GLuint index,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETERI4INVPROC)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETERI4IVNVPROC)(GLenum target,GLuint index,const GLint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETERI4UINVPROC)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETERI4UIVNVPROC)(GLenum target,GLuint index,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETERS4FVEXTPROC)(GLenum target,GLuint index,GLsizei count,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETERSI4IVNVPROC)(GLenum target,GLuint index,GLsizei count,const GLint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC)(GLenum target,GLuint index,GLsizei count,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETER4DARBPROC)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETER4DVARBPROC)(GLenum target,GLuint index,const GLdouble *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETER4FARBPROC)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETER4FVARBPROC)(GLenum target,GLuint index,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETERI4INVPROC)(GLenum target,GLuint index,GLint x,GLint y,GLint z,GLint w);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC)(GLenum target,GLuint index,const GLint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETERI4UINVPROC)(GLenum target,GLuint index,GLuint x,GLuint y,GLuint z,GLuint w);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC)(GLenum target,GLuint index,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC)(GLenum target,GLuint index,GLsizei count,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC)(GLenum target,GLuint index,GLsizei count,const GLint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC)(GLenum target,GLuint index,GLsizei count,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMNAMEDPARAMETER4DNVPROC)(GLuint id,GLsizei len,const GLubyte *name,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC)(GLuint id,GLsizei len,const GLubyte *name,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLPROGRAMNAMEDPARAMETER4FNVPROC)(GLuint id,GLsizei len,const GLubyte *name,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC)(GLuint id,GLsizei len,const GLubyte *name,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLPROGRAMPARAMETER4DNVPROC)(GLenum target,GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLPROGRAMPARAMETER4DVNVPROC)(GLenum target,GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLPROGRAMPARAMETER4FNVPROC)(GLenum target,GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLPROGRAMPARAMETER4FVNVPROC)(GLenum target,GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLPROGRAMPARAMETERIPROC)(GLuint program,GLenum pname,GLint value);
typedef void (GL_APIENTRY * PFNGLPROGRAMPARAMETERIARBPROC)(GLuint program,GLenum pname,GLint value);
typedef void (GL_APIENTRY * PFNGLPROGRAMPARAMETERIEXTPROC)(GLuint program,GLenum pname,GLint value);
typedef void (GL_APIENTRY * PFNGLPROGRAMPARAMETERS4DVNVPROC)(GLenum target,GLuint index,GLsizei count,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLPROGRAMPARAMETERS4FVNVPROC)(GLenum target,GLuint index,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC)(GLuint program,GLint location,GLenum genMode,GLint components,const GLfloat *coeffs);
typedef void (GL_APIENTRY * PFNGLPROGRAMSTRINGARBPROC)(GLenum target,GLenum format,GLsizei len,const void *string);
typedef void (GL_APIENTRY * PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC)(GLenum target,GLsizei count,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1DPROC)(GLuint program,GLint location,GLdouble v0);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1DEXTPROC)(GLuint program,GLint location,GLdouble x);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1DVPROC)(GLuint program,GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1DVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1FPROC)(GLuint program,GLint location,GLfloat v0);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1FEXTPROC)(GLuint program,GLint location,GLfloat v0);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1FVPROC)(GLuint program,GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1FVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1IPROC)(GLuint program,GLint location,GLint v0);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1I64ARBPROC)(GLuint program,GLint location,GLint64 x);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1I64NVPROC)(GLuint program,GLint location,GLint64EXT x);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1I64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLint64 *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1I64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLint64EXT *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1IEXTPROC)(GLuint program,GLint location,GLint v0);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1IVPROC)(GLuint program,GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1IVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1UIPROC)(GLuint program,GLint location,GLuint v0);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1UI64ARBPROC)(GLuint program,GLint location,GLuint64 x);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1UI64NVPROC)(GLuint program,GLint location,GLuint64EXT x);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1UI64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1UI64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1UIEXTPROC)(GLuint program,GLint location,GLuint v0);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1UIVPROC)(GLuint program,GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM1UIVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2DPROC)(GLuint program,GLint location,GLdouble v0,GLdouble v1);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2DEXTPROC)(GLuint program,GLint location,GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2DVPROC)(GLuint program,GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2DVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2FPROC)(GLuint program,GLint location,GLfloat v0,GLfloat v1);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2FEXTPROC)(GLuint program,GLint location,GLfloat v0,GLfloat v1);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2FVPROC)(GLuint program,GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2FVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2IPROC)(GLuint program,GLint location,GLint v0,GLint v1);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2I64ARBPROC)(GLuint program,GLint location,GLint64 x,GLint64 y);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2I64NVPROC)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2I64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLint64 *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2I64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLint64EXT *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2IEXTPROC)(GLuint program,GLint location,GLint v0,GLint v1);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2IVPROC)(GLuint program,GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2IVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2UIPROC)(GLuint program,GLint location,GLuint v0,GLuint v1);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2UI64ARBPROC)(GLuint program,GLint location,GLuint64 x,GLuint64 y);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2UI64NVPROC)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2UI64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2UI64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2UIEXTPROC)(GLuint program,GLint location,GLuint v0,GLuint v1);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2UIVPROC)(GLuint program,GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM2UIVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3DPROC)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3DEXTPROC)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3DVPROC)(GLuint program,GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3DVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3FPROC)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3FEXTPROC)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3FVPROC)(GLuint program,GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3FVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3IPROC)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3I64ARBPROC)(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3I64NVPROC)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3I64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLint64 *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3I64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLint64EXT *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3IEXTPROC)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3IVPROC)(GLuint program,GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3IVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3UIPROC)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3UI64ARBPROC)(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3UI64NVPROC)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3UI64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3UI64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3UIEXTPROC)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3UIVPROC)(GLuint program,GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM3UIVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4DPROC)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4DEXTPROC)(GLuint program,GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4DVPROC)(GLuint program,GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4DVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4FPROC)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4FEXTPROC)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4FVPROC)(GLuint program,GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4FVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4IPROC)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4I64ARBPROC)(GLuint program,GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4I64NVPROC)(GLuint program,GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4I64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLint64 *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4I64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLint64EXT *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4IEXTPROC)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4IVPROC)(GLuint program,GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4IVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4UIPROC)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4UI64ARBPROC)(GLuint program,GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4UI64NVPROC)(GLuint program,GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4UI64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4UI64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4UIEXTPROC)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4UIVPROC)(GLuint program,GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORM4UIVEXTPROC)(GLuint program,GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC)(GLuint program,GLint location,GLuint64 value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC)(GLuint program,GLint location,GLuint64 value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC)(GLuint program,GLint location,GLuint64 value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC)(GLuint program,GLint location,GLsizei count,const GLuint64 *values);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC)(GLuint program,GLint location,GLsizei count,const GLuint64 *values);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLuint64 *values);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMUI64NVPROC)(GLuint program,GLint location,GLuint64EXT value);
typedef void (GL_APIENTRY * PFNGLPROGRAMUNIFORMUI64VNVPROC)(GLuint program,GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLPROGRAMVERTEXLIMITNVPROC)(GLenum target,GLint limit);
typedef void (GL_APIENTRY * PFNGLPROVOKINGVERTEXPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLPROVOKINGVERTEXEXTPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLPUSHATTRIBPROC)(GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLPUSHCLIENTATTRIBPROC)(GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC)(GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLPUSHDEBUGGROUPPROC)(GLenum source,GLuint id,GLsizei length,const GLchar *message);
typedef void (GL_APIENTRY * PFNGLPUSHDEBUGGROUPKHRPROC)(GLenum source,GLuint id,GLsizei length,const GLchar *message);
typedef void (GL_APIENTRY * PFNGLPUSHGROUPMARKEREXTPROC)(GLsizei length,const GLchar *marker);
typedef void (GL_APIENTRY * PFNGLPUSHMATRIXPROC)(void);
typedef void (GL_APIENTRY * PFNGLPUSHNAMEPROC)(GLuint name);
typedef void (GL_APIENTRY * PFNGLQUERYCOUNTERPROC)(GLuint id,GLenum target);
typedef void (GL_APIENTRY * PFNGLQUERYCOUNTEREXTPROC)(GLuint id,GLenum target);
typedef GLbitfield (GL_APIENTRY * PFNGLQUERYMATRIXXOESPROC)(GLfixed *mantissa,GLint *exponent);
typedef void (GL_APIENTRY * PFNGLQUERYOBJECTPARAMETERUIAMDPROC)(GLenum target,GLuint id,GLenum pname,GLuint param);
typedef GLint (GL_APIENTRY * PFNGLQUERYRESOURCENVPROC)(GLenum queryType,GLint tagId,GLuint count,GLint *buffer);
typedef void (GL_APIENTRY * PFNGLQUERYRESOURCETAGNVPROC)(GLint tagId,const GLchar *tagString);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2DPROC)(GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2FPROC)(GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2IPROC)(GLint x,GLint y);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2SPROC)(GLshort x,GLshort y);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2XOESPROC)(GLfixed x,GLfixed y);
typedef void (GL_APIENTRY * PFNGLRASTERPOS2XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3DPROC)(GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3FPROC)(GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3IPROC)(GLint x,GLint y,GLint z);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3SPROC)(GLshort x,GLshort y,GLshort z);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3XOESPROC)(GLfixed x,GLfixed y,GLfixed z);
typedef void (GL_APIENTRY * PFNGLRASTERPOS3XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4DPROC)(GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4FPROC)(GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4IPROC)(GLint x,GLint y,GLint z,GLint w);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4SPROC)(GLshort x,GLshort y,GLshort z,GLshort w);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4XOESPROC)(GLfixed x,GLfixed y,GLfixed z,GLfixed w);
typedef void (GL_APIENTRY * PFNGLRASTERPOS4XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLRASTERSAMPLESEXTPROC)(GLuint samples,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLREADBUFFERPROC)(GLenum src);
typedef void (GL_APIENTRY * PFNGLREADBUFFERINDEXEDEXTPROC)(GLenum src,GLint index);
typedef void (GL_APIENTRY * PFNGLREADBUFFERNVPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLREADINSTRUMENTSSGIXPROC)(GLint marker);
typedef void (GL_APIENTRY * PFNGLREADPIXELSPROC)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,void *pixels);
typedef void (GL_APIENTRY * PFNGLREADNPIXELSPROC)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void *data);
typedef void (GL_APIENTRY * PFNGLREADNPIXELSARBPROC)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void *data);
typedef void (GL_APIENTRY * PFNGLREADNPIXELSEXTPROC)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void *data);
typedef void (GL_APIENTRY * PFNGLREADNPIXELSKHRPROC)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,void *data);
typedef GLboolean (GL_APIENTRY * PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC)(GLuint memory,GLuint64 key);
typedef void (GL_APIENTRY * PFNGLRECTDPROC)(GLdouble x1,GLdouble y1,GLdouble x2,GLdouble y2);
typedef void (GL_APIENTRY * PFNGLRECTDVPROC)(const GLdouble *v1,const GLdouble *v2);
typedef void (GL_APIENTRY * PFNGLRECTFPROC)(GLfloat x1,GLfloat y1,GLfloat x2,GLfloat y2);
typedef void (GL_APIENTRY * PFNGLRECTFVPROC)(const GLfloat *v1,const GLfloat *v2);
typedef void (GL_APIENTRY * PFNGLRECTIPROC)(GLint x1,GLint y1,GLint x2,GLint y2);
typedef void (GL_APIENTRY * PFNGLRECTIVPROC)(const GLint *v1,const GLint *v2);
typedef void (GL_APIENTRY * PFNGLRECTSPROC)(GLshort x1,GLshort y1,GLshort x2,GLshort y2);
typedef void (GL_APIENTRY * PFNGLRECTSVPROC)(const GLshort *v1,const GLshort *v2);
typedef void (GL_APIENTRY * PFNGLRECTXOESPROC)(GLfixed x1,GLfixed y1,GLfixed x2,GLfixed y2);
typedef void (GL_APIENTRY * PFNGLRECTXVOESPROC)(const GLfixed *v1,const GLfixed *v2);
typedef void (GL_APIENTRY * PFNGLREFERENCEPLANESGIXPROC)(const GLdouble *equation);
typedef void (GL_APIENTRY * PFNGLRELEASESHADERCOMPILERPROC)(void);
typedef void (GL_APIENTRY * PFNGLRENDERGPUMASKNVPROC)(GLbitfield mask);
typedef GLint (GL_APIENTRY * PFNGLRENDERMODEPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEPROC)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEEXTPROC)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC)(GLenum target,GLsizei samples,GLsizei storageSamples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLRENDERBUFFERSTORAGEOESPROC)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEPOINTERSUNPROC)(GLenum type,GLsizei stride,const void **pointer);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUBSUNPROC)(GLubyte code);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUBVSUNPROC)(const GLubyte *code);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC)(const GLuint *rc,const GLfloat *c,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint rc,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint *rc,const GLfloat *c,const GLfloat *n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC)(GLuint rc,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC)(const GLuint *rc,const GLubyte *c,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC)(GLuint rc,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC)(const GLuint *rc,const GLfloat *n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUISUNPROC)(GLuint code);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLuint rc,GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLuint *rc,const GLfloat *tc,const GLfloat *c,const GLfloat *n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLuint rc,GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLuint *rc,const GLfloat *tc,const GLfloat *n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC)(GLuint rc,GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC)(const GLuint *rc,const GLfloat *tc,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC)(GLuint rc,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC)(const GLuint *rc,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUIVSUNPROC)(const GLuint *code);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUSSUNPROC)(GLushort code);
typedef void (GL_APIENTRY * PFNGLREPLACEMENTCODEUSVSUNPROC)(const GLushort *code);
typedef void (GL_APIENTRY * PFNGLREQUESTRESIDENTPROGRAMSNVPROC)(GLsizei n,const GLuint *programs);
typedef void (GL_APIENTRY * PFNGLRESETHISTOGRAMPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLRESETHISTOGRAMEXTPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLRESETMEMORYOBJECTPARAMETERNVPROC)(GLuint memory,GLenum pname);
typedef void (GL_APIENTRY * PFNGLRESETMINMAXPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLRESETMINMAXEXTPROC)(GLenum target);
typedef void (GL_APIENTRY * PFNGLRESIZEBUFFERSMESAPROC)(void);
typedef void (GL_APIENTRY * PFNGLRESOLVEDEPTHVALUESNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC)(void);
typedef void (GL_APIENTRY * PFNGLRESUMETRANSFORMFEEDBACKPROC)(void);
typedef void (GL_APIENTRY * PFNGLRESUMETRANSFORMFEEDBACKNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLROTATEDPROC)(GLdouble angle,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLROTATEFPROC)(GLfloat angle,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLROTATEXPROC)(GLfixed angle,GLfixed x,GLfixed y,GLfixed z);
typedef void (GL_APIENTRY * PFNGLROTATEXOESPROC)(GLfixed angle,GLfixed x,GLfixed y,GLfixed z);
typedef void (GL_APIENTRY * PFNGLSAMPLECOVERAGEPROC)(GLfloat value,GLboolean invert);
typedef void (GL_APIENTRY * PFNGLSAMPLECOVERAGEARBPROC)(GLfloat value,GLboolean invert);
typedef void (GL_APIENTRY * PFNGLSAMPLECOVERAGEXPROC)(GLclampx value,GLboolean invert);
typedef void (GL_APIENTRY * PFNGLSAMPLECOVERAGEXOESPROC)(GLclampx value,GLboolean invert);
typedef void (GL_APIENTRY * PFNGLSAMPLEMAPATIPROC)(GLuint dst,GLuint interp,GLenum swizzle);
typedef void (GL_APIENTRY * PFNGLSAMPLEMASKEXTPROC)(GLclampf value,GLboolean invert);
typedef void (GL_APIENTRY * PFNGLSAMPLEMASKINDEXEDNVPROC)(GLuint index,GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLSAMPLEMASKSGISPROC)(GLclampf value,GLboolean invert);
typedef void (GL_APIENTRY * PFNGLSAMPLEMASKIPROC)(GLuint maskNumber,GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLSAMPLEPATTERNEXTPROC)(GLenum pattern);
typedef void (GL_APIENTRY * PFNGLSAMPLEPATTERNSGISPROC)(GLenum pattern);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERIIVPROC)(GLuint sampler,GLenum pname,const GLint *param);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERIIVEXTPROC)(GLuint sampler,GLenum pname,const GLint *param);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERIIVOESPROC)(GLuint sampler,GLenum pname,const GLint *param);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERIUIVPROC)(GLuint sampler,GLenum pname,const GLuint *param);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERIUIVEXTPROC)(GLuint sampler,GLenum pname,const GLuint *param);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERIUIVOESPROC)(GLuint sampler,GLenum pname,const GLuint *param);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERFPROC)(GLuint sampler,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERFVPROC)(GLuint sampler,GLenum pname,const GLfloat *param);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERIPROC)(GLuint sampler,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLSAMPLERPARAMETERIVPROC)(GLuint sampler,GLenum pname,const GLint *param);
typedef void (GL_APIENTRY * PFNGLSCALEDPROC)(GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLSCALEFPROC)(GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLSCALEXPROC)(GLfixed x,GLfixed y,GLfixed z);
typedef void (GL_APIENTRY * PFNGLSCALEXOESPROC)(GLfixed x,GLfixed y,GLfixed z);
typedef void (GL_APIENTRY * PFNGLSCISSORPROC)(GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLSCISSORARRAYVPROC)(GLuint first,GLsizei count,const GLint *v);
typedef void (GL_APIENTRY * PFNGLSCISSORARRAYVNVPROC)(GLuint first,GLsizei count,const GLint *v);
typedef void (GL_APIENTRY * PFNGLSCISSORARRAYVOESPROC)(GLuint first,GLsizei count,const GLint *v);
typedef void (GL_APIENTRY * PFNGLSCISSOREXCLUSIVEARRAYVNVPROC)(GLuint first,GLsizei count,const GLint *v);
typedef void (GL_APIENTRY * PFNGLSCISSOREXCLUSIVENVPROC)(GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLSCISSORINDEXEDPROC)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLSCISSORINDEXEDNVPROC)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLSCISSORINDEXEDOESPROC)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLSCISSORINDEXEDVPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLSCISSORINDEXEDVNVPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLSCISSORINDEXEDVOESPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3BPROC)(GLbyte red,GLbyte green,GLbyte blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3BEXTPROC)(GLbyte red,GLbyte green,GLbyte blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3BVPROC)(const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3BVEXTPROC)(const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3DPROC)(GLdouble red,GLdouble green,GLdouble blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3DEXTPROC)(GLdouble red,GLdouble green,GLdouble blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3DVEXTPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3FPROC)(GLfloat red,GLfloat green,GLfloat blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3FEXTPROC)(GLfloat red,GLfloat green,GLfloat blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3FVEXTPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3HNVPROC)(GLhalfNV red,GLhalfNV green,GLhalfNV blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3IPROC)(GLint red,GLint green,GLint blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3IEXTPROC)(GLint red,GLint green,GLint blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3IVEXTPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3SPROC)(GLshort red,GLshort green,GLshort blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3SEXTPROC)(GLshort red,GLshort green,GLshort blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3SVEXTPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3UBPROC)(GLubyte red,GLubyte green,GLubyte blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3UBEXTPROC)(GLubyte red,GLubyte green,GLubyte blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3UBVPROC)(const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3UBVEXTPROC)(const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3UIPROC)(GLuint red,GLuint green,GLuint blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3UIEXTPROC)(GLuint red,GLuint green,GLuint blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3UIVPROC)(const GLuint *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3UIVEXTPROC)(const GLuint *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3USPROC)(GLushort red,GLushort green,GLushort blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3USEXTPROC)(GLushort red,GLushort green,GLushort blue);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3USVPROC)(const GLushort *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLOR3USVEXTPROC)(const GLushort *v);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLORFORMATNVPROC)(GLint size,GLenum type,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLORP3UIPROC)(GLenum type,GLuint color);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLORP3UIVPROC)(GLenum type,const GLuint *color);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLORPOINTERPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLORPOINTEREXTPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLSECONDARYCOLORPOINTERLISTIBMPROC)(GLint size,GLenum type,GLint stride,const void **pointer,GLint ptrstride);
typedef void (GL_APIENTRY * PFNGLSELECTBUFFERPROC)(GLsizei size,GLuint *buffer);
typedef void (GL_APIENTRY * PFNGLSELECTPERFMONITORCOUNTERSAMDPROC)(GLuint monitor,GLboolean enable,GLuint group,GLint numCounters,GLuint *counterList);
typedef void (GL_APIENTRY * PFNGLSEMAPHOREPARAMETERIVNVPROC)(GLuint semaphore,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLSEMAPHOREPARAMETERUI64VEXTPROC)(GLuint semaphore,GLenum pname,const GLuint64 *params);
typedef void (GL_APIENTRY * PFNGLSEPARABLEFILTER2DPROC)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void *row,const void *column);
typedef void (GL_APIENTRY * PFNGLSEPARABLEFILTER2DEXTPROC)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height,GLenum format,GLenum type,const void *row,const void *column);
typedef void (GL_APIENTRY * PFNGLSETFENCEAPPLEPROC)(GLuint fence);
typedef void (GL_APIENTRY * PFNGLSETFENCENVPROC)(GLuint fence,GLenum condition);
typedef void (GL_APIENTRY * PFNGLSETFRAGMENTSHADERCONSTANTATIPROC)(GLuint dst,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLSETINVARIANTEXTPROC)(GLuint id,GLenum type,const void *addr);
typedef void (GL_APIENTRY * PFNGLSETLOCALCONSTANTEXTPROC)(GLuint id,GLenum type,const void *addr);
typedef void (GL_APIENTRY * PFNGLSETMULTISAMPLEFVAMDPROC)(GLenum pname,GLuint index,const GLfloat *val);
typedef void (GL_APIENTRY * PFNGLSHADEMODELPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLSHADERBINARYPROC)(GLsizei count,const GLuint *shaders,GLenum binaryFormat,const void *binary,GLsizei length);
typedef void (GL_APIENTRY * PFNGLSHADEROP1EXTPROC)(GLenum op,GLuint res,GLuint arg1);
typedef void (GL_APIENTRY * PFNGLSHADEROP2EXTPROC)(GLenum op,GLuint res,GLuint arg1,GLuint arg2);
typedef void (GL_APIENTRY * PFNGLSHADEROP3EXTPROC)(GLenum op,GLuint res,GLuint arg1,GLuint arg2,GLuint arg3);
typedef void (GL_APIENTRY * PFNGLSHADERSOURCEPROC)(GLuint shader,GLsizei count,const GLchar *const*string,const GLint *length);
typedef void (GL_APIENTRY * PFNGLSHADERSOURCEARBPROC)(GLhandleARB shaderObj,GLsizei count,const GLcharARB **string,const GLint *length);
typedef void (GL_APIENTRY * PFNGLSHADERSTORAGEBLOCKBINDINGPROC)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding);
typedef void (GL_APIENTRY * PFNGLSHADINGRATEEXTPROC)(GLenum rate);
typedef void (GL_APIENTRY * PFNGLSHADINGRATECOMBINEROPSEXTPROC)(GLenum combinerOp0,GLenum combinerOp1);
typedef void (GL_APIENTRY * PFNGLSHADINGRATEIMAGEBARRIERNVPROC)(GLboolean synchronize);
typedef void (GL_APIENTRY * PFNGLSHADINGRATEQCOMPROC)(GLenum rate);
typedef void (GL_APIENTRY * PFNGLSHADINGRATEIMAGEPALETTENVPROC)(GLuint viewport,GLuint first,GLsizei count,const GLenum *rates);
typedef void (GL_APIENTRY * PFNGLSHADINGRATESAMPLEORDERNVPROC)(GLenum order);
typedef void (GL_APIENTRY * PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC)(GLenum rate,GLuint samples,const GLint *locations);
typedef void (GL_APIENTRY * PFNGLSHARPENTEXFUNCSGISPROC)(GLenum target,GLsizei n,const GLfloat *points);
typedef void (GL_APIENTRY * PFNGLSIGNALSEMAPHOREEXTPROC)(GLuint semaphore,GLuint numBufferBarriers,const GLuint *buffers,GLuint numTextureBarriers,const GLuint *textures,const GLenum *dstLayouts);
typedef void (GL_APIENTRY * PFNGLSIGNALSEMAPHOREUI64NVXPROC)(GLuint signalGpu,GLsizei fenceObjectCount,const GLuint *semaphoreArray,const GLuint64 *fenceValueArray);
typedef void (GL_APIENTRY * PFNGLSPECIALIZESHADERPROC)(GLuint shader,const GLchar *pEntryPoint,GLuint numSpecializationConstants,const GLuint *pConstantIndex,const GLuint *pConstantValue);
typedef void (GL_APIENTRY * PFNGLSPECIALIZESHADERARBPROC)(GLuint shader,const GLchar *pEntryPoint,GLuint numSpecializationConstants,const GLuint *pConstantIndex,const GLuint *pConstantValue);
typedef void (GL_APIENTRY * PFNGLSPRITEPARAMETERFSGIXPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLSPRITEPARAMETERFVSGIXPROC)(GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLSPRITEPARAMETERISGIXPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLSPRITEPARAMETERIVSGIXPROC)(GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLSTARTINSTRUMENTSSGIXPROC)(void);
typedef void (GL_APIENTRY * PFNGLSTARTTILINGQCOMPROC)(GLuint x,GLuint y,GLuint width,GLuint height,GLbitfield preserveMask);
typedef void (GL_APIENTRY * PFNGLSTATECAPTURENVPROC)(GLuint state,GLenum mode);
typedef void (GL_APIENTRY * PFNGLSTENCILCLEARTAGEXTPROC)(GLsizei stencilTagBits,GLuint stencilClearTag);
typedef void (GL_APIENTRY * PFNGLSTENCILFILLPATHINSTANCEDNVPROC)(GLsizei numPaths,GLenum pathNameType,const void *paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum transformType,const GLfloat *transformValues);
typedef void (GL_APIENTRY * PFNGLSTENCILFILLPATHNVPROC)(GLuint path,GLenum fillMode,GLuint mask);
typedef void (GL_APIENTRY * PFNGLSTENCILFUNCPROC)(GLenum func,GLint ref,GLuint mask);
typedef void (GL_APIENTRY * PFNGLSTENCILFUNCSEPARATEPROC)(GLenum face,GLenum func,GLint ref,GLuint mask);
typedef void (GL_APIENTRY * PFNGLSTENCILFUNCSEPARATEATIPROC)(GLenum frontfunc,GLenum backfunc,GLint ref,GLuint mask);
typedef void (GL_APIENTRY * PFNGLSTENCILMASKPROC)(GLuint mask);
typedef void (GL_APIENTRY * PFNGLSTENCILMASKSEPARATEPROC)(GLenum face,GLuint mask);
typedef void (GL_APIENTRY * PFNGLSTENCILOPPROC)(GLenum fail,GLenum zfail,GLenum zpass);
typedef void (GL_APIENTRY * PFNGLSTENCILOPSEPARATEPROC)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass);
typedef void (GL_APIENTRY * PFNGLSTENCILOPSEPARATEATIPROC)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass);
typedef void (GL_APIENTRY * PFNGLSTENCILOPVALUEAMDPROC)(GLenum face,GLuint value);
typedef void (GL_APIENTRY * PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths,GLenum pathNameType,const void *paths,GLuint pathBase,GLint reference,GLuint mask,GLenum transformType,const GLfloat *transformValues);
typedef void (GL_APIENTRY * PFNGLSTENCILSTROKEPATHNVPROC)(GLuint path,GLint reference,GLuint mask);
typedef void (GL_APIENTRY * PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC)(GLsizei numPaths,GLenum pathNameType,const void *paths,GLuint pathBase,GLenum fillMode,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat *transformValues);
typedef void (GL_APIENTRY * PFNGLSTENCILTHENCOVERFILLPATHNVPROC)(GLuint path,GLenum fillMode,GLuint mask,GLenum coverMode);
typedef void (GL_APIENTRY * PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC)(GLsizei numPaths,GLenum pathNameType,const void *paths,GLuint pathBase,GLint reference,GLuint mask,GLenum coverMode,GLenum transformType,const GLfloat *transformValues);
typedef void (GL_APIENTRY * PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC)(GLuint path,GLint reference,GLuint mask,GLenum coverMode);
typedef void (GL_APIENTRY * PFNGLSTOPINSTRUMENTSSGIXPROC)(GLint marker);
typedef void (GL_APIENTRY * PFNGLSTRINGMARKERGREMEDYPROC)(GLsizei len,const void *string);
typedef void (GL_APIENTRY * PFNGLSUBPIXELPRECISIONBIASNVPROC)(GLuint xbits,GLuint ybits);
typedef void (GL_APIENTRY * PFNGLSWIZZLEEXTPROC)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW);
typedef void (GL_APIENTRY * PFNGLSYNCTEXTUREINTELPROC)(GLuint texture);
typedef void (GL_APIENTRY * PFNGLTAGSAMPLEBUFFERSGIXPROC)(void);
typedef void (GL_APIENTRY * PFNGLTANGENT3BEXTPROC)(GLbyte tx,GLbyte ty,GLbyte tz);
typedef void (GL_APIENTRY * PFNGLTANGENT3BVEXTPROC)(const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLTANGENT3DEXTPROC)(GLdouble tx,GLdouble ty,GLdouble tz);
typedef void (GL_APIENTRY * PFNGLTANGENT3DVEXTPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLTANGENT3FEXTPROC)(GLfloat tx,GLfloat ty,GLfloat tz);
typedef void (GL_APIENTRY * PFNGLTANGENT3FVEXTPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTANGENT3IEXTPROC)(GLint tx,GLint ty,GLint tz);
typedef void (GL_APIENTRY * PFNGLTANGENT3IVEXTPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLTANGENT3SEXTPROC)(GLshort tx,GLshort ty,GLshort tz);
typedef void (GL_APIENTRY * PFNGLTANGENT3SVEXTPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLTANGENTPOINTEREXTPROC)(GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLTBUFFERMASK3DFXPROC)(GLuint mask);
typedef void (GL_APIENTRY * PFNGLTESSELLATIONFACTORAMDPROC)(GLfloat factor);
typedef void (GL_APIENTRY * PFNGLTESSELLATIONMODEAMDPROC)(GLenum mode);
typedef GLboolean (GL_APIENTRY * PFNGLTESTFENCEAPPLEPROC)(GLuint fence);
typedef GLboolean (GL_APIENTRY * PFNGLTESTFENCENVPROC)(GLuint fence);
typedef GLboolean (GL_APIENTRY * PFNGLTESTOBJECTAPPLEPROC)(GLenum object,GLuint name);
typedef void (GL_APIENTRY * PFNGLTEXATTACHMEMORYNVPROC)(GLenum target,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXBUFFERPROC)(GLenum target,GLenum internalformat,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLTEXBUFFERARBPROC)(GLenum target,GLenum internalformat,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLTEXBUFFEREXTPROC)(GLenum target,GLenum internalformat,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLTEXBUFFEROESPROC)(GLenum target,GLenum internalformat,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLTEXBUFFERRANGEPROC)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLTEXBUFFERRANGEEXTPROC)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLTEXBUFFERRANGEOESPROC)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLTEXBUMPPARAMETERFVATIPROC)(GLenum pname,const GLfloat *param);
typedef void (GL_APIENTRY * PFNGLTEXBUMPPARAMETERIVATIPROC)(GLenum pname,const GLint *param);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1BOESPROC)(GLbyte s);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1BVOESPROC)(const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1DPROC)(GLdouble s);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1FPROC)(GLfloat s);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1HNVPROC)(GLhalfNV s);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1IPROC)(GLint s);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1SPROC)(GLshort s);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1XOESPROC)(GLfixed s);
typedef void (GL_APIENTRY * PFNGLTEXCOORD1XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2BOESPROC)(GLbyte s,GLbyte t);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2BVOESPROC)(const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2DPROC)(GLdouble s,GLdouble t);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FPROC)(GLfloat s,GLfloat t);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC)(const GLfloat *tc,const GLfloat *c,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC)(GLfloat s,GLfloat t,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat *tc,const GLfloat *c,const GLfloat *n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC)(GLfloat s,GLfloat t,GLubyte r,GLubyte g,GLubyte b,GLubyte a,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC)(const GLfloat *tc,const GLubyte *c,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC)(GLfloat s,GLfloat t,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC)(const GLfloat *tc,const GLfloat *n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FVERTEX3FSUNPROC)(GLfloat s,GLfloat t,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FVERTEX3FVSUNPROC)(const GLfloat *tc,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2HNVPROC)(GLhalfNV s,GLhalfNV t);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2IPROC)(GLint s,GLint t);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2SPROC)(GLshort s,GLshort t);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2XOESPROC)(GLfixed s,GLfixed t);
typedef void (GL_APIENTRY * PFNGLTEXCOORD2XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3BOESPROC)(GLbyte s,GLbyte t,GLbyte r);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3BVOESPROC)(const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3DPROC)(GLdouble s,GLdouble t,GLdouble r);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3FPROC)(GLfloat s,GLfloat t,GLfloat r);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3HNVPROC)(GLhalfNV s,GLhalfNV t,GLhalfNV r);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3IPROC)(GLint s,GLint t,GLint r);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3SPROC)(GLshort s,GLshort t,GLshort r);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3XOESPROC)(GLfixed s,GLfixed t,GLfixed r);
typedef void (GL_APIENTRY * PFNGLTEXCOORD3XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4BOESPROC)(GLbyte s,GLbyte t,GLbyte r,GLbyte q);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4BVOESPROC)(const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4DPROC)(GLdouble s,GLdouble t,GLdouble r,GLdouble q);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4FPROC)(GLfloat s,GLfloat t,GLfloat r,GLfloat q);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat r,GLfloat g,GLfloat b,GLfloat a,GLfloat nx,GLfloat ny,GLfloat nz,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC)(const GLfloat *tc,const GLfloat *c,const GLfloat *n,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4FVERTEX4FSUNPROC)(GLfloat s,GLfloat t,GLfloat p,GLfloat q,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4FVERTEX4FVSUNPROC)(const GLfloat *tc,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4HNVPROC)(GLhalfNV s,GLhalfNV t,GLhalfNV r,GLhalfNV q);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4IPROC)(GLint s,GLint t,GLint r,GLint q);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4SPROC)(GLshort s,GLshort t,GLshort r,GLshort q);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4XOESPROC)(GLfixed s,GLfixed t,GLfixed r,GLfixed q);
typedef void (GL_APIENTRY * PFNGLTEXCOORD4XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORDFORMATNVPROC)(GLint size,GLenum type,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLTEXCOORDP1UIPROC)(GLenum type,GLuint coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORDP1UIVPROC)(GLenum type,const GLuint *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORDP2UIPROC)(GLenum type,GLuint coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORDP2UIVPROC)(GLenum type,const GLuint *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORDP3UIPROC)(GLenum type,GLuint coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORDP3UIVPROC)(GLenum type,const GLuint *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORDP4UIPROC)(GLenum type,GLuint coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORDP4UIVPROC)(GLenum type,const GLuint *coords);
typedef void (GL_APIENTRY * PFNGLTEXCOORDPOINTERPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLTEXCOORDPOINTEREXTPROC)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void *pointer);
typedef void (GL_APIENTRY * PFNGLTEXCOORDPOINTERLISTIBMPROC)(GLint size,GLenum type,GLint stride,const void **pointer,GLint ptrstride);
typedef void (GL_APIENTRY * PFNGLTEXCOORDPOINTERVINTELPROC)(GLint size,GLenum type,const void **pointer);
typedef void (GL_APIENTRY * PFNGLTEXENVFPROC)(GLenum target,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLTEXENVFVPROC)(GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLTEXENVIPROC)(GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLTEXENVIVPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXENVXPROC)(GLenum target,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLTEXENVXOESPROC)(GLenum target,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLTEXENVXVPROC)(GLenum target,GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLTEXENVXVOESPROC)(GLenum target,GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLTEXESTIMATEMOTIONQCOMPROC)(GLuint ref,GLuint target,GLuint output);
typedef void (GL_APIENTRY * PFNGLTEXESTIMATEMOTIONREGIONSQCOMPROC)(GLuint ref,GLuint target,GLuint output,GLuint mask);
typedef void (GL_APIENTRY * PFNGLEXTRAPOLATETEX2DQCOMPROC)(GLuint src1,GLuint src2,GLuint output,GLfloat scaleFactor);
typedef void (GL_APIENTRY * PFNGLTEXFILTERFUNCSGISPROC)(GLenum target,GLenum filter,GLsizei n,const GLfloat *weights);
typedef void (GL_APIENTRY * PFNGLTEXGENDPROC)(GLenum coord,GLenum pname,GLdouble param);
typedef void (GL_APIENTRY * PFNGLTEXGENDVPROC)(GLenum coord,GLenum pname,const GLdouble *params);
typedef void (GL_APIENTRY * PFNGLTEXGENFPROC)(GLenum coord,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLTEXGENFOESPROC)(GLenum coord,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLTEXGENFVPROC)(GLenum coord,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLTEXGENFVOESPROC)(GLenum coord,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLTEXGENIPROC)(GLenum coord,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLTEXGENIOESPROC)(GLenum coord,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLTEXGENIVPROC)(GLenum coord,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXGENIVOESPROC)(GLenum coord,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXGENXOESPROC)(GLenum coord,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLTEXGENXVOESPROC)(GLenum coord,GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE1DPROC)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE2DPROC)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE2DMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE3DPROC)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE3DEXTPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE3DMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE3DOESPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXIMAGE4DSGISPROC)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXPAGECOMMITMENTARBPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLTEXPAGECOMMITMENTEXTPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLTEXPAGECOMMITMENTMEMNVPROC)(GLenum target,GLint layer,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERIIVPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERIIVEXTPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERIIVOESPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERIUIVPROC)(GLenum target,GLenum pname,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERIUIVEXTPROC)(GLenum target,GLenum pname,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERIUIVOESPROC)(GLenum target,GLenum pname,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERFPROC)(GLenum target,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERFVPROC)(GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERIPROC)(GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERIVPROC)(GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERXPROC)(GLenum target,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERXOESPROC)(GLenum target,GLenum pname,GLfixed param);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERXVPROC)(GLenum target,GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLTEXPARAMETERXVOESPROC)(GLenum target,GLenum pname,const GLfixed *params);
typedef void (GL_APIENTRY * PFNGLTEXRENDERBUFFERNVPROC)(GLenum target,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGE1DPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGE1DEXTPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGE2DPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGE2DEXTPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGE2DMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGE3DPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGE3DEXTPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGE3DMULTISAMPLEPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGEATTRIBS2DEXTPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,const GLint* attrib_list);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGEATTRIBS3DEXTPROC)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,const GLint* attrib_list);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGEMEM1DEXTPROC)(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGEMEM2DEXTPROC)(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC)(GLenum target,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGEMEM3DEXTPROC)(GLenum target,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC)(GLenum target,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXSTORAGESPARSEAMDPROC)(GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLTEXSUBIMAGE1DPROC)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXSUBIMAGE1DEXTPROC)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXSUBIMAGE2DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXSUBIMAGE2DEXTPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXSUBIMAGE3DPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXSUBIMAGE3DEXTPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXSUBIMAGE3DOESPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXSUBIMAGE4DSGISPROC)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint woffset,GLsizei width,GLsizei height,GLsizei depth,GLsizei size4d,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTUREATTACHMEMORYNVPROC)(GLuint texture,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXTUREBARRIERPROC)(void);
typedef void (GL_APIENTRY * PFNGLTEXTUREBARRIERNVPROC)(void);
typedef void (GL_APIENTRY * PFNGLTEXTUREBUFFERPROC)(GLuint texture,GLenum internalformat,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLTEXTUREBUFFEREXTPROC)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLTEXTUREBUFFERRANGEPROC)(GLuint texture,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLTEXTUREBUFFERRANGEEXTPROC)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLTEXTURECOLORMASKSGISPROC)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha);
typedef void (GL_APIENTRY * PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC)(GLuint texture,GLuint layer,GLuint focalPoint,GLfloat focalX,GLfloat focalY,GLfloat gainX,GLfloat gainY,GLfloat foveaArea);
typedef void (GL_APIENTRY * PFNGLTEXTUREIMAGE1DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTUREIMAGE2DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations);
typedef void (GL_APIENTRY * PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations);
typedef void (GL_APIENTRY * PFNGLTEXTUREIMAGE3DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC)(GLuint texture,GLenum target,GLsizei coverageSamples,GLsizei colorSamples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations);
typedef void (GL_APIENTRY * PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC)(GLuint texture,GLenum target,GLsizei samples,GLint internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations);
typedef void (GL_APIENTRY * PFNGLTEXTURELIGHTEXTPROC)(GLenum pname);
typedef void (GL_APIENTRY * PFNGLTEXTUREMATERIALEXTPROC)(GLenum face,GLenum mode);
typedef void (GL_APIENTRY * PFNGLTEXTURENORMALEXTPROC)(GLenum mode);
typedef void (GL_APIENTRY * PFNGLTEXTUREPAGECOMMITMENTEXTPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC)(GLuint texture,GLint layer,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset,GLboolean commit);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERIIVPROC)(GLuint texture,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERIIVEXTPROC)(GLuint texture,GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERIUIVPROC)(GLuint texture,GLenum pname,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERIUIVEXTPROC)(GLuint texture,GLenum target,GLenum pname,const GLuint *params);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERFPROC)(GLuint texture,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERFEXTPROC)(GLuint texture,GLenum target,GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERFVPROC)(GLuint texture,GLenum pname,const GLfloat *param);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERFVEXTPROC)(GLuint texture,GLenum target,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERIPROC)(GLuint texture,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERIEXTPROC)(GLuint texture,GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERIVPROC)(GLuint texture,GLenum pname,const GLint *param);
typedef void (GL_APIENTRY * PFNGLTEXTUREPARAMETERIVEXTPROC)(GLuint texture,GLenum target,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLTEXTURERANGEAPPLEPROC)(GLenum target,GLsizei length,const void *pointer);
typedef void (GL_APIENTRY * PFNGLTEXTURERENDERBUFFEREXTPROC)(GLuint texture,GLenum target,GLuint renderbuffer);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE1DPROC)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE1DEXTPROC)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE2DPROC)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE2DEXTPROC)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE3DPROC)(GLuint texture,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE3DEXTPROC)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC)(GLuint texture,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGEMEM1DEXTPROC)(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGEMEM2DEXTPROC)(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC)(GLuint texture,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGEMEM3DEXTPROC)(GLuint texture,GLsizei levels,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC)(GLuint texture,GLsizei samples,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedSampleLocations,GLuint memory,GLuint64 offset);
typedef void (GL_APIENTRY * PFNGLTEXTURESTORAGESPARSEAMDPROC)(GLuint texture,GLenum target,GLenum internalFormat,GLsizei width,GLsizei height,GLsizei depth,GLsizei layers,GLbitfield flags);
typedef void (GL_APIENTRY * PFNGLTEXTURESUBIMAGE1DPROC)(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTURESUBIMAGE1DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTURESUBIMAGE2DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTURESUBIMAGE2DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTURESUBIMAGE3DPROC)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTURESUBIMAGE3DEXTPROC)(GLuint texture,GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const void *pixels);
typedef void (GL_APIENTRY * PFNGLTEXTUREVIEWPROC)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers);
typedef void (GL_APIENTRY * PFNGLTEXTUREVIEWEXTPROC)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers);
typedef void (GL_APIENTRY * PFNGLTEXTUREVIEWOESPROC)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers);
typedef void (GL_APIENTRY * PFNGLTRACKMATRIXNVPROC)(GLenum target,GLuint address,GLenum matrix,GLenum transform);
typedef void (GL_APIENTRY * PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC)(GLsizei count,const GLint *attribs,GLenum bufferMode);
typedef void (GL_APIENTRY * PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC)(GLuint xfb,GLuint index,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC)(GLuint xfb,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size);
typedef void (GL_APIENTRY * PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC)(GLsizei count,const GLint *attribs,GLsizei nbuffers,const GLint *bufstreams,GLenum bufferMode);
typedef void (GL_APIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSPROC)(GLuint program,GLsizei count,const GLchar *const*varyings,GLenum bufferMode);
typedef void (GL_APIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC)(GLuint program,GLsizei count,const GLchar *const*varyings,GLenum bufferMode);
typedef void (GL_APIENTRY * PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC)(GLuint program,GLsizei count,const GLint *locations,GLenum bufferMode);
typedef void (GL_APIENTRY * PFNGLTRANSFORMPATHNVPROC)(GLuint resultPath,GLuint srcPath,GLenum transformType,const GLfloat *transformValues);
typedef void (GL_APIENTRY * PFNGLTRANSLATEDPROC)(GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLTRANSLATEFPROC)(GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLTRANSLATEXPROC)(GLfixed x,GLfixed y,GLfixed z);
typedef void (GL_APIENTRY * PFNGLTRANSLATEXOESPROC)(GLfixed x,GLfixed y,GLfixed z);
typedef void (GL_APIENTRY * PFNGLUNIFORM1DPROC)(GLint location,GLdouble x);
typedef void (GL_APIENTRY * PFNGLUNIFORM1DVPROC)(GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1FPROC)(GLint location,GLfloat v0);
typedef void (GL_APIENTRY * PFNGLUNIFORM1FARBPROC)(GLint location,GLfloat v0);
typedef void (GL_APIENTRY * PFNGLUNIFORM1FVPROC)(GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1FVARBPROC)(GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1IPROC)(GLint location,GLint v0);
typedef void (GL_APIENTRY * PFNGLUNIFORM1I64ARBPROC)(GLint location,GLint64 x);
typedef void (GL_APIENTRY * PFNGLUNIFORM1I64NVPROC)(GLint location,GLint64EXT x);
typedef void (GL_APIENTRY * PFNGLUNIFORM1I64VARBPROC)(GLint location,GLsizei count,const GLint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1I64VNVPROC)(GLint location,GLsizei count,const GLint64EXT *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1IARBPROC)(GLint location,GLint v0);
typedef void (GL_APIENTRY * PFNGLUNIFORM1IVPROC)(GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1IVARBPROC)(GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1UIPROC)(GLint location,GLuint v0);
typedef void (GL_APIENTRY * PFNGLUNIFORM1UI64ARBPROC)(GLint location,GLuint64 x);
typedef void (GL_APIENTRY * PFNGLUNIFORM1UI64NVPROC)(GLint location,GLuint64EXT x);
typedef void (GL_APIENTRY * PFNGLUNIFORM1UI64VARBPROC)(GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1UI64VNVPROC)(GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1UIEXTPROC)(GLint location,GLuint v0);
typedef void (GL_APIENTRY * PFNGLUNIFORM1UIVPROC)(GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM1UIVEXTPROC)(GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2DPROC)(GLint location,GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLUNIFORM2DVPROC)(GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2FPROC)(GLint location,GLfloat v0,GLfloat v1);
typedef void (GL_APIENTRY * PFNGLUNIFORM2FARBPROC)(GLint location,GLfloat v0,GLfloat v1);
typedef void (GL_APIENTRY * PFNGLUNIFORM2FVPROC)(GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2FVARBPROC)(GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2IPROC)(GLint location,GLint v0,GLint v1);
typedef void (GL_APIENTRY * PFNGLUNIFORM2I64ARBPROC)(GLint location,GLint64 x,GLint64 y);
typedef void (GL_APIENTRY * PFNGLUNIFORM2I64NVPROC)(GLint location,GLint64EXT x,GLint64EXT y);
typedef void (GL_APIENTRY * PFNGLUNIFORM2I64VARBPROC)(GLint location,GLsizei count,const GLint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2I64VNVPROC)(GLint location,GLsizei count,const GLint64EXT *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2IARBPROC)(GLint location,GLint v0,GLint v1);
typedef void (GL_APIENTRY * PFNGLUNIFORM2IVPROC)(GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2IVARBPROC)(GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2UIPROC)(GLint location,GLuint v0,GLuint v1);
typedef void (GL_APIENTRY * PFNGLUNIFORM2UI64ARBPROC)(GLint location,GLuint64 x,GLuint64 y);
typedef void (GL_APIENTRY * PFNGLUNIFORM2UI64NVPROC)(GLint location,GLuint64EXT x,GLuint64EXT y);
typedef void (GL_APIENTRY * PFNGLUNIFORM2UI64VARBPROC)(GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2UI64VNVPROC)(GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2UIEXTPROC)(GLint location,GLuint v0,GLuint v1);
typedef void (GL_APIENTRY * PFNGLUNIFORM2UIVPROC)(GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM2UIVEXTPROC)(GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3DPROC)(GLint location,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLUNIFORM3DVPROC)(GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3FPROC)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2);
typedef void (GL_APIENTRY * PFNGLUNIFORM3FARBPROC)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2);
typedef void (GL_APIENTRY * PFNGLUNIFORM3FVPROC)(GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3FVARBPROC)(GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3IPROC)(GLint location,GLint v0,GLint v1,GLint v2);
typedef void (GL_APIENTRY * PFNGLUNIFORM3I64ARBPROC)(GLint location,GLint64 x,GLint64 y,GLint64 z);
typedef void (GL_APIENTRY * PFNGLUNIFORM3I64NVPROC)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z);
typedef void (GL_APIENTRY * PFNGLUNIFORM3I64VARBPROC)(GLint location,GLsizei count,const GLint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3I64VNVPROC)(GLint location,GLsizei count,const GLint64EXT *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3IARBPROC)(GLint location,GLint v0,GLint v1,GLint v2);
typedef void (GL_APIENTRY * PFNGLUNIFORM3IVPROC)(GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3IVARBPROC)(GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3UIPROC)(GLint location,GLuint v0,GLuint v1,GLuint v2);
typedef void (GL_APIENTRY * PFNGLUNIFORM3UI64ARBPROC)(GLint location,GLuint64 x,GLuint64 y,GLuint64 z);
typedef void (GL_APIENTRY * PFNGLUNIFORM3UI64NVPROC)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z);
typedef void (GL_APIENTRY * PFNGLUNIFORM3UI64VARBPROC)(GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3UI64VNVPROC)(GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3UIEXTPROC)(GLint location,GLuint v0,GLuint v1,GLuint v2);
typedef void (GL_APIENTRY * PFNGLUNIFORM3UIVPROC)(GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM3UIVEXTPROC)(GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4DPROC)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLUNIFORM4DVPROC)(GLint location,GLsizei count,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4FPROC)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3);
typedef void (GL_APIENTRY * PFNGLUNIFORM4FARBPROC)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3);
typedef void (GL_APIENTRY * PFNGLUNIFORM4FVPROC)(GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4FVARBPROC)(GLint location,GLsizei count,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4IPROC)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3);
typedef void (GL_APIENTRY * PFNGLUNIFORM4I64ARBPROC)(GLint location,GLint64 x,GLint64 y,GLint64 z,GLint64 w);
typedef void (GL_APIENTRY * PFNGLUNIFORM4I64NVPROC)(GLint location,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w);
typedef void (GL_APIENTRY * PFNGLUNIFORM4I64VARBPROC)(GLint location,GLsizei count,const GLint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4I64VNVPROC)(GLint location,GLsizei count,const GLint64EXT *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4IARBPROC)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3);
typedef void (GL_APIENTRY * PFNGLUNIFORM4IVPROC)(GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4IVARBPROC)(GLint location,GLsizei count,const GLint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4UIPROC)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3);
typedef void (GL_APIENTRY * PFNGLUNIFORM4UI64ARBPROC)(GLint location,GLuint64 x,GLuint64 y,GLuint64 z,GLuint64 w);
typedef void (GL_APIENTRY * PFNGLUNIFORM4UI64NVPROC)(GLint location,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w);
typedef void (GL_APIENTRY * PFNGLUNIFORM4UI64VARBPROC)(GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4UI64VNVPROC)(GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4UIEXTPROC)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3);
typedef void (GL_APIENTRY * PFNGLUNIFORM4UIVPROC)(GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORM4UIVEXTPROC)(GLint location,GLsizei count,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMBLOCKBINDINGPROC)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding);
typedef void (GL_APIENTRY * PFNGLUNIFORMBUFFEREXTPROC)(GLuint program,GLint location,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLUNIFORMHANDLEUI64ARBPROC)(GLint location,GLuint64 value);
typedef void (GL_APIENTRY * PFNGLUNIFORMHANDLEUI64IMGPROC)(GLint location,GLuint64 value);
typedef void (GL_APIENTRY * PFNGLUNIFORMHANDLEUI64NVPROC)(GLint location,GLuint64 value);
typedef void (GL_APIENTRY * PFNGLUNIFORMHANDLEUI64VARBPROC)(GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMHANDLEUI64VIMGPROC)(GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMHANDLEUI64VNVPROC)(GLint location,GLsizei count,const GLuint64 *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX2DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX2FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX2FVARBPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX2X3DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX2X3FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX2X3FVNVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX2X4DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX2X4FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX2X4FVNVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX3DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX3FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX3FVARBPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX3X2DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX3X2FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX3X2FVNVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX3X4DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX3X4FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX3X4FVNVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX4DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX4FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX4FVARBPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX4X2DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX4X2FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX4X2FVNVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX4X3DVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLdouble *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX4X3FVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMMATRIX4X3FVNVPROC)(GLint location,GLsizei count,GLboolean transpose,const GLfloat *value);
typedef void (GL_APIENTRY * PFNGLUNIFORMSUBROUTINESUIVPROC)(GLenum shadertype,GLsizei count,const GLuint *indices);
typedef void (GL_APIENTRY * PFNGLUNIFORMUI64NVPROC)(GLint location,GLuint64EXT value);
typedef void (GL_APIENTRY * PFNGLUNIFORMUI64VNVPROC)(GLint location,GLsizei count,const GLuint64EXT *value);
typedef void (GL_APIENTRY * PFNGLUNLOCKARRAYSEXTPROC)(void);
typedef GLboolean (GL_APIENTRY * PFNGLUNMAPBUFFERPROC)(GLenum target);
typedef GLboolean (GL_APIENTRY * PFNGLUNMAPBUFFERARBPROC)(GLenum target);
typedef GLboolean (GL_APIENTRY * PFNGLUNMAPBUFFEROESPROC)(GLenum target);
typedef GLboolean (GL_APIENTRY * PFNGLUNMAPNAMEDBUFFERPROC)(GLuint buffer);
typedef GLboolean (GL_APIENTRY * PFNGLUNMAPNAMEDBUFFEREXTPROC)(GLuint buffer);
typedef void (GL_APIENTRY * PFNGLUNMAPOBJECTBUFFERATIPROC)(GLuint buffer);
typedef void (GL_APIENTRY * PFNGLUNMAPTEXTURE2DINTELPROC)(GLuint texture,GLint level);
typedef void (GL_APIENTRY * PFNGLUPDATEOBJECTBUFFERATIPROC)(GLuint buffer,GLuint offset,GLsizei size,const void *pointer,GLenum preserve);
typedef void (GL_APIENTRY * PFNGLUPLOADGPUMASKNVXPROC)(GLbitfield mask);
typedef void (GL_APIENTRY * PFNGLUSEPROGRAMPROC)(GLuint program);
typedef void (GL_APIENTRY * PFNGLUSEPROGRAMOBJECTARBPROC)(GLhandleARB programObj);
typedef void (GL_APIENTRY * PFNGLUSEPROGRAMSTAGESPROC)(GLuint pipeline,GLbitfield stages,GLuint program);
typedef void (GL_APIENTRY * PFNGLUSEPROGRAMSTAGESEXTPROC)(GLuint pipeline,GLbitfield stages,GLuint program);
typedef void (GL_APIENTRY * PFNGLUSESHADERPROGRAMEXTPROC)(GLenum type,GLuint program);
typedef void (GL_APIENTRY * PFNGLVDPAUFININVPROC)(void);
typedef void (GL_APIENTRY * PFNGLVDPAUGETSURFACEIVNVPROC)(GLvdpauSurfaceNV surface,GLenum pname,GLsizei count,GLsizei *length,GLint *values);
typedef void (GL_APIENTRY * PFNGLVDPAUINITNVPROC)(const void *vdpDevice,const void *getProcAddress);
typedef GLboolean (GL_APIENTRY * PFNGLVDPAUISSURFACENVPROC)(GLvdpauSurfaceNV surface);
typedef void (GL_APIENTRY * PFNGLVDPAUMAPSURFACESNVPROC)(GLsizei numSurfaces,const GLvdpauSurfaceNV *surfaces);
typedef GLvdpauSurfaceNV (GL_APIENTRY * PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC)(const void *vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint *textureNames);
typedef GLvdpauSurfaceNV (GL_APIENTRY * PFNGLVDPAUREGISTERVIDEOSURFACENVPROC)(const void *vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint *textureNames);
typedef GLvdpauSurfaceNV (GL_APIENTRY * PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC)(const void *vdpSurface,GLenum target,GLsizei numTextureNames,const GLuint *textureNames,GLboolean isFrameStructure);
typedef void (GL_APIENTRY * PFNGLVDPAUSURFACEACCESSNVPROC)(GLvdpauSurfaceNV surface,GLenum access);
typedef void (GL_APIENTRY * PFNGLVDPAUUNMAPSURFACESNVPROC)(GLsizei numSurface,const GLvdpauSurfaceNV *surfaces);
typedef void (GL_APIENTRY * PFNGLVDPAUUNREGISTERSURFACENVPROC)(GLvdpauSurfaceNV surface);
typedef void (GL_APIENTRY * PFNGLVALIDATEPROGRAMPROC)(GLuint program);
typedef void (GL_APIENTRY * PFNGLVALIDATEPROGRAMARBPROC)(GLhandleARB programObj);
typedef void (GL_APIENTRY * PFNGLVALIDATEPROGRAMPIPELINEPROC)(GLuint pipeline);
typedef void (GL_APIENTRY * PFNGLVALIDATEPROGRAMPIPELINEEXTPROC)(GLuint pipeline);
typedef void (GL_APIENTRY * PFNGLVARIANTARRAYOBJECTATIPROC)(GLuint id,GLenum type,GLsizei stride,GLuint buffer,GLuint offset);
typedef void (GL_APIENTRY * PFNGLVARIANTPOINTEREXTPROC)(GLuint id,GLenum type,GLuint stride,const void *addr);
typedef void (GL_APIENTRY * PFNGLVARIANTBVEXTPROC)(GLuint id,const GLbyte *addr);
typedef void (GL_APIENTRY * PFNGLVARIANTDVEXTPROC)(GLuint id,const GLdouble *addr);
typedef void (GL_APIENTRY * PFNGLVARIANTFVEXTPROC)(GLuint id,const GLfloat *addr);
typedef void (GL_APIENTRY * PFNGLVARIANTIVEXTPROC)(GLuint id,const GLint *addr);
typedef void (GL_APIENTRY * PFNGLVARIANTSVEXTPROC)(GLuint id,const GLshort *addr);
typedef void (GL_APIENTRY * PFNGLVARIANTUBVEXTPROC)(GLuint id,const GLubyte *addr);
typedef void (GL_APIENTRY * PFNGLVARIANTUIVEXTPROC)(GLuint id,const GLuint *addr);
typedef void (GL_APIENTRY * PFNGLVARIANTUSVEXTPROC)(GLuint id,const GLushort *addr);
typedef void (GL_APIENTRY * PFNGLVERTEX2BOESPROC)(GLbyte x,GLbyte y);
typedef void (GL_APIENTRY * PFNGLVERTEX2BVOESPROC)(const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLVERTEX2DPROC)(GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLVERTEX2DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEX2FPROC)(GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLVERTEX2FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEX2HNVPROC)(GLhalfNV x,GLhalfNV y);
typedef void (GL_APIENTRY * PFNGLVERTEX2HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEX2IPROC)(GLint x,GLint y);
typedef void (GL_APIENTRY * PFNGLVERTEX2IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEX2SPROC)(GLshort x,GLshort y);
typedef void (GL_APIENTRY * PFNGLVERTEX2SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEX2XOESPROC)(GLfixed x);
typedef void (GL_APIENTRY * PFNGLVERTEX2XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLVERTEX3BOESPROC)(GLbyte x,GLbyte y,GLbyte z);
typedef void (GL_APIENTRY * PFNGLVERTEX3BVOESPROC)(const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLVERTEX3DPROC)(GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLVERTEX3DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEX3FPROC)(GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLVERTEX3FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEX3HNVPROC)(GLhalfNV x,GLhalfNV y,GLhalfNV z);
typedef void (GL_APIENTRY * PFNGLVERTEX3HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEX3IPROC)(GLint x,GLint y,GLint z);
typedef void (GL_APIENTRY * PFNGLVERTEX3IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEX3SPROC)(GLshort x,GLshort y,GLshort z);
typedef void (GL_APIENTRY * PFNGLVERTEX3SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEX3XOESPROC)(GLfixed x,GLfixed y);
typedef void (GL_APIENTRY * PFNGLVERTEX3XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLVERTEX4BOESPROC)(GLbyte x,GLbyte y,GLbyte z,GLbyte w);
typedef void (GL_APIENTRY * PFNGLVERTEX4BVOESPROC)(const GLbyte *coords);
typedef void (GL_APIENTRY * PFNGLVERTEX4DPROC)(GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLVERTEX4DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEX4FPROC)(GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLVERTEX4FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEX4HNVPROC)(GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w);
typedef void (GL_APIENTRY * PFNGLVERTEX4HVNVPROC)(const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEX4IPROC)(GLint x,GLint y,GLint z,GLint w);
typedef void (GL_APIENTRY * PFNGLVERTEX4IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEX4SPROC)(GLshort x,GLshort y,GLshort z,GLshort w);
typedef void (GL_APIENTRY * PFNGLVERTEX4SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEX4XOESPROC)(GLfixed x,GLfixed y,GLfixed z);
typedef void (GL_APIENTRY * PFNGLVERTEX4XVOESPROC)(const GLfixed *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYATTRIBBINDINGPROC)(GLuint vaobj,GLuint attribindex,GLuint bindingindex);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYATTRIBFORMATPROC)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYATTRIBIFORMATPROC)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYATTRIBLFORMATPROC)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYBINDINGDIVISORPROC)(GLuint vaobj,GLuint bindingindex,GLuint divisor);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYCOLOROFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYELEMENTBUFFERPROC)(GLuint vaobj,GLuint buffer);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYINDEXOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLenum texunit,GLint size,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYNORMALOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYPARAMETERIAPPLEPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYRANGEAPPLEPROC)(GLsizei length,void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYRANGENVPROC)(GLsizei length,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC)(GLuint vaobj,GLuint attribindex,GLuint bindingindex);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC)(GLuint vaobj,GLuint index,GLuint divisor);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC)(GLuint vaobj,GLuint bindingindex,GLuint divisor);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXBUFFERPROC)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXBUFFERSPROC)(GLuint vaobj,GLuint first,GLsizei count,const GLuint *buffers,const GLintptr *offsets,const GLsizei *strides);
typedef void (GL_APIENTRY * PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC)(GLuint vaobj,GLuint buffer,GLint size,GLenum type,GLsizei stride,GLintptr offset);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1DPROC)(GLuint index,GLdouble x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1DARBPROC)(GLuint index,GLdouble x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1DNVPROC)(GLuint index,GLdouble x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1DVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1DVARBPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1DVNVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1FPROC)(GLuint index,GLfloat x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1FARBPROC)(GLuint index,GLfloat x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1FNVPROC)(GLuint index,GLfloat x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1FVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1FVARBPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1FVNVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1HNVPROC)(GLuint index,GLhalfNV x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1HVNVPROC)(GLuint index,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1SPROC)(GLuint index,GLshort x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1SARBPROC)(GLuint index,GLshort x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1SNVPROC)(GLuint index,GLshort x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1SVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1SVARBPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB1SVNVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2DPROC)(GLuint index,GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2DARBPROC)(GLuint index,GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2DNVPROC)(GLuint index,GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2DVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2DVARBPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2DVNVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2FPROC)(GLuint index,GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2FARBPROC)(GLuint index,GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2FNVPROC)(GLuint index,GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2FVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2FVARBPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2FVNVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2HNVPROC)(GLuint index,GLhalfNV x,GLhalfNV y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2HVNVPROC)(GLuint index,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2SPROC)(GLuint index,GLshort x,GLshort y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2SARBPROC)(GLuint index,GLshort x,GLshort y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2SNVPROC)(GLuint index,GLshort x,GLshort y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2SVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2SVARBPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB2SVNVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3DPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3DARBPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3DNVPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3DVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3DVARBPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3DVNVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3FPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3FARBPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3FNVPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3FVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3FVARBPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3FVNVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3HNVPROC)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3HVNVPROC)(GLuint index,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3SPROC)(GLuint index,GLshort x,GLshort y,GLshort z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3SARBPROC)(GLuint index,GLshort x,GLshort y,GLshort z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3SNVPROC)(GLuint index,GLshort x,GLshort y,GLshort z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3SVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3SVARBPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB3SVNVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NBVPROC)(GLuint index,const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NBVARBPROC)(GLuint index,const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NIVPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NIVARBPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NSVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NSVARBPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NUBPROC)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NUBARBPROC)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NUBVPROC)(GLuint index,const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NUBVARBPROC)(GLuint index,const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NUIVPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NUIVARBPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NUSVPROC)(GLuint index,const GLushort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4NUSVARBPROC)(GLuint index,const GLushort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4BVPROC)(GLuint index,const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4BVARBPROC)(GLuint index,const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4DPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4DARBPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4DNVPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4DVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4DVARBPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4DVNVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4FPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4FARBPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4FNVPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4FVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4FVARBPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4FVNVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4HNVPROC)(GLuint index,GLhalfNV x,GLhalfNV y,GLhalfNV z,GLhalfNV w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4HVNVPROC)(GLuint index,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4IVPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4IVARBPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4SPROC)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4SARBPROC)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4SNVPROC)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4SVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4SVARBPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4SVNVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4UBNVPROC)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4UBVPROC)(GLuint index,const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4UBVARBPROC)(GLuint index,const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4UBVNVPROC)(GLuint index,const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4UIVPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4UIVARBPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4USVPROC)(GLuint index,const GLushort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIB4USVARBPROC)(GLuint index,const GLushort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBARRAYOBJECTATIPROC)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,GLuint buffer,GLuint offset);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBBINDINGPROC)(GLuint attribindex,GLuint bindingindex);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBDIVISORPROC)(GLuint index,GLuint divisor);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBDIVISORANGLEPROC)(GLuint index,GLuint divisor);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBDIVISORARBPROC)(GLuint index,GLuint divisor);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBDIVISOREXTPROC)(GLuint index,GLuint divisor);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBDIVISORNVPROC)(GLuint index,GLuint divisor);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBFORMATPROC)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBFORMATNVPROC)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI1IPROC)(GLuint index,GLint x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI1IEXTPROC)(GLuint index,GLint x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI1IVPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI1IVEXTPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI1UIPROC)(GLuint index,GLuint x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI1UIEXTPROC)(GLuint index,GLuint x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI1UIVPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI1UIVEXTPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI2IPROC)(GLuint index,GLint x,GLint y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI2IEXTPROC)(GLuint index,GLint x,GLint y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI2IVPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI2IVEXTPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI2UIPROC)(GLuint index,GLuint x,GLuint y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI2UIEXTPROC)(GLuint index,GLuint x,GLuint y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI2UIVPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI2UIVEXTPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI3IPROC)(GLuint index,GLint x,GLint y,GLint z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI3IEXTPROC)(GLuint index,GLint x,GLint y,GLint z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI3IVPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI3IVEXTPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI3UIPROC)(GLuint index,GLuint x,GLuint y,GLuint z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI3UIEXTPROC)(GLuint index,GLuint x,GLuint y,GLuint z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI3UIVPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI3UIVEXTPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4BVPROC)(GLuint index,const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4BVEXTPROC)(GLuint index,const GLbyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4IPROC)(GLuint index,GLint x,GLint y,GLint z,GLint w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4IEXTPROC)(GLuint index,GLint x,GLint y,GLint z,GLint w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4IVPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4IVEXTPROC)(GLuint index,const GLint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4SVPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4SVEXTPROC)(GLuint index,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4UBVPROC)(GLuint index,const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4UBVEXTPROC)(GLuint index,const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4UIPROC)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4UIEXTPROC)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4UIVPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4UIVEXTPROC)(GLuint index,const GLuint *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4USVPROC)(GLuint index,const GLushort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBI4USVEXTPROC)(GLuint index,const GLushort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBIFORMATPROC)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBIFORMATNVPROC)(GLuint index,GLint size,GLenum type,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBIPOINTERPROC)(GLuint index,GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBIPOINTEREXTPROC)(GLuint index,GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1DPROC)(GLuint index,GLdouble x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1DEXTPROC)(GLuint index,GLdouble x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1DVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1DVEXTPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1I64NVPROC)(GLuint index,GLint64EXT x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1I64VNVPROC)(GLuint index,const GLint64EXT *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1UI64ARBPROC)(GLuint index,GLuint64EXT x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1UI64NVPROC)(GLuint index,GLuint64EXT x);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1UI64VARBPROC)(GLuint index,const GLuint64EXT *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL1UI64VNVPROC)(GLuint index,const GLuint64EXT *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL2DPROC)(GLuint index,GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL2DEXTPROC)(GLuint index,GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL2DVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL2DVEXTPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL2I64NVPROC)(GLuint index,GLint64EXT x,GLint64EXT y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL2I64VNVPROC)(GLuint index,const GLint64EXT *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL2UI64NVPROC)(GLuint index,GLuint64EXT x,GLuint64EXT y);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL2UI64VNVPROC)(GLuint index,const GLuint64EXT *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL3DPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL3DEXTPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL3DVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL3DVEXTPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL3I64NVPROC)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL3I64VNVPROC)(GLuint index,const GLint64EXT *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL3UI64NVPROC)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL3UI64VNVPROC)(GLuint index,const GLuint64EXT *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL4DPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL4DEXTPROC)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL4DVPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL4DVEXTPROC)(GLuint index,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL4I64NVPROC)(GLuint index,GLint64EXT x,GLint64EXT y,GLint64EXT z,GLint64EXT w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL4I64VNVPROC)(GLuint index,const GLint64EXT *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL4UI64NVPROC)(GLuint index,GLuint64EXT x,GLuint64EXT y,GLuint64EXT z,GLuint64EXT w);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBL4UI64VNVPROC)(GLuint index,const GLuint64EXT *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBLFORMATPROC)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBLFORMATNVPROC)(GLuint index,GLint size,GLenum type,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBLPOINTERPROC)(GLuint index,GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBLPOINTEREXTPROC)(GLuint index,GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBP1UIPROC)(GLuint index,GLenum type,GLboolean normalized,GLuint value);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBP1UIVPROC)(GLuint index,GLenum type,GLboolean normalized,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBP2UIPROC)(GLuint index,GLenum type,GLboolean normalized,GLuint value);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBP2UIVPROC)(GLuint index,GLenum type,GLboolean normalized,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBP3UIPROC)(GLuint index,GLenum type,GLboolean normalized,GLuint value);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBP3UIVPROC)(GLuint index,GLenum type,GLboolean normalized,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBP4UIPROC)(GLuint index,GLenum type,GLboolean normalized,GLuint value);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBP4UIVPROC)(GLuint index,GLenum type,GLboolean normalized,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBPARAMETERIAMDPROC)(GLuint index,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBPOINTERPROC)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBPOINTERARBPROC)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBPOINTERNVPROC)(GLuint index,GLint fsize,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS1DVNVPROC)(GLuint index,GLsizei count,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS1FVNVPROC)(GLuint index,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS1HVNVPROC)(GLuint index,GLsizei n,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS1SVNVPROC)(GLuint index,GLsizei count,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS2DVNVPROC)(GLuint index,GLsizei count,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS2FVNVPROC)(GLuint index,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS2HVNVPROC)(GLuint index,GLsizei n,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS2SVNVPROC)(GLuint index,GLsizei count,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS3DVNVPROC)(GLuint index,GLsizei count,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS3FVNVPROC)(GLuint index,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS3HVNVPROC)(GLuint index,GLsizei n,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS3SVNVPROC)(GLuint index,GLsizei count,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS4DVNVPROC)(GLuint index,GLsizei count,const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS4FVNVPROC)(GLuint index,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS4HVNVPROC)(GLuint index,GLsizei n,const GLhalfNV *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS4SVNVPROC)(GLuint index,GLsizei count,const GLshort *v);
typedef void (GL_APIENTRY * PFNGLVERTEXATTRIBS4UBVNVPROC)(GLuint index,GLsizei count,const GLubyte *v);
typedef void (GL_APIENTRY * PFNGLVERTEXBINDINGDIVISORPROC)(GLuint bindingindex,GLuint divisor);
typedef void (GL_APIENTRY * PFNGLVERTEXBLENDARBPROC)(GLint count);
typedef void (GL_APIENTRY * PFNGLVERTEXBLENDENVFATIPROC)(GLenum pname,GLfloat param);
typedef void (GL_APIENTRY * PFNGLVERTEXBLENDENVIATIPROC)(GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLVERTEXFORMATNVPROC)(GLint size,GLenum type,GLsizei stride);
typedef void (GL_APIENTRY * PFNGLVERTEXP2UIPROC)(GLenum type,GLuint value);
typedef void (GL_APIENTRY * PFNGLVERTEXP2UIVPROC)(GLenum type,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLVERTEXP3UIPROC)(GLenum type,GLuint value);
typedef void (GL_APIENTRY * PFNGLVERTEXP3UIVPROC)(GLenum type,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLVERTEXP4UIPROC)(GLenum type,GLuint value);
typedef void (GL_APIENTRY * PFNGLVERTEXP4UIVPROC)(GLenum type,const GLuint *value);
typedef void (GL_APIENTRY * PFNGLVERTEXPOINTERPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXPOINTEREXTPROC)(GLint size,GLenum type,GLsizei stride,GLsizei count,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXPOINTERLISTIBMPROC)(GLint size,GLenum type,GLint stride,const void **pointer,GLint ptrstride);
typedef void (GL_APIENTRY * PFNGLVERTEXPOINTERVINTELPROC)(GLint size,GLenum type,const void **pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM1DATIPROC)(GLenum stream,GLdouble x);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM1DVATIPROC)(GLenum stream,const GLdouble *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM1FATIPROC)(GLenum stream,GLfloat x);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM1FVATIPROC)(GLenum stream,const GLfloat *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM1IATIPROC)(GLenum stream,GLint x);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM1IVATIPROC)(GLenum stream,const GLint *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM1SATIPROC)(GLenum stream,GLshort x);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM1SVATIPROC)(GLenum stream,const GLshort *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM2DATIPROC)(GLenum stream,GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM2DVATIPROC)(GLenum stream,const GLdouble *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM2FATIPROC)(GLenum stream,GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM2FVATIPROC)(GLenum stream,const GLfloat *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM2IATIPROC)(GLenum stream,GLint x,GLint y);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM2IVATIPROC)(GLenum stream,const GLint *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM2SATIPROC)(GLenum stream,GLshort x,GLshort y);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM2SVATIPROC)(GLenum stream,const GLshort *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM3DATIPROC)(GLenum stream,GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM3DVATIPROC)(GLenum stream,const GLdouble *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM3FATIPROC)(GLenum stream,GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM3FVATIPROC)(GLenum stream,const GLfloat *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM3IATIPROC)(GLenum stream,GLint x,GLint y,GLint z);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM3IVATIPROC)(GLenum stream,const GLint *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM3SATIPROC)(GLenum stream,GLshort x,GLshort y,GLshort z);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM3SVATIPROC)(GLenum stream,const GLshort *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM4DATIPROC)(GLenum stream,GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM4DVATIPROC)(GLenum stream,const GLdouble *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM4FATIPROC)(GLenum stream,GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM4FVATIPROC)(GLenum stream,const GLfloat *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM4IATIPROC)(GLenum stream,GLint x,GLint y,GLint z,GLint w);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM4IVATIPROC)(GLenum stream,const GLint *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM4SATIPROC)(GLenum stream,GLshort x,GLshort y,GLshort z,GLshort w);
typedef void (GL_APIENTRY * PFNGLVERTEXSTREAM4SVATIPROC)(GLenum stream,const GLshort *coords);
typedef void (GL_APIENTRY * PFNGLVERTEXWEIGHTPOINTEREXTPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLVERTEXWEIGHTFEXTPROC)(GLfloat weight);
typedef void (GL_APIENTRY * PFNGLVERTEXWEIGHTFVEXTPROC)(const GLfloat *weight);
typedef void (GL_APIENTRY * PFNGLVERTEXWEIGHTHNVPROC)(GLhalfNV weight);
typedef void (GL_APIENTRY * PFNGLVERTEXWEIGHTHVNVPROC)(const GLhalfNV *weight);
typedef GLenum (GL_APIENTRY * PFNGLVIDEOCAPTURENVPROC)(GLuint video_capture_slot,GLuint *sequence_num,GLuint64EXT *capture_time);
typedef void (GL_APIENTRY * PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLdouble *params);
typedef void (GL_APIENTRY * PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLfloat *params);
typedef void (GL_APIENTRY * PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC)(GLuint video_capture_slot,GLuint stream,GLenum pname,const GLint *params);
typedef void (GL_APIENTRY * PFNGLVIEWPORTPROC)(GLint x,GLint y,GLsizei width,GLsizei height);
typedef void (GL_APIENTRY * PFNGLVIEWPORTARRAYVPROC)(GLuint first,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVIEWPORTARRAYVNVPROC)(GLuint first,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVIEWPORTARRAYVOESPROC)(GLuint first,GLsizei count,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVIEWPORTINDEXEDFPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h);
typedef void (GL_APIENTRY * PFNGLVIEWPORTINDEXEDFOESPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h);
typedef void (GL_APIENTRY * PFNGLVIEWPORTINDEXEDFNVPROC)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h);
typedef void (GL_APIENTRY * PFNGLVIEWPORTINDEXEDFVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVIEWPORTINDEXEDFVOESPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVIEWPORTINDEXEDFVNVPROC)(GLuint index,const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLVIEWPORTPOSITIONWSCALENVPROC)(GLuint index,GLfloat xcoeff,GLfloat ycoeff);
typedef void (GL_APIENTRY * PFNGLVIEWPORTSWIZZLENVPROC)(GLuint index,GLenum swizzlex,GLenum swizzley,GLenum swizzlez,GLenum swizzlew);
typedef void (GL_APIENTRY * PFNGLWAITSEMAPHOREEXTPROC)(GLuint semaphore,GLuint numBufferBarriers,const GLuint *buffers,GLuint numTextureBarriers,const GLuint *textures,const GLenum *srcLayouts);
typedef void (GL_APIENTRY * PFNGLWAITSEMAPHOREUI64NVXPROC)(GLuint waitGpu,GLsizei fenceObjectCount,const GLuint *semaphoreArray,const GLuint64 *fenceValueArray);
typedef void (GL_APIENTRY * PFNGLWAITSYNCPROC)(GLsync sync,GLbitfield flags,GLuint64 timeout);
typedef void (GL_APIENTRY * PFNGLWAITSYNCAPPLEPROC)(GLsync sync,GLbitfield flags,GLuint64 timeout);
typedef void (GL_APIENTRY * PFNGLWEIGHTPATHSNVPROC)(GLuint resultPath,GLsizei numPaths,const GLuint *paths,const GLfloat *weights);
typedef void (GL_APIENTRY * PFNGLWEIGHTPOINTERARBPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLWEIGHTPOINTEROESPROC)(GLint size,GLenum type,GLsizei stride,const void *pointer);
typedef void (GL_APIENTRY * PFNGLWEIGHTBVARBPROC)(GLint size,const GLbyte *weights);
typedef void (GL_APIENTRY * PFNGLWEIGHTDVARBPROC)(GLint size,const GLdouble *weights);
typedef void (GL_APIENTRY * PFNGLWEIGHTFVARBPROC)(GLint size,const GLfloat *weights);
typedef void (GL_APIENTRY * PFNGLWEIGHTIVARBPROC)(GLint size,const GLint *weights);
typedef void (GL_APIENTRY * PFNGLWEIGHTSVARBPROC)(GLint size,const GLshort *weights);
typedef void (GL_APIENTRY * PFNGLWEIGHTUBVARBPROC)(GLint size,const GLubyte *weights);
typedef void (GL_APIENTRY * PFNGLWEIGHTUIVARBPROC)(GLint size,const GLuint *weights);
typedef void (GL_APIENTRY * PFNGLWEIGHTUSVARBPROC)(GLint size,const GLushort *weights);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2DPROC)(GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2DARBPROC)(GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2DMESAPROC)(GLdouble x,GLdouble y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2DVARBPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2DVMESAPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2FPROC)(GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2FARBPROC)(GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2FMESAPROC)(GLfloat x,GLfloat y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2FVARBPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2FVMESAPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2IPROC)(GLint x,GLint y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2IARBPROC)(GLint x,GLint y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2IMESAPROC)(GLint x,GLint y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2IVARBPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2IVMESAPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2SPROC)(GLshort x,GLshort y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2SARBPROC)(GLshort x,GLshort y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2SMESAPROC)(GLshort x,GLshort y);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2SVARBPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS2SVMESAPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3DPROC)(GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3DARBPROC)(GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3DMESAPROC)(GLdouble x,GLdouble y,GLdouble z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3DVPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3DVARBPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3DVMESAPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3FPROC)(GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3FARBPROC)(GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3FMESAPROC)(GLfloat x,GLfloat y,GLfloat z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3FVPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3FVARBPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3FVMESAPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3IPROC)(GLint x,GLint y,GLint z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3IARBPROC)(GLint x,GLint y,GLint z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3IMESAPROC)(GLint x,GLint y,GLint z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3IVPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3IVARBPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3IVMESAPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3SPROC)(GLshort x,GLshort y,GLshort z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3SARBPROC)(GLshort x,GLshort y,GLshort z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3SMESAPROC)(GLshort x,GLshort y,GLshort z);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3SVPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3SVARBPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS3SVMESAPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS4DMESAPROC)(GLdouble x,GLdouble y,GLdouble z,GLdouble w);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS4DVMESAPROC)(const GLdouble *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS4FMESAPROC)(GLfloat x,GLfloat y,GLfloat z,GLfloat w);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS4FVMESAPROC)(const GLfloat *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS4IMESAPROC)(GLint x,GLint y,GLint z,GLint w);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS4IVMESAPROC)(const GLint *v);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS4SMESAPROC)(GLshort x,GLshort y,GLshort z,GLshort w);
typedef void (GL_APIENTRY * PFNGLWINDOWPOS4SVMESAPROC)(const GLshort *v);
typedef void (GL_APIENTRY * PFNGLWINDOWRECTANGLESEXTPROC)(GLenum mode,GLsizei count,const GLint *box);
typedef void (GL_APIENTRY * PFNGLWRITEMASKEXTPROC)(GLuint res,GLuint in,GLenum outX,GLenum outY,GLenum outZ,GLenum outW);
typedef void (GL_APIENTRY * PFNGLDRAWVKIMAGENVPROC)(GLuint64 vkImage,GLuint sampler,GLfloat x0,GLfloat y0,GLfloat x1,GLfloat y1,GLfloat z,GLfloat s0,GLfloat t0,GLfloat s1,GLfloat t1);
typedef GLVULKANPROCNV (GL_APIENTRY * PFNGLGETVKPROCADDRNVPROC)(const GLchar *name);
typedef void (GL_APIENTRY * PFNGLWAITVKSEMAPHORENVPROC)(GLuint64 vkSemaphore);
typedef void (GL_APIENTRY * PFNGLSIGNALVKSEMAPHORENVPROC)(GLuint64 vkSemaphore);
typedef void (GL_APIENTRY * PFNGLSIGNALVKFENCENVPROC)(GLuint64 vkFence);
typedef void (GL_APIENTRY * PFNGLFRAMEBUFFERPARAMETERIMESAPROC)(GLenum target,GLenum pname,GLint param);
typedef void (GL_APIENTRY * PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC)(GLenum target,GLenum pname,GLint *params);

extern PFNGLACCUMPROC glAccum;
extern PFNGLACCUMXOESPROC glAccumxOES;
extern PFNGLACTIVEPROGRAMEXTPROC glActiveProgramEXT;
extern PFNGLACTIVESHADERPROGRAMPROC glActiveShaderProgram;
extern PFNGLACTIVESHADERPROGRAMEXTPROC glActiveShaderProgramEXT;
extern PFNGLACTIVESTENCILFACEEXTPROC glActiveStencilFaceEXT;
extern PFNGLACTIVETEXTUREPROC glActiveTexture;
extern PFNGLACTIVETEXTUREARBPROC glActiveTextureARB;
extern PFNGLACTIVEVARYINGNVPROC glActiveVaryingNV;
extern PFNGLALPHAFRAGMENTOP1ATIPROC glAlphaFragmentOp1ATI;
extern PFNGLALPHAFRAGMENTOP2ATIPROC glAlphaFragmentOp2ATI;
extern PFNGLALPHAFRAGMENTOP3ATIPROC glAlphaFragmentOp3ATI;
extern PFNGLALPHAFUNCPROC glAlphaFunc;
extern PFNGLALPHAFUNCQCOMPROC glAlphaFuncQCOM;
extern PFNGLALPHAFUNCXPROC glAlphaFuncx;
extern PFNGLALPHAFUNCXOESPROC glAlphaFuncxOES;
extern PFNGLALPHATOCOVERAGEDITHERCONTROLNVPROC glAlphaToCoverageDitherControlNV;
extern PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC glApplyFramebufferAttachmentCMAAINTEL;
extern PFNGLAPPLYTEXTUREEXTPROC glApplyTextureEXT;
extern PFNGLACQUIREKEYEDMUTEXWIN32EXTPROC glAcquireKeyedMutexWin32EXT;
extern PFNGLAREPROGRAMSRESIDENTNVPROC glAreProgramsResidentNV;
extern PFNGLARETEXTURESRESIDENTPROC glAreTexturesResident;
extern PFNGLARETEXTURESRESIDENTEXTPROC glAreTexturesResidentEXT;
extern PFNGLARRAYELEMENTPROC glArrayElement;
extern PFNGLARRAYELEMENTEXTPROC glArrayElementEXT;
extern PFNGLARRAYOBJECTATIPROC glArrayObjectATI;
extern PFNGLASYNCCOPYBUFFERSUBDATANVXPROC glAsyncCopyBufferSubDataNVX;
extern PFNGLASYNCCOPYIMAGESUBDATANVXPROC glAsyncCopyImageSubDataNVX;
extern PFNGLASYNCMARKERSGIXPROC glAsyncMarkerSGIX;
extern PFNGLATTACHOBJECTARBPROC glAttachObjectARB;
extern PFNGLATTACHSHADERPROC glAttachShader;
extern PFNGLBEGINPROC glBegin;
extern PFNGLBEGINCONDITIONALRENDERPROC glBeginConditionalRender;
extern PFNGLBEGINCONDITIONALRENDERNVPROC glBeginConditionalRenderNV;
extern PFNGLBEGINCONDITIONALRENDERNVXPROC glBeginConditionalRenderNVX;
extern PFNGLBEGINFRAGMENTSHADERATIPROC glBeginFragmentShaderATI;
extern PFNGLBEGINOCCLUSIONQUERYNVPROC glBeginOcclusionQueryNV;
extern PFNGLBEGINPERFMONITORAMDPROC glBeginPerfMonitorAMD;
extern PFNGLBEGINPERFQUERYINTELPROC glBeginPerfQueryINTEL;
extern PFNGLBEGINQUERYPROC glBeginQuery;
extern PFNGLBEGINQUERYARBPROC glBeginQueryARB;
extern PFNGLBEGINQUERYEXTPROC glBeginQueryEXT;
extern PFNGLBEGINQUERYINDEXEDPROC glBeginQueryIndexed;
extern PFNGLBEGINTRANSFORMFEEDBACKPROC glBeginTransformFeedback;
extern PFNGLBEGINTRANSFORMFEEDBACKEXTPROC glBeginTransformFeedbackEXT;
extern PFNGLBEGINTRANSFORMFEEDBACKNVPROC glBeginTransformFeedbackNV;
extern PFNGLBEGINVERTEXSHADEREXTPROC glBeginVertexShaderEXT;
extern PFNGLBEGINVIDEOCAPTURENVPROC glBeginVideoCaptureNV;
extern PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
extern PFNGLBINDATTRIBLOCATIONARBPROC glBindAttribLocationARB;
extern PFNGLBINDBUFFERPROC glBindBuffer;
extern PFNGLBINDBUFFERARBPROC glBindBufferARB;
extern PFNGLBINDBUFFERBASEPROC glBindBufferBase;
extern PFNGLBINDBUFFERBASEEXTPROC glBindBufferBaseEXT;
extern PFNGLBINDBUFFERBASENVPROC glBindBufferBaseNV;
extern PFNGLBINDBUFFEROFFSETEXTPROC glBindBufferOffsetEXT;
extern PFNGLBINDBUFFEROFFSETNVPROC glBindBufferOffsetNV;
extern PFNGLBINDBUFFERRANGEPROC glBindBufferRange;
extern PFNGLBINDBUFFERRANGEEXTPROC glBindBufferRangeEXT;
extern PFNGLBINDBUFFERRANGENVPROC glBindBufferRangeNV;
extern PFNGLBINDBUFFERSBASEPROC glBindBuffersBase;
extern PFNGLBINDBUFFERSRANGEPROC glBindBuffersRange;
extern PFNGLBINDFRAGDATALOCATIONPROC glBindFragDataLocation;
extern PFNGLBINDFRAGDATALOCATIONEXTPROC glBindFragDataLocationEXT;
extern PFNGLBINDFRAGDATALOCATIONINDEXEDPROC glBindFragDataLocationIndexed;
extern PFNGLBINDFRAGDATALOCATIONINDEXEDEXTPROC glBindFragDataLocationIndexedEXT;
extern PFNGLBINDFRAGMENTSHADERATIPROC glBindFragmentShaderATI;
extern PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
extern PFNGLBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
extern PFNGLBINDFRAMEBUFFEROESPROC glBindFramebufferOES;
extern PFNGLBINDIMAGETEXTUREPROC glBindImageTexture;
extern PFNGLBINDIMAGETEXTUREEXTPROC glBindImageTextureEXT;
extern PFNGLBINDIMAGETEXTURESPROC glBindImageTextures;
extern PFNGLBINDLIGHTPARAMETEREXTPROC glBindLightParameterEXT;
extern PFNGLBINDMATERIALPARAMETEREXTPROC glBindMaterialParameterEXT;
extern PFNGLBINDMULTITEXTUREEXTPROC glBindMultiTextureEXT;
extern PFNGLBINDPARAMETEREXTPROC glBindParameterEXT;
extern PFNGLBINDPROGRAMARBPROC glBindProgramARB;
extern PFNGLBINDPROGRAMNVPROC glBindProgramNV;
extern PFNGLBINDPROGRAMPIPELINEPROC glBindProgramPipeline;
extern PFNGLBINDPROGRAMPIPELINEEXTPROC glBindProgramPipelineEXT;
extern PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
extern PFNGLBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
extern PFNGLBINDRENDERBUFFEROESPROC glBindRenderbufferOES;
extern PFNGLBINDSAMPLERPROC glBindSampler;
extern PFNGLBINDSAMPLERSPROC glBindSamplers;
extern PFNGLBINDSHADINGRATEIMAGENVPROC glBindShadingRateImageNV;
extern PFNGLBINDTEXGENPARAMETEREXTPROC glBindTexGenParameterEXT;
extern PFNGLBINDTEXTUREPROC glBindTexture;
extern PFNGLBINDTEXTUREEXTPROC glBindTextureEXT;
extern PFNGLBINDTEXTUREUNITPROC glBindTextureUnit;
extern PFNGLBINDTEXTUREUNITPARAMETEREXTPROC glBindTextureUnitParameterEXT;
extern PFNGLBINDTEXTURESPROC glBindTextures;
extern PFNGLBINDTRANSFORMFEEDBACKPROC glBindTransformFeedback;
extern PFNGLBINDTRANSFORMFEEDBACKNVPROC glBindTransformFeedbackNV;
extern PFNGLBINDVERTEXARRAYPROC glBindVertexArray;
extern PFNGLBINDVERTEXARRAYAPPLEPROC glBindVertexArrayAPPLE;
extern PFNGLBINDVERTEXARRAYOESPROC glBindVertexArrayOES;
extern PFNGLBINDVERTEXBUFFERPROC glBindVertexBuffer;
extern PFNGLBINDVERTEXBUFFERSPROC glBindVertexBuffers;
extern PFNGLBINDVERTEXSHADEREXTPROC glBindVertexShaderEXT;
extern PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC glBindVideoCaptureStreamBufferNV;
extern PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC glBindVideoCaptureStreamTextureNV;
extern PFNGLBINORMAL3BEXTPROC glBinormal3bEXT;
extern PFNGLBINORMAL3BVEXTPROC glBinormal3bvEXT;
extern PFNGLBINORMAL3DEXTPROC glBinormal3dEXT;
extern PFNGLBINORMAL3DVEXTPROC glBinormal3dvEXT;
extern PFNGLBINORMAL3FEXTPROC glBinormal3fEXT;
extern PFNGLBINORMAL3FVEXTPROC glBinormal3fvEXT;
extern PFNGLBINORMAL3IEXTPROC glBinormal3iEXT;
extern PFNGLBINORMAL3IVEXTPROC glBinormal3ivEXT;
extern PFNGLBINORMAL3SEXTPROC glBinormal3sEXT;
extern PFNGLBINORMAL3SVEXTPROC glBinormal3svEXT;
extern PFNGLBINORMALPOINTEREXTPROC glBinormalPointerEXT;
extern PFNGLBITMAPPROC glBitmap;
extern PFNGLBITMAPXOESPROC glBitmapxOES;
extern PFNGLBLENDBARRIERPROC glBlendBarrier;
extern PFNGLBLENDBARRIERKHRPROC glBlendBarrierKHR;
extern PFNGLBLENDBARRIERNVPROC glBlendBarrierNV;
extern PFNGLBLENDCOLORPROC glBlendColor;
extern PFNGLBLENDCOLOREXTPROC glBlendColorEXT;
extern PFNGLBLENDCOLORXOESPROC glBlendColorxOES;
extern PFNGLBLENDEQUATIONPROC glBlendEquation;
extern PFNGLBLENDEQUATIONEXTPROC glBlendEquationEXT;
extern PFNGLBLENDEQUATIONINDEXEDAMDPROC glBlendEquationIndexedAMD;
extern PFNGLBLENDEQUATIONOESPROC glBlendEquationOES;
extern PFNGLBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate;
extern PFNGLBLENDEQUATIONSEPARATEEXTPROC glBlendEquationSeparateEXT;
extern PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC glBlendEquationSeparateIndexedAMD;
extern PFNGLBLENDEQUATIONSEPARATEOESPROC glBlendEquationSeparateOES;
extern PFNGLBLENDEQUATIONSEPARATEIPROC glBlendEquationSeparatei;
extern PFNGLBLENDEQUATIONSEPARATEIARBPROC glBlendEquationSeparateiARB;
extern PFNGLBLENDEQUATIONSEPARATEIEXTPROC glBlendEquationSeparateiEXT;
extern PFNGLBLENDEQUATIONSEPARATEIOESPROC glBlendEquationSeparateiOES;
extern PFNGLBLENDEQUATIONIPROC glBlendEquationi;
extern PFNGLBLENDEQUATIONIARBPROC glBlendEquationiARB;
extern PFNGLBLENDEQUATIONIEXTPROC glBlendEquationiEXT;
extern PFNGLBLENDEQUATIONIOESPROC glBlendEquationiOES;
extern PFNGLBLENDFUNCPROC glBlendFunc;
extern PFNGLBLENDFUNCINDEXEDAMDPROC glBlendFuncIndexedAMD;
extern PFNGLBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
extern PFNGLBLENDFUNCSEPARATEEXTPROC glBlendFuncSeparateEXT;
extern PFNGLBLENDFUNCSEPARATEINGRPROC glBlendFuncSeparateINGR;
extern PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC glBlendFuncSeparateIndexedAMD;
extern PFNGLBLENDFUNCSEPARATEOESPROC glBlendFuncSeparateOES;
extern PFNGLBLENDFUNCSEPARATEIPROC glBlendFuncSeparatei;
extern PFNGLBLENDFUNCSEPARATEIARBPROC glBlendFuncSeparateiARB;
extern PFNGLBLENDFUNCSEPARATEIEXTPROC glBlendFuncSeparateiEXT;
extern PFNGLBLENDFUNCSEPARATEIOESPROC glBlendFuncSeparateiOES;
extern PFNGLBLENDFUNCIPROC glBlendFunci;
extern PFNGLBLENDFUNCIARBPROC glBlendFunciARB;
extern PFNGLBLENDFUNCIEXTPROC glBlendFunciEXT;
extern PFNGLBLENDFUNCIOESPROC glBlendFunciOES;
extern PFNGLBLENDPARAMETERINVPROC glBlendParameteriNV;
extern PFNGLBLITFRAMEBUFFERPROC glBlitFramebuffer;
extern PFNGLBLITFRAMEBUFFERANGLEPROC glBlitFramebufferANGLE;
extern PFNGLBLITFRAMEBUFFEREXTPROC glBlitFramebufferEXT;
extern PFNGLBLITFRAMEBUFFERLAYEREXTPROC glBlitFramebufferLayerEXT;
extern PFNGLBLITFRAMEBUFFERLAYERSEXTPROC glBlitFramebufferLayersEXT;
extern PFNGLBLITFRAMEBUFFERNVPROC glBlitFramebufferNV;
extern PFNGLBLITNAMEDFRAMEBUFFERPROC glBlitNamedFramebuffer;
extern PFNGLBUFFERADDRESSRANGENVPROC glBufferAddressRangeNV;
extern PFNGLBUFFERATTACHMEMORYNVPROC glBufferAttachMemoryNV;
extern PFNGLBUFFERDATAPROC glBufferData;
extern PFNGLBUFFERDATAARBPROC glBufferDataARB;
extern PFNGLBUFFERPAGECOMMITMENTARBPROC glBufferPageCommitmentARB;
extern PFNGLBUFFERPAGECOMMITMENTMEMNVPROC glBufferPageCommitmentMemNV;
extern PFNGLBUFFERPARAMETERIAPPLEPROC glBufferParameteriAPPLE;
extern PFNGLBUFFERSTORAGEPROC glBufferStorage;
extern PFNGLBUFFERSTORAGEEXTPROC glBufferStorageEXT;
extern PFNGLBUFFERSTORAGEEXTERNALEXTPROC glBufferStorageExternalEXT;
extern PFNGLBUFFERSTORAGEMEMEXTPROC glBufferStorageMemEXT;
extern PFNGLBUFFERSUBDATAPROC glBufferSubData;
extern PFNGLBUFFERSUBDATAARBPROC glBufferSubDataARB;
extern PFNGLCALLCOMMANDLISTNVPROC glCallCommandListNV;
extern PFNGLCALLLISTPROC glCallList;
extern PFNGLCALLLISTSPROC glCallLists;
extern PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
extern PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
extern PFNGLCHECKFRAMEBUFFERSTATUSOESPROC glCheckFramebufferStatusOES;
extern PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC glCheckNamedFramebufferStatus;
extern PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC glCheckNamedFramebufferStatusEXT;
extern PFNGLCLAMPCOLORPROC glClampColor;
extern PFNGLCLAMPCOLORARBPROC glClampColorARB;
extern PFNGLCLEARPROC glClear;
extern PFNGLCLEARACCUMPROC glClearAccum;
extern PFNGLCLEARACCUMXOESPROC glClearAccumxOES;
extern PFNGLCLEARBUFFERDATAPROC glClearBufferData;
extern PFNGLCLEARBUFFERSUBDATAPROC glClearBufferSubData;
extern PFNGLCLEARBUFFERFIPROC glClearBufferfi;
extern PFNGLCLEARBUFFERFVPROC glClearBufferfv;
extern PFNGLCLEARBUFFERIVPROC glClearBufferiv;
extern PFNGLCLEARBUFFERUIVPROC glClearBufferuiv;
extern PFNGLCLEARCOLORPROC glClearColor;
extern PFNGLCLEARCOLORIIEXTPROC glClearColorIiEXT;
extern PFNGLCLEARCOLORIUIEXTPROC glClearColorIuiEXT;
extern PFNGLCLEARCOLORXPROC glClearColorx;
extern PFNGLCLEARCOLORXOESPROC glClearColorxOES;
extern PFNGLCLEARDEPTHPROC glClearDepth;
extern PFNGLCLEARDEPTHDNVPROC glClearDepthdNV;
extern PFNGLCLEARDEPTHFPROC glClearDepthf;
extern PFNGLCLEARDEPTHFOESPROC glClearDepthfOES;
extern PFNGLCLEARDEPTHXPROC glClearDepthx;
extern PFNGLCLEARDEPTHXOESPROC glClearDepthxOES;
extern PFNGLCLEARINDEXPROC glClearIndex;
extern PFNGLCLEARNAMEDBUFFERDATAPROC glClearNamedBufferData;
extern PFNGLCLEARNAMEDBUFFERDATAEXTPROC glClearNamedBufferDataEXT;
extern PFNGLCLEARNAMEDBUFFERSUBDATAPROC glClearNamedBufferSubData;
extern PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC glClearNamedBufferSubDataEXT;
extern PFNGLCLEARNAMEDFRAMEBUFFERFIPROC glClearNamedFramebufferfi;
extern PFNGLCLEARNAMEDFRAMEBUFFERFVPROC glClearNamedFramebufferfv;
extern PFNGLCLEARNAMEDFRAMEBUFFERIVPROC glClearNamedFramebufferiv;
extern PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC glClearNamedFramebufferuiv;
extern PFNGLCLEARPIXELLOCALSTORAGEUIEXTPROC glClearPixelLocalStorageuiEXT;
extern PFNGLCLEARSTENCILPROC glClearStencil;
extern PFNGLCLEARTEXIMAGEPROC glClearTexImage;
extern PFNGLCLEARTEXIMAGEEXTPROC glClearTexImageEXT;
extern PFNGLCLEARTEXSUBIMAGEPROC glClearTexSubImage;
extern PFNGLCLEARTEXSUBIMAGEEXTPROC glClearTexSubImageEXT;
extern PFNGLCLIENTACTIVETEXTUREPROC glClientActiveTexture;
extern PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
extern PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC glClientActiveVertexStreamATI;
extern PFNGLCLIENTATTRIBDEFAULTEXTPROC glClientAttribDefaultEXT;
extern PFNGLCLIENTWAITSEMAPHOREUI64NVXPROC glClientWaitSemaphoreui64NVX;
extern PFNGLCLIENTWAITSYNCPROC glClientWaitSync;
extern PFNGLCLIENTWAITSYNCAPPLEPROC glClientWaitSyncAPPLE;
extern PFNGLCLIPCONTROLPROC glClipControl;
extern PFNGLCLIPCONTROLEXTPROC glClipControlEXT;
extern PFNGLCLIPPLANEPROC glClipPlane;
extern PFNGLCLIPPLANEFPROC glClipPlanef;
extern PFNGLCLIPPLANEFIMGPROC glClipPlanefIMG;
extern PFNGLCLIPPLANEFOESPROC glClipPlanefOES;
extern PFNGLCLIPPLANEXPROC glClipPlanex;
extern PFNGLCLIPPLANEXIMGPROC glClipPlanexIMG;
extern PFNGLCLIPPLANEXOESPROC glClipPlanexOES;
extern PFNGLCOLOR3BPROC glColor3b;
extern PFNGLCOLOR3BVPROC glColor3bv;
extern PFNGLCOLOR3DPROC glColor3d;
extern PFNGLCOLOR3DVPROC glColor3dv;
extern PFNGLCOLOR3FPROC glColor3f;
extern PFNGLCOLOR3FVERTEX3FSUNPROC glColor3fVertex3fSUN;
extern PFNGLCOLOR3FVERTEX3FVSUNPROC glColor3fVertex3fvSUN;
extern PFNGLCOLOR3FVPROC glColor3fv;
extern PFNGLCOLOR3HNVPROC glColor3hNV;
extern PFNGLCOLOR3HVNVPROC glColor3hvNV;
extern PFNGLCOLOR3IPROC glColor3i;
extern PFNGLCOLOR3IVPROC glColor3iv;
extern PFNGLCOLOR3SPROC glColor3s;
extern PFNGLCOLOR3SVPROC glColor3sv;
extern PFNGLCOLOR3UBPROC glColor3ub;
extern PFNGLCOLOR3UBVPROC glColor3ubv;
extern PFNGLCOLOR3UIPROC glColor3ui;
extern PFNGLCOLOR3UIVPROC glColor3uiv;
extern PFNGLCOLOR3USPROC glColor3us;
extern PFNGLCOLOR3USVPROC glColor3usv;
extern PFNGLCOLOR3XOESPROC glColor3xOES;
extern PFNGLCOLOR3XVOESPROC glColor3xvOES;
extern PFNGLCOLOR4BPROC glColor4b;
extern PFNGLCOLOR4BVPROC glColor4bv;
extern PFNGLCOLOR4DPROC glColor4d;
extern PFNGLCOLOR4DVPROC glColor4dv;
extern PFNGLCOLOR4FPROC glColor4f;
extern PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC glColor4fNormal3fVertex3fSUN;
extern PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC glColor4fNormal3fVertex3fvSUN;
extern PFNGLCOLOR4FVPROC glColor4fv;
extern PFNGLCOLOR4HNVPROC glColor4hNV;
extern PFNGLCOLOR4HVNVPROC glColor4hvNV;
extern PFNGLCOLOR4IPROC glColor4i;
extern PFNGLCOLOR4IVPROC glColor4iv;
extern PFNGLCOLOR4SPROC glColor4s;
extern PFNGLCOLOR4SVPROC glColor4sv;
extern PFNGLCOLOR4UBPROC glColor4ub;
extern PFNGLCOLOR4UBVERTEX2FSUNPROC glColor4ubVertex2fSUN;
extern PFNGLCOLOR4UBVERTEX2FVSUNPROC glColor4ubVertex2fvSUN;
extern PFNGLCOLOR4UBVERTEX3FSUNPROC glColor4ubVertex3fSUN;
extern PFNGLCOLOR4UBVERTEX3FVSUNPROC glColor4ubVertex3fvSUN;
extern PFNGLCOLOR4UBVPROC glColor4ubv;
extern PFNGLCOLOR4UIPROC glColor4ui;
extern PFNGLCOLOR4UIVPROC glColor4uiv;
extern PFNGLCOLOR4USPROC glColor4us;
extern PFNGLCOLOR4USVPROC glColor4usv;
extern PFNGLCOLOR4XPROC glColor4x;
extern PFNGLCOLOR4XOESPROC glColor4xOES;
extern PFNGLCOLOR4XVOESPROC glColor4xvOES;
extern PFNGLCOLORFORMATNVPROC glColorFormatNV;
extern PFNGLCOLORFRAGMENTOP1ATIPROC glColorFragmentOp1ATI;
extern PFNGLCOLORFRAGMENTOP2ATIPROC glColorFragmentOp2ATI;
extern PFNGLCOLORFRAGMENTOP3ATIPROC glColorFragmentOp3ATI;
extern PFNGLCOLORMASKPROC glColorMask;
extern PFNGLCOLORMASKINDEXEDEXTPROC glColorMaskIndexedEXT;
extern PFNGLCOLORMASKIPROC glColorMaski;
extern PFNGLCOLORMASKIEXTPROC glColorMaskiEXT;
extern PFNGLCOLORMASKIOESPROC glColorMaskiOES;
extern PFNGLCOLORMATERIALPROC glColorMaterial;
extern PFNGLCOLORP3UIPROC glColorP3ui;
extern PFNGLCOLORP3UIVPROC glColorP3uiv;
extern PFNGLCOLORP4UIPROC glColorP4ui;
extern PFNGLCOLORP4UIVPROC glColorP4uiv;
extern PFNGLCOLORPOINTERPROC glColorPointer;
extern PFNGLCOLORPOINTEREXTPROC glColorPointerEXT;
extern PFNGLCOLORPOINTERLISTIBMPROC glColorPointerListIBM;
extern PFNGLCOLORPOINTERVINTELPROC glColorPointervINTEL;
extern PFNGLCOLORSUBTABLEPROC glColorSubTable;
extern PFNGLCOLORSUBTABLEEXTPROC glColorSubTableEXT;
extern PFNGLCOLORTABLEPROC glColorTable;
extern PFNGLCOLORTABLEEXTPROC glColorTableEXT;
extern PFNGLCOLORTABLEPARAMETERFVPROC glColorTableParameterfv;
extern PFNGLCOLORTABLEPARAMETERFVSGIPROC glColorTableParameterfvSGI;
extern PFNGLCOLORTABLEPARAMETERIVPROC glColorTableParameteriv;
extern PFNGLCOLORTABLEPARAMETERIVSGIPROC glColorTableParameterivSGI;
extern PFNGLCOLORTABLESGIPROC glColorTableSGI;
extern PFNGLCOMBINERINPUTNVPROC glCombinerInputNV;
extern PFNGLCOMBINEROUTPUTNVPROC glCombinerOutputNV;
extern PFNGLCOMBINERPARAMETERFNVPROC glCombinerParameterfNV;
extern PFNGLCOMBINERPARAMETERFVNVPROC glCombinerParameterfvNV;
extern PFNGLCOMBINERPARAMETERINVPROC glCombinerParameteriNV;
extern PFNGLCOMBINERPARAMETERIVNVPROC glCombinerParameterivNV;
extern PFNGLCOMBINERSTAGEPARAMETERFVNVPROC glCombinerStageParameterfvNV;
extern PFNGLCOMMANDLISTSEGMENTSNVPROC glCommandListSegmentsNV;
extern PFNGLCOMPILECOMMANDLISTNVPROC glCompileCommandListNV;
extern PFNGLCOMPILESHADERPROC glCompileShader;
extern PFNGLCOMPILESHADERARBPROC glCompileShaderARB;
extern PFNGLCOMPILESHADERINCLUDEARBPROC glCompileShaderIncludeARB;
extern PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC glCompressedMultiTexImage1DEXT;
extern PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC glCompressedMultiTexImage2DEXT;
extern PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC glCompressedMultiTexImage3DEXT;
extern PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC glCompressedMultiTexSubImage1DEXT;
extern PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC glCompressedMultiTexSubImage2DEXT;
extern PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC glCompressedMultiTexSubImage3DEXT;
extern PFNGLCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
extern PFNGLCOMPRESSEDTEXIMAGE1DARBPROC glCompressedTexImage1DARB;
extern PFNGLCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
extern PFNGLCOMPRESSEDTEXIMAGE2DARBPROC glCompressedTexImage2DARB;
extern PFNGLCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
extern PFNGLCOMPRESSEDTEXIMAGE3DARBPROC glCompressedTexImage3DARB;
extern PFNGLCOMPRESSEDTEXIMAGE3DOESPROC glCompressedTexImage3DOES;
extern PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC glCompressedTexSubImage1DARB;
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC glCompressedTexSubImage2DARB;
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC glCompressedTexSubImage3DARB;
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC glCompressedTexSubImage3DOES;
extern PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC glCompressedTextureImage1DEXT;
extern PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC glCompressedTextureImage2DEXT;
extern PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC glCompressedTextureImage3DEXT;
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC glCompressedTextureSubImage1D;
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC glCompressedTextureSubImage1DEXT;
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC glCompressedTextureSubImage2D;
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC glCompressedTextureSubImage2DEXT;
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC glCompressedTextureSubImage3D;
extern PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC glCompressedTextureSubImage3DEXT;
extern PFNGLCONSERVATIVERASTERPARAMETERFNVPROC glConservativeRasterParameterfNV;
extern PFNGLCONSERVATIVERASTERPARAMETERINVPROC glConservativeRasterParameteriNV;
extern PFNGLCONVOLUTIONFILTER1DPROC glConvolutionFilter1D;
extern PFNGLCONVOLUTIONFILTER1DEXTPROC glConvolutionFilter1DEXT;
extern PFNGLCONVOLUTIONFILTER2DPROC glConvolutionFilter2D;
extern PFNGLCONVOLUTIONFILTER2DEXTPROC glConvolutionFilter2DEXT;
extern PFNGLCONVOLUTIONPARAMETERFPROC glConvolutionParameterf;
extern PFNGLCONVOLUTIONPARAMETERFEXTPROC glConvolutionParameterfEXT;
extern PFNGLCONVOLUTIONPARAMETERFVPROC glConvolutionParameterfv;
extern PFNGLCONVOLUTIONPARAMETERFVEXTPROC glConvolutionParameterfvEXT;
extern PFNGLCONVOLUTIONPARAMETERIPROC glConvolutionParameteri;
extern PFNGLCONVOLUTIONPARAMETERIEXTPROC glConvolutionParameteriEXT;
extern PFNGLCONVOLUTIONPARAMETERIVPROC glConvolutionParameteriv;
extern PFNGLCONVOLUTIONPARAMETERIVEXTPROC glConvolutionParameterivEXT;
extern PFNGLCONVOLUTIONPARAMETERXOESPROC glConvolutionParameterxOES;
extern PFNGLCONVOLUTIONPARAMETERXVOESPROC glConvolutionParameterxvOES;
extern PFNGLCOPYBUFFERSUBDATAPROC glCopyBufferSubData;
extern PFNGLCOPYBUFFERSUBDATANVPROC glCopyBufferSubDataNV;
extern PFNGLCOPYCOLORSUBTABLEPROC glCopyColorSubTable;
extern PFNGLCOPYCOLORSUBTABLEEXTPROC glCopyColorSubTableEXT;
extern PFNGLCOPYCOLORTABLEPROC glCopyColorTable;
extern PFNGLCOPYCOLORTABLESGIPROC glCopyColorTableSGI;
extern PFNGLCOPYCONVOLUTIONFILTER1DPROC glCopyConvolutionFilter1D;
extern PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC glCopyConvolutionFilter1DEXT;
extern PFNGLCOPYCONVOLUTIONFILTER2DPROC glCopyConvolutionFilter2D;
extern PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC glCopyConvolutionFilter2DEXT;
extern PFNGLCOPYIMAGESUBDATAPROC glCopyImageSubData;
extern PFNGLCOPYIMAGESUBDATAEXTPROC glCopyImageSubDataEXT;
extern PFNGLCOPYIMAGESUBDATANVPROC glCopyImageSubDataNV;
extern PFNGLCOPYIMAGESUBDATAOESPROC glCopyImageSubDataOES;
extern PFNGLCOPYMULTITEXIMAGE1DEXTPROC glCopyMultiTexImage1DEXT;
extern PFNGLCOPYMULTITEXIMAGE2DEXTPROC glCopyMultiTexImage2DEXT;
extern PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC glCopyMultiTexSubImage1DEXT;
extern PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC glCopyMultiTexSubImage2DEXT;
extern PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC glCopyMultiTexSubImage3DEXT;
extern PFNGLCOPYNAMEDBUFFERSUBDATAPROC glCopyNamedBufferSubData;
extern PFNGLCOPYPATHNVPROC glCopyPathNV;
extern PFNGLCOPYPIXELSPROC glCopyPixels;
extern PFNGLCOPYTEXIMAGE1DPROC glCopyTexImage1D;
extern PFNGLCOPYTEXIMAGE1DEXTPROC glCopyTexImage1DEXT;
extern PFNGLCOPYTEXIMAGE2DPROC glCopyTexImage2D;
extern PFNGLCOPYTEXIMAGE2DEXTPROC glCopyTexImage2DEXT;
extern PFNGLCOPYTEXSUBIMAGE1DPROC glCopyTexSubImage1D;
extern PFNGLCOPYTEXSUBIMAGE1DEXTPROC glCopyTexSubImage1DEXT;
extern PFNGLCOPYTEXSUBIMAGE2DPROC glCopyTexSubImage2D;
extern PFNGLCOPYTEXSUBIMAGE2DEXTPROC glCopyTexSubImage2DEXT;
extern PFNGLCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;
extern PFNGLCOPYTEXSUBIMAGE3DEXTPROC glCopyTexSubImage3DEXT;
extern PFNGLCOPYTEXSUBIMAGE3DOESPROC glCopyTexSubImage3DOES;
extern PFNGLCOPYTEXTUREIMAGE1DEXTPROC glCopyTextureImage1DEXT;
extern PFNGLCOPYTEXTUREIMAGE2DEXTPROC glCopyTextureImage2DEXT;
extern PFNGLCOPYTEXTURELEVELSAPPLEPROC glCopyTextureLevelsAPPLE;
extern PFNGLCOPYTEXTURESUBIMAGE1DPROC glCopyTextureSubImage1D;
extern PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC glCopyTextureSubImage1DEXT;
extern PFNGLCOPYTEXTURESUBIMAGE2DPROC glCopyTextureSubImage2D;
extern PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC glCopyTextureSubImage2DEXT;
extern PFNGLCOPYTEXTURESUBIMAGE3DPROC glCopyTextureSubImage3D;
extern PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC glCopyTextureSubImage3DEXT;
extern PFNGLCOVERFILLPATHINSTANCEDNVPROC glCoverFillPathInstancedNV;
extern PFNGLCOVERFILLPATHNVPROC glCoverFillPathNV;
extern PFNGLCOVERSTROKEPATHINSTANCEDNVPROC glCoverStrokePathInstancedNV;
extern PFNGLCOVERSTROKEPATHNVPROC glCoverStrokePathNV;
extern PFNGLCOVERAGEMASKNVPROC glCoverageMaskNV;
extern PFNGLCOVERAGEMODULATIONNVPROC glCoverageModulationNV;
extern PFNGLCOVERAGEMODULATIONTABLENVPROC glCoverageModulationTableNV;
extern PFNGLCOVERAGEOPERATIONNVPROC glCoverageOperationNV;
extern PFNGLCREATEBUFFERSPROC glCreateBuffers;
extern PFNGLCREATECOMMANDLISTSNVPROC glCreateCommandListsNV;
extern PFNGLCREATEFRAMEBUFFERSPROC glCreateFramebuffers;
extern PFNGLCREATEMEMORYOBJECTSEXTPROC glCreateMemoryObjectsEXT;
extern PFNGLCREATEPERFQUERYINTELPROC glCreatePerfQueryINTEL;
extern PFNGLCREATEPROGRAMPROC glCreateProgram;
extern PFNGLCREATEPROGRAMOBJECTARBPROC glCreateProgramObjectARB;
extern PFNGLCREATEPROGRAMPIPELINESPROC glCreateProgramPipelines;
extern PFNGLCREATEPROGRESSFENCENVXPROC glCreateProgressFenceNVX;
extern PFNGLCREATEQUERIESPROC glCreateQueries;
extern PFNGLCREATERENDERBUFFERSPROC glCreateRenderbuffers;
extern PFNGLCREATESAMPLERSPROC glCreateSamplers;
extern PFNGLCREATESEMAPHORESNVPROC glCreateSemaphoresNV;
extern PFNGLCREATESHADERPROC glCreateShader;
extern PFNGLCREATESHADEROBJECTARBPROC glCreateShaderObjectARB;
extern PFNGLCREATESHADERPROGRAMEXTPROC glCreateShaderProgramEXT;
extern PFNGLCREATESHADERPROGRAMVPROC glCreateShaderProgramv;
extern PFNGLCREATESHADERPROGRAMVEXTPROC glCreateShaderProgramvEXT;
extern PFNGLCREATESTATESNVPROC glCreateStatesNV;
extern PFNGLCREATESYNCFROMCLEVENTARBPROC glCreateSyncFromCLeventARB;
extern PFNGLCREATETEXTURESPROC glCreateTextures;
extern PFNGLCREATETRANSFORMFEEDBACKSPROC glCreateTransformFeedbacks;
extern PFNGLCREATEVERTEXARRAYSPROC glCreateVertexArrays;
extern PFNGLCULLFACEPROC glCullFace;
extern PFNGLCULLPARAMETERDVEXTPROC glCullParameterdvEXT;
extern PFNGLCULLPARAMETERFVEXTPROC glCullParameterfvEXT;
extern PFNGLCURRENTPALETTEMATRIXARBPROC glCurrentPaletteMatrixARB;
extern PFNGLCURRENTPALETTEMATRIXOESPROC glCurrentPaletteMatrixOES;
extern PFNGLDEBUGMESSAGECALLBACKPROC glDebugMessageCallback;
extern PFNGLDEBUGMESSAGECALLBACKAMDPROC glDebugMessageCallbackAMD;
extern PFNGLDEBUGMESSAGECALLBACKARBPROC glDebugMessageCallbackARB;
extern PFNGLDEBUGMESSAGECALLBACKKHRPROC glDebugMessageCallbackKHR;
extern PFNGLDEBUGMESSAGECONTROLPROC glDebugMessageControl;
extern PFNGLDEBUGMESSAGECONTROLARBPROC glDebugMessageControlARB;
extern PFNGLDEBUGMESSAGECONTROLKHRPROC glDebugMessageControlKHR;
extern PFNGLDEBUGMESSAGEENABLEAMDPROC glDebugMessageEnableAMD;
extern PFNGLDEBUGMESSAGEINSERTPROC glDebugMessageInsert;
extern PFNGLDEBUGMESSAGEINSERTAMDPROC glDebugMessageInsertAMD;
extern PFNGLDEBUGMESSAGEINSERTARBPROC glDebugMessageInsertARB;
extern PFNGLDEBUGMESSAGEINSERTKHRPROC glDebugMessageInsertKHR;
extern PFNGLDEFORMSGIXPROC glDeformSGIX;
extern PFNGLDEFORMATIONMAP3DSGIXPROC glDeformationMap3dSGIX;
extern PFNGLDEFORMATIONMAP3FSGIXPROC glDeformationMap3fSGIX;
extern PFNGLDELETEASYNCMARKERSSGIXPROC glDeleteAsyncMarkersSGIX;
extern PFNGLDELETEBUFFERSPROC glDeleteBuffers;
extern PFNGLDELETEBUFFERSARBPROC glDeleteBuffersARB;
extern PFNGLDELETECOMMANDLISTSNVPROC glDeleteCommandListsNV;
extern PFNGLDELETEFENCESAPPLEPROC glDeleteFencesAPPLE;
extern PFNGLDELETEFENCESNVPROC glDeleteFencesNV;
extern PFNGLDELETEFRAGMENTSHADERATIPROC glDeleteFragmentShaderATI;
extern PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
extern PFNGLDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
extern PFNGLDELETEFRAMEBUFFERSOESPROC glDeleteFramebuffersOES;
extern PFNGLDELETELISTSPROC glDeleteLists;
extern PFNGLDELETEMEMORYOBJECTSEXTPROC glDeleteMemoryObjectsEXT;
extern PFNGLDELETENAMEDSTRINGARBPROC glDeleteNamedStringARB;
extern PFNGLDELETENAMESAMDPROC glDeleteNamesAMD;
extern PFNGLDELETEOBJECTARBPROC glDeleteObjectARB;
extern PFNGLDELETEOCCLUSIONQUERIESNVPROC glDeleteOcclusionQueriesNV;
extern PFNGLDELETEPATHSNVPROC glDeletePathsNV;
extern PFNGLDELETEPERFMONITORSAMDPROC glDeletePerfMonitorsAMD;
extern PFNGLDELETEPERFQUERYINTELPROC glDeletePerfQueryINTEL;
extern PFNGLDELETEPROGRAMPROC glDeleteProgram;
extern PFNGLDELETEPROGRAMPIPELINESPROC glDeleteProgramPipelines;
extern PFNGLDELETEPROGRAMPIPELINESEXTPROC glDeleteProgramPipelinesEXT;
extern PFNGLDELETEPROGRAMSARBPROC glDeleteProgramsARB;
extern PFNGLDELETEPROGRAMSNVPROC glDeleteProgramsNV;
extern PFNGLDELETEQUERIESPROC glDeleteQueries;
extern PFNGLDELETEQUERIESARBPROC glDeleteQueriesARB;
extern PFNGLDELETEQUERIESEXTPROC glDeleteQueriesEXT;
extern PFNGLDELETEQUERYRESOURCETAGNVPROC glDeleteQueryResourceTagNV;
extern PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
extern PFNGLDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
extern PFNGLDELETERENDERBUFFERSOESPROC glDeleteRenderbuffersOES;
extern PFNGLDELETESAMPLERSPROC glDeleteSamplers;
extern PFNGLDELETESEMAPHORESEXTPROC glDeleteSemaphoresEXT;
extern PFNGLDELETESHADERPROC glDeleteShader;
extern PFNGLDELETESTATESNVPROC glDeleteStatesNV;
extern PFNGLDELETESYNCPROC glDeleteSync;
extern PFNGLDELETESYNCAPPLEPROC glDeleteSyncAPPLE;
extern PFNGLDELETETEXTURESPROC glDeleteTextures;
extern PFNGLDELETETEXTURESEXTPROC glDeleteTexturesEXT;
extern PFNGLDELETETRANSFORMFEEDBACKSPROC glDeleteTransformFeedbacks;
extern PFNGLDELETETRANSFORMFEEDBACKSNVPROC glDeleteTransformFeedbacksNV;
extern PFNGLDELETEVERTEXARRAYSPROC glDeleteVertexArrays;
extern PFNGLDELETEVERTEXARRAYSAPPLEPROC glDeleteVertexArraysAPPLE;
extern PFNGLDELETEVERTEXARRAYSOESPROC glDeleteVertexArraysOES;
extern PFNGLDELETEVERTEXSHADEREXTPROC glDeleteVertexShaderEXT;
extern PFNGLDEPTHBOUNDSEXTPROC glDepthBoundsEXT;
extern PFNGLDEPTHBOUNDSDNVPROC glDepthBoundsdNV;
extern PFNGLDEPTHFUNCPROC glDepthFunc;
extern PFNGLDEPTHMASKPROC glDepthMask;
extern PFNGLDEPTHRANGEPROC glDepthRange;
extern PFNGLDEPTHRANGEARRAYDVNVPROC glDepthRangeArraydvNV;
extern PFNGLDEPTHRANGEARRAYFVNVPROC glDepthRangeArrayfvNV;
extern PFNGLDEPTHRANGEARRAYFVOESPROC glDepthRangeArrayfvOES;
extern PFNGLDEPTHRANGEARRAYVPROC glDepthRangeArrayv;
extern PFNGLDEPTHRANGEINDEXEDPROC glDepthRangeIndexed;
extern PFNGLDEPTHRANGEINDEXEDDNVPROC glDepthRangeIndexeddNV;
extern PFNGLDEPTHRANGEINDEXEDFNVPROC glDepthRangeIndexedfNV;
extern PFNGLDEPTHRANGEINDEXEDFOESPROC glDepthRangeIndexedfOES;
extern PFNGLDEPTHRANGEDNVPROC glDepthRangedNV;
extern PFNGLDEPTHRANGEFPROC glDepthRangef;
extern PFNGLDEPTHRANGEFOESPROC glDepthRangefOES;
extern PFNGLDEPTHRANGEXPROC glDepthRangex;
extern PFNGLDEPTHRANGEXOESPROC glDepthRangexOES;
extern PFNGLDETACHOBJECTARBPROC glDetachObjectARB;
extern PFNGLDETACHSHADERPROC glDetachShader;
extern PFNGLDETAILTEXFUNCSGISPROC glDetailTexFuncSGIS;
extern PFNGLDISABLEPROC glDisable;
extern PFNGLDISABLECLIENTSTATEPROC glDisableClientState;
extern PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC glDisableClientStateIndexedEXT;
extern PFNGLDISABLECLIENTSTATEIEXTPROC glDisableClientStateiEXT;
extern PFNGLDISABLEDRIVERCONTROLQCOMPROC glDisableDriverControlQCOM;
extern PFNGLDISABLEINDEXEDEXTPROC glDisableIndexedEXT;
extern PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC glDisableVariantClientStateEXT;
extern PFNGLDISABLEVERTEXARRAYATTRIBPROC glDisableVertexArrayAttrib;
extern PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC glDisableVertexArrayAttribEXT;
extern PFNGLDISABLEVERTEXARRAYEXTPROC glDisableVertexArrayEXT;
extern PFNGLDISABLEVERTEXATTRIBAPPLEPROC glDisableVertexAttribAPPLE;
extern PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
extern PFNGLDISABLEVERTEXATTRIBARRAYARBPROC glDisableVertexAttribArrayARB;
extern PFNGLDISABLEIPROC glDisablei;
extern PFNGLDISABLEIEXTPROC glDisableiEXT;
extern PFNGLDISABLEINVPROC glDisableiNV;
extern PFNGLDISABLEIOESPROC glDisableiOES;
extern PFNGLDISCARDFRAMEBUFFEREXTPROC glDiscardFramebufferEXT;
extern PFNGLDISPATCHCOMPUTEPROC glDispatchCompute;
extern PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC glDispatchComputeGroupSizeARB;
extern PFNGLDISPATCHCOMPUTEINDIRECTPROC glDispatchComputeIndirect;
extern PFNGLDRAWARRAYSPROC glDrawArrays;
extern PFNGLDRAWARRAYSEXTPROC glDrawArraysEXT;
extern PFNGLDRAWARRAYSINDIRECTPROC glDrawArraysIndirect;
extern PFNGLDRAWARRAYSINSTANCEDPROC glDrawArraysInstanced;
extern PFNGLDRAWARRAYSINSTANCEDANGLEPROC glDrawArraysInstancedANGLE;
extern PFNGLDRAWARRAYSINSTANCEDARBPROC glDrawArraysInstancedARB;
extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC glDrawArraysInstancedBaseInstance;
extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEEXTPROC glDrawArraysInstancedBaseInstanceEXT;
extern PFNGLDRAWARRAYSINSTANCEDEXTPROC glDrawArraysInstancedEXT;
extern PFNGLDRAWARRAYSINSTANCEDNVPROC glDrawArraysInstancedNV;
extern PFNGLDRAWBUFFERPROC glDrawBuffer;
extern PFNGLDRAWBUFFERSPROC glDrawBuffers;
extern PFNGLDRAWBUFFERSARBPROC glDrawBuffersARB;
extern PFNGLDRAWBUFFERSATIPROC glDrawBuffersATI;
extern PFNGLDRAWBUFFERSEXTPROC glDrawBuffersEXT;
extern PFNGLDRAWBUFFERSINDEXEDEXTPROC glDrawBuffersIndexedEXT;
extern PFNGLDRAWBUFFERSNVPROC glDrawBuffersNV;
extern PFNGLDRAWCOMMANDSADDRESSNVPROC glDrawCommandsAddressNV;
extern PFNGLDRAWCOMMANDSNVPROC glDrawCommandsNV;
extern PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC glDrawCommandsStatesAddressNV;
extern PFNGLDRAWCOMMANDSSTATESNVPROC glDrawCommandsStatesNV;
extern PFNGLDRAWELEMENTARRAYAPPLEPROC glDrawElementArrayAPPLE;
extern PFNGLDRAWELEMENTARRAYATIPROC glDrawElementArrayATI;
extern PFNGLDRAWELEMENTSPROC glDrawElements;
extern PFNGLDRAWELEMENTSBASEVERTEXPROC glDrawElementsBaseVertex;
extern PFNGLDRAWELEMENTSBASEVERTEXEXTPROC glDrawElementsBaseVertexEXT;
extern PFNGLDRAWELEMENTSBASEVERTEXOESPROC glDrawElementsBaseVertexOES;
extern PFNGLDRAWELEMENTSINDIRECTPROC glDrawElementsIndirect;
extern PFNGLDRAWELEMENTSINSTANCEDPROC glDrawElementsInstanced;
extern PFNGLDRAWELEMENTSINSTANCEDANGLEPROC glDrawElementsInstancedANGLE;
extern PFNGLDRAWELEMENTSINSTANCEDARBPROC glDrawElementsInstancedARB;
extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC glDrawElementsInstancedBaseInstance;
extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEEXTPROC glDrawElementsInstancedBaseInstanceEXT;
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC glDrawElementsInstancedBaseVertex;
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC glDrawElementsInstancedBaseVertexBaseInstance;
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEEXTPROC glDrawElementsInstancedBaseVertexBaseInstanceEXT;
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXEXTPROC glDrawElementsInstancedBaseVertexEXT;
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXOESPROC glDrawElementsInstancedBaseVertexOES;
extern PFNGLDRAWELEMENTSINSTANCEDEXTPROC glDrawElementsInstancedEXT;
extern PFNGLDRAWELEMENTSINSTANCEDNVPROC glDrawElementsInstancedNV;
extern PFNGLDRAWMESHARRAYSSUNPROC glDrawMeshArraysSUN;
extern PFNGLDRAWMESHTASKSNVPROC glDrawMeshTasksNV;
extern PFNGLDRAWMESHTASKSINDIRECTNVPROC glDrawMeshTasksIndirectNV;
extern PFNGLDRAWPIXELSPROC glDrawPixels;
extern PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC glDrawRangeElementArrayAPPLE;
extern PFNGLDRAWRANGEELEMENTARRAYATIPROC glDrawRangeElementArrayATI;
extern PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glDrawRangeElementsBaseVertex;
extern PFNGLDRAWRANGEELEMENTSBASEVERTEXEXTPROC glDrawRangeElementsBaseVertexEXT;
extern PFNGLDRAWRANGEELEMENTSBASEVERTEXOESPROC glDrawRangeElementsBaseVertexOES;
extern PFNGLDRAWRANGEELEMENTSEXTPROC glDrawRangeElementsEXT;
extern PFNGLDRAWTEXFOESPROC glDrawTexfOES;
extern PFNGLDRAWTEXFVOESPROC glDrawTexfvOES;
extern PFNGLDRAWTEXIOESPROC glDrawTexiOES;
extern PFNGLDRAWTEXIVOESPROC glDrawTexivOES;
extern PFNGLDRAWTEXSOESPROC glDrawTexsOES;
extern PFNGLDRAWTEXSVOESPROC glDrawTexsvOES;
extern PFNGLDRAWTEXTURENVPROC glDrawTextureNV;
extern PFNGLDRAWTEXXOESPROC glDrawTexxOES;
extern PFNGLDRAWTEXXVOESPROC glDrawTexxvOES;
extern PFNGLDRAWTRANSFORMFEEDBACKPROC glDrawTransformFeedback;
extern PFNGLDRAWTRANSFORMFEEDBACKEXTPROC glDrawTransformFeedbackEXT;
extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC glDrawTransformFeedbackInstanced;
extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDEXTPROC glDrawTransformFeedbackInstancedEXT;
extern PFNGLDRAWTRANSFORMFEEDBACKNVPROC glDrawTransformFeedbackNV;
extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC glDrawTransformFeedbackStream;
extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC glDrawTransformFeedbackStreamInstanced;
extern PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC glEGLImageTargetRenderbufferStorageOES;
extern PFNGLEGLIMAGETARGETTEXSTORAGEEXTPROC glEGLImageTargetTexStorageEXT;
extern PFNGLEGLIMAGETARGETTEXTURE2DOESPROC glEGLImageTargetTexture2DOES;
extern PFNGLEGLIMAGETARGETTEXTURESTORAGEEXTPROC glEGLImageTargetTextureStorageEXT;
extern PFNGLEDGEFLAGPROC glEdgeFlag;
extern PFNGLEDGEFLAGFORMATNVPROC glEdgeFlagFormatNV;
extern PFNGLEDGEFLAGPOINTERPROC glEdgeFlagPointer;
extern PFNGLEDGEFLAGPOINTEREXTPROC glEdgeFlagPointerEXT;
extern PFNGLEDGEFLAGPOINTERLISTIBMPROC glEdgeFlagPointerListIBM;
extern PFNGLEDGEFLAGVPROC glEdgeFlagv;
extern PFNGLELEMENTPOINTERAPPLEPROC glElementPointerAPPLE;
extern PFNGLELEMENTPOINTERATIPROC glElementPointerATI;
extern PFNGLENABLEPROC glEnable;
extern PFNGLENABLECLIENTSTATEPROC glEnableClientState;
extern PFNGLENABLECLIENTSTATEINDEXEDEXTPROC glEnableClientStateIndexedEXT;
extern PFNGLENABLECLIENTSTATEIEXTPROC glEnableClientStateiEXT;
extern PFNGLENABLEDRIVERCONTROLQCOMPROC glEnableDriverControlQCOM;
extern PFNGLENABLEINDEXEDEXTPROC glEnableIndexedEXT;
extern PFNGLENABLEVARIANTCLIENTSTATEEXTPROC glEnableVariantClientStateEXT;
extern PFNGLENABLEVERTEXARRAYATTRIBPROC glEnableVertexArrayAttrib;
extern PFNGLENABLEVERTEXARRAYATTRIBEXTPROC glEnableVertexArrayAttribEXT;
extern PFNGLENABLEVERTEXARRAYEXTPROC glEnableVertexArrayEXT;
extern PFNGLENABLEVERTEXATTRIBAPPLEPROC glEnableVertexAttribAPPLE;
extern PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
extern PFNGLENABLEVERTEXATTRIBARRAYARBPROC glEnableVertexAttribArrayARB;
extern PFNGLENABLEIPROC glEnablei;
extern PFNGLENABLEIEXTPROC glEnableiEXT;
extern PFNGLENABLEINVPROC glEnableiNV;
extern PFNGLENABLEIOESPROC glEnableiOES;
extern PFNGLENDPROC glEnd;
extern PFNGLENDCONDITIONALRENDERPROC glEndConditionalRender;
extern PFNGLENDCONDITIONALRENDERNVPROC glEndConditionalRenderNV;
extern PFNGLENDCONDITIONALRENDERNVXPROC glEndConditionalRenderNVX;
extern PFNGLENDFRAGMENTSHADERATIPROC glEndFragmentShaderATI;
extern PFNGLENDLISTPROC glEndList;
extern PFNGLENDOCCLUSIONQUERYNVPROC glEndOcclusionQueryNV;
extern PFNGLENDPERFMONITORAMDPROC glEndPerfMonitorAMD;
extern PFNGLENDPERFQUERYINTELPROC glEndPerfQueryINTEL;
extern PFNGLENDQUERYPROC glEndQuery;
extern PFNGLENDQUERYARBPROC glEndQueryARB;
extern PFNGLENDQUERYEXTPROC glEndQueryEXT;
extern PFNGLENDQUERYINDEXEDPROC glEndQueryIndexed;
extern PFNGLENDTILINGQCOMPROC glEndTilingQCOM;
extern PFNGLENDTRANSFORMFEEDBACKPROC glEndTransformFeedback;
extern PFNGLENDTRANSFORMFEEDBACKEXTPROC glEndTransformFeedbackEXT;
extern PFNGLENDTRANSFORMFEEDBACKNVPROC glEndTransformFeedbackNV;
extern PFNGLENDVERTEXSHADEREXTPROC glEndVertexShaderEXT;
extern PFNGLENDVIDEOCAPTURENVPROC glEndVideoCaptureNV;
extern PFNGLEVALCOORD1DPROC glEvalCoord1d;
extern PFNGLEVALCOORD1DVPROC glEvalCoord1dv;
extern PFNGLEVALCOORD1FPROC glEvalCoord1f;
extern PFNGLEVALCOORD1FVPROC glEvalCoord1fv;
extern PFNGLEVALCOORD1XOESPROC glEvalCoord1xOES;
extern PFNGLEVALCOORD1XVOESPROC glEvalCoord1xvOES;
extern PFNGLEVALCOORD2DPROC glEvalCoord2d;
extern PFNGLEVALCOORD2DVPROC glEvalCoord2dv;
extern PFNGLEVALCOORD2FPROC glEvalCoord2f;
extern PFNGLEVALCOORD2FVPROC glEvalCoord2fv;
extern PFNGLEVALCOORD2XOESPROC glEvalCoord2xOES;
extern PFNGLEVALCOORD2XVOESPROC glEvalCoord2xvOES;
extern PFNGLEVALMAPSNVPROC glEvalMapsNV;
extern PFNGLEVALMESH1PROC glEvalMesh1;
extern PFNGLEVALMESH2PROC glEvalMesh2;
extern PFNGLEVALPOINT1PROC glEvalPoint1;
extern PFNGLEVALPOINT2PROC glEvalPoint2;
extern PFNGLEVALUATEDEPTHVALUESARBPROC glEvaluateDepthValuesARB;
extern PFNGLEXECUTEPROGRAMNVPROC glExecuteProgramNV;
extern PFNGLEXTGETBUFFERPOINTERVQCOMPROC glExtGetBufferPointervQCOM;
extern PFNGLEXTGETBUFFERSQCOMPROC glExtGetBuffersQCOM;
extern PFNGLEXTGETFRAMEBUFFERSQCOMPROC glExtGetFramebuffersQCOM;
extern PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC glExtGetProgramBinarySourceQCOM;
extern PFNGLEXTGETPROGRAMSQCOMPROC glExtGetProgramsQCOM;
extern PFNGLEXTGETRENDERBUFFERSQCOMPROC glExtGetRenderbuffersQCOM;
extern PFNGLEXTGETSHADERSQCOMPROC glExtGetShadersQCOM;
extern PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC glExtGetTexLevelParameterivQCOM;
extern PFNGLEXTGETTEXSUBIMAGEQCOMPROC glExtGetTexSubImageQCOM;
extern PFNGLEXTGETTEXTURESQCOMPROC glExtGetTexturesQCOM;
extern PFNGLEXTISPROGRAMBINARYQCOMPROC glExtIsProgramBinaryQCOM;
extern PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC glExtTexObjectStateOverrideiQCOM;
extern PFNGLEXTRACTCOMPONENTEXTPROC glExtractComponentEXT;
extern PFNGLFEEDBACKBUFFERPROC glFeedbackBuffer;
extern PFNGLFEEDBACKBUFFERXOESPROC glFeedbackBufferxOES;
extern PFNGLFENCESYNCPROC glFenceSync;
extern PFNGLFENCESYNCAPPLEPROC glFenceSyncAPPLE;
extern PFNGLFINALCOMBINERINPUTNVPROC glFinalCombinerInputNV;
extern PFNGLFINISHPROC glFinish;
extern PFNGLFINISHASYNCSGIXPROC glFinishAsyncSGIX;
extern PFNGLFINISHFENCEAPPLEPROC glFinishFenceAPPLE;
extern PFNGLFINISHFENCENVPROC glFinishFenceNV;
extern PFNGLFINISHOBJECTAPPLEPROC glFinishObjectAPPLE;
extern PFNGLFINISHTEXTURESUNXPROC glFinishTextureSUNX;
extern PFNGLFLUSHPROC glFlush;
extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC glFlushMappedBufferRange;
extern PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC glFlushMappedBufferRangeAPPLE;
extern PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC glFlushMappedBufferRangeEXT;
extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC glFlushMappedNamedBufferRange;
extern PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC glFlushMappedNamedBufferRangeEXT;
extern PFNGLFLUSHPIXELDATARANGENVPROC glFlushPixelDataRangeNV;
extern PFNGLFLUSHRASTERSGIXPROC glFlushRasterSGIX;
extern PFNGLFLUSHSTATICDATAIBMPROC glFlushStaticDataIBM;
extern PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC glFlushVertexArrayRangeAPPLE;
extern PFNGLFLUSHVERTEXARRAYRANGENVPROC glFlushVertexArrayRangeNV;
extern PFNGLFOGCOORDFORMATNVPROC glFogCoordFormatNV;
extern PFNGLFOGCOORDPOINTERPROC glFogCoordPointer;
extern PFNGLFOGCOORDPOINTEREXTPROC glFogCoordPointerEXT;
extern PFNGLFOGCOORDPOINTERLISTIBMPROC glFogCoordPointerListIBM;
extern PFNGLFOGCOORDDPROC glFogCoordd;
extern PFNGLFOGCOORDDEXTPROC glFogCoorddEXT;
extern PFNGLFOGCOORDDVPROC glFogCoorddv;
extern PFNGLFOGCOORDDVEXTPROC glFogCoorddvEXT;
extern PFNGLFOGCOORDFPROC glFogCoordf;
extern PFNGLFOGCOORDFEXTPROC glFogCoordfEXT;
extern PFNGLFOGCOORDFVPROC glFogCoordfv;
extern PFNGLFOGCOORDFVEXTPROC glFogCoordfvEXT;
extern PFNGLFOGCOORDHNVPROC glFogCoordhNV;
extern PFNGLFOGCOORDHVNVPROC glFogCoordhvNV;
extern PFNGLFOGFUNCSGISPROC glFogFuncSGIS;
extern PFNGLFOGFPROC glFogf;
extern PFNGLFOGFVPROC glFogfv;
extern PFNGLFOGIPROC glFogi;
extern PFNGLFOGIVPROC glFogiv;
extern PFNGLFOGXPROC glFogx;
extern PFNGLFOGXOESPROC glFogxOES;
extern PFNGLFOGXVPROC glFogxv;
extern PFNGLFOGXVOESPROC glFogxvOES;
extern PFNGLFRAGMENTCOLORMATERIALSGIXPROC glFragmentColorMaterialSGIX;
extern PFNGLFRAGMENTCOVERAGECOLORNVPROC glFragmentCoverageColorNV;
extern PFNGLFRAGMENTLIGHTMODELFSGIXPROC glFragmentLightModelfSGIX;
extern PFNGLFRAGMENTLIGHTMODELFVSGIXPROC glFragmentLightModelfvSGIX;
extern PFNGLFRAGMENTLIGHTMODELISGIXPROC glFragmentLightModeliSGIX;
extern PFNGLFRAGMENTLIGHTMODELIVSGIXPROC glFragmentLightModelivSGIX;
extern PFNGLFRAGMENTLIGHTFSGIXPROC glFragmentLightfSGIX;
extern PFNGLFRAGMENTLIGHTFVSGIXPROC glFragmentLightfvSGIX;
extern PFNGLFRAGMENTLIGHTISGIXPROC glFragmentLightiSGIX;
extern PFNGLFRAGMENTLIGHTIVSGIXPROC glFragmentLightivSGIX;
extern PFNGLFRAGMENTMATERIALFSGIXPROC glFragmentMaterialfSGIX;
extern PFNGLFRAGMENTMATERIALFVSGIXPROC glFragmentMaterialfvSGIX;
extern PFNGLFRAGMENTMATERIALISGIXPROC glFragmentMaterialiSGIX;
extern PFNGLFRAGMENTMATERIALIVSGIXPROC glFragmentMaterialivSGIX;
extern PFNGLFRAMETERMINATORGREMEDYPROC glFrameTerminatorGREMEDY;
extern PFNGLFRAMEZOOMSGIXPROC glFrameZoomSGIX;
extern PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC glFramebufferDrawBufferEXT;
extern PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC glFramebufferDrawBuffersEXT;
extern PFNGLFRAMEBUFFERFETCHBARRIEREXTPROC glFramebufferFetchBarrierEXT;
extern PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC glFramebufferFetchBarrierQCOM;
extern PFNGLFRAMEBUFFERFOVEATIONCONFIGQCOMPROC glFramebufferFoveationConfigQCOM;
extern PFNGLFRAMEBUFFERFOVEATIONPARAMETERSQCOMPROC glFramebufferFoveationParametersQCOM;
extern PFNGLFRAMEBUFFERPARAMETERIPROC glFramebufferParameteri;
extern PFNGLFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC glFramebufferPixelLocalStorageSizeEXT;
extern PFNGLFRAMEBUFFERREADBUFFEREXTPROC glFramebufferReadBufferEXT;
extern PFNGLFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
extern PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
extern PFNGLFRAMEBUFFERRENDERBUFFEROESPROC glFramebufferRenderbufferOES;
extern PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC glFramebufferSampleLocationsfvARB;
extern PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC glFramebufferSampleLocationsfvNV;
extern PFNGLFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC glFramebufferSamplePositionsfvAMD;
extern PFNGLFRAMEBUFFERSHADINGRATEEXTPROC glFramebufferShadingRateEXT;
extern PFNGLFRAMEBUFFERTEXTUREPROC glFramebufferTexture;
extern PFNGLFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
extern PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
extern PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
extern PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
extern PFNGLFRAMEBUFFERTEXTURE2DDOWNSAMPLEIMGPROC glFramebufferTexture2DDownsampleIMG;
extern PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC glFramebufferTexture2DMultisampleEXT;
extern PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC glFramebufferTexture2DMultisampleIMG;
extern PFNGLFRAMEBUFFERTEXTURE2DOESPROC glFramebufferTexture2DOES;
extern PFNGLFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
extern PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
extern PFNGLFRAMEBUFFERTEXTURE3DOESPROC glFramebufferTexture3DOES;
extern PFNGLFRAMEBUFFERTEXTUREARBPROC glFramebufferTextureARB;
extern PFNGLFRAMEBUFFERTEXTUREEXTPROC glFramebufferTextureEXT;
extern PFNGLFRAMEBUFFERTEXTUREFACEARBPROC glFramebufferTextureFaceARB;
extern PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC glFramebufferTextureFaceEXT;
extern PFNGLFRAMEBUFFERTEXTURELAYERPROC glFramebufferTextureLayer;
extern PFNGLFRAMEBUFFERTEXTURELAYERARBPROC glFramebufferTextureLayerARB;
extern PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC glFramebufferTextureLayerEXT;
extern PFNGLFRAMEBUFFERTEXTURELAYERDOWNSAMPLEIMGPROC glFramebufferTextureLayerDownsampleIMG;
extern PFNGLFRAMEBUFFERTEXTUREMULTISAMPLEMULTIVIEWOVRPROC glFramebufferTextureMultisampleMultiviewOVR;
extern PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC glFramebufferTextureMultiviewOVR;
extern PFNGLFRAMEBUFFERTEXTUREOESPROC glFramebufferTextureOES;
extern PFNGLFREEOBJECTBUFFERATIPROC glFreeObjectBufferATI;
extern PFNGLFRONTFACEPROC glFrontFace;
extern PFNGLFRUSTUMPROC glFrustum;
extern PFNGLFRUSTUMFPROC glFrustumf;
extern PFNGLFRUSTUMFOESPROC glFrustumfOES;
extern PFNGLFRUSTUMXPROC glFrustumx;
extern PFNGLFRUSTUMXOESPROC glFrustumxOES;
extern PFNGLGENASYNCMARKERSSGIXPROC glGenAsyncMarkersSGIX;
extern PFNGLGENBUFFERSPROC glGenBuffers;
extern PFNGLGENBUFFERSARBPROC glGenBuffersARB;
extern PFNGLGENFENCESAPPLEPROC glGenFencesAPPLE;
extern PFNGLGENFENCESNVPROC glGenFencesNV;
extern PFNGLGENFRAGMENTSHADERSATIPROC glGenFragmentShadersATI;
extern PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
extern PFNGLGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
extern PFNGLGENFRAMEBUFFERSOESPROC glGenFramebuffersOES;
extern PFNGLGENLISTSPROC glGenLists;
extern PFNGLGENNAMESAMDPROC glGenNamesAMD;
extern PFNGLGENOCCLUSIONQUERIESNVPROC glGenOcclusionQueriesNV;
extern PFNGLGENPATHSNVPROC glGenPathsNV;
extern PFNGLGENPERFMONITORSAMDPROC glGenPerfMonitorsAMD;
extern PFNGLGENPROGRAMPIPELINESPROC glGenProgramPipelines;
extern PFNGLGENPROGRAMPIPELINESEXTPROC glGenProgramPipelinesEXT;
extern PFNGLGENPROGRAMSARBPROC glGenProgramsARB;
extern PFNGLGENPROGRAMSNVPROC glGenProgramsNV;
extern PFNGLGENQUERIESPROC glGenQueries;
extern PFNGLGENQUERIESARBPROC glGenQueriesARB;
extern PFNGLGENQUERIESEXTPROC glGenQueriesEXT;
extern PFNGLGENQUERYRESOURCETAGNVPROC glGenQueryResourceTagNV;
extern PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
extern PFNGLGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
extern PFNGLGENRENDERBUFFERSOESPROC glGenRenderbuffersOES;
extern PFNGLGENSAMPLERSPROC glGenSamplers;
extern PFNGLGENSEMAPHORESEXTPROC glGenSemaphoresEXT;
extern PFNGLGENSYMBOLSEXTPROC glGenSymbolsEXT;
extern PFNGLGENTEXTURESPROC glGenTextures;
extern PFNGLGENTEXTURESEXTPROC glGenTexturesEXT;
extern PFNGLGENTRANSFORMFEEDBACKSPROC glGenTransformFeedbacks;
extern PFNGLGENTRANSFORMFEEDBACKSNVPROC glGenTransformFeedbacksNV;
extern PFNGLGENVERTEXARRAYSPROC glGenVertexArrays;
extern PFNGLGENVERTEXARRAYSAPPLEPROC glGenVertexArraysAPPLE;
extern PFNGLGENVERTEXARRAYSOESPROC glGenVertexArraysOES;
extern PFNGLGENVERTEXSHADERSEXTPROC glGenVertexShadersEXT;
extern PFNGLGENERATEMIPMAPPROC glGenerateMipmap;
extern PFNGLGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
extern PFNGLGENERATEMIPMAPOESPROC glGenerateMipmapOES;
extern PFNGLGENERATEMULTITEXMIPMAPEXTPROC glGenerateMultiTexMipmapEXT;
extern PFNGLGENERATETEXTUREMIPMAPPROC glGenerateTextureMipmap;
extern PFNGLGENERATETEXTUREMIPMAPEXTPROC glGenerateTextureMipmapEXT;
extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC glGetActiveAtomicCounterBufferiv;
extern PFNGLGETACTIVEATTRIBPROC glGetActiveAttrib;
extern PFNGLGETACTIVEATTRIBARBPROC glGetActiveAttribARB;
extern PFNGLGETACTIVESUBROUTINENAMEPROC glGetActiveSubroutineName;
extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC glGetActiveSubroutineUniformName;
extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC glGetActiveSubroutineUniformiv;
extern PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform;
extern PFNGLGETACTIVEUNIFORMARBPROC glGetActiveUniformARB;
extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC glGetActiveUniformBlockName;
extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC glGetActiveUniformBlockiv;
extern PFNGLGETACTIVEUNIFORMNAMEPROC glGetActiveUniformName;
extern PFNGLGETACTIVEUNIFORMSIVPROC glGetActiveUniformsiv;
extern PFNGLGETACTIVEVARYINGNVPROC glGetActiveVaryingNV;
extern PFNGLGETARRAYOBJECTFVATIPROC glGetArrayObjectfvATI;
extern PFNGLGETARRAYOBJECTIVATIPROC glGetArrayObjectivATI;
extern PFNGLGETATTACHEDOBJECTSARBPROC glGetAttachedObjectsARB;
extern PFNGLGETATTACHEDSHADERSPROC glGetAttachedShaders;
extern PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation;
extern PFNGLGETATTRIBLOCATIONARBPROC glGetAttribLocationARB;
extern PFNGLGETBOOLEANINDEXEDVEXTPROC glGetBooleanIndexedvEXT;
extern PFNGLGETBOOLEANI_VPROC glGetBooleani_v;
extern PFNGLGETBOOLEANVPROC glGetBooleanv;
extern PFNGLGETBUFFERPARAMETERI64VPROC glGetBufferParameteri64v;
extern PFNGLGETBUFFERPARAMETERIVPROC glGetBufferParameteriv;
extern PFNGLGETBUFFERPARAMETERIVARBPROC glGetBufferParameterivARB;
extern PFNGLGETBUFFERPARAMETERUI64VNVPROC glGetBufferParameterui64vNV;
extern PFNGLGETBUFFERPOINTERVPROC glGetBufferPointerv;
extern PFNGLGETBUFFERPOINTERVARBPROC glGetBufferPointervARB;
extern PFNGLGETBUFFERPOINTERVOESPROC glGetBufferPointervOES;
extern PFNGLGETBUFFERSUBDATAPROC glGetBufferSubData;
extern PFNGLGETBUFFERSUBDATAARBPROC glGetBufferSubDataARB;
extern PFNGLGETCLIPPLANEPROC glGetClipPlane;
extern PFNGLGETCLIPPLANEFPROC glGetClipPlanef;
extern PFNGLGETCLIPPLANEFOESPROC glGetClipPlanefOES;
extern PFNGLGETCLIPPLANEXPROC glGetClipPlanex;
extern PFNGLGETCLIPPLANEXOESPROC glGetClipPlanexOES;
extern PFNGLGETCOLORTABLEPROC glGetColorTable;
extern PFNGLGETCOLORTABLEEXTPROC glGetColorTableEXT;
extern PFNGLGETCOLORTABLEPARAMETERFVPROC glGetColorTableParameterfv;
extern PFNGLGETCOLORTABLEPARAMETERFVEXTPROC glGetColorTableParameterfvEXT;
extern PFNGLGETCOLORTABLEPARAMETERFVSGIPROC glGetColorTableParameterfvSGI;
extern PFNGLGETCOLORTABLEPARAMETERIVPROC glGetColorTableParameteriv;
extern PFNGLGETCOLORTABLEPARAMETERIVEXTPROC glGetColorTableParameterivEXT;
extern PFNGLGETCOLORTABLEPARAMETERIVSGIPROC glGetColorTableParameterivSGI;
extern PFNGLGETCOLORTABLESGIPROC glGetColorTableSGI;
extern PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC glGetCombinerInputParameterfvNV;
extern PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC glGetCombinerInputParameterivNV;
extern PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC glGetCombinerOutputParameterfvNV;
extern PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC glGetCombinerOutputParameterivNV;
extern PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC glGetCombinerStageParameterfvNV;
extern PFNGLGETCOMMANDHEADERNVPROC glGetCommandHeaderNV;
extern PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC glGetCompressedMultiTexImageEXT;
extern PFNGLGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;
extern PFNGLGETCOMPRESSEDTEXIMAGEARBPROC glGetCompressedTexImageARB;
extern PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC glGetCompressedTextureImage;
extern PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC glGetCompressedTextureImageEXT;
extern PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC glGetCompressedTextureSubImage;
extern PFNGLGETCONVOLUTIONFILTERPROC glGetConvolutionFilter;
extern PFNGLGETCONVOLUTIONFILTEREXTPROC glGetConvolutionFilterEXT;
extern PFNGLGETCONVOLUTIONPARAMETERFVPROC glGetConvolutionParameterfv;
extern PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC glGetConvolutionParameterfvEXT;
extern PFNGLGETCONVOLUTIONPARAMETERIVPROC glGetConvolutionParameteriv;
extern PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC glGetConvolutionParameterivEXT;
extern PFNGLGETCONVOLUTIONPARAMETERXVOESPROC glGetConvolutionParameterxvOES;
extern PFNGLGETCOVERAGEMODULATIONTABLENVPROC glGetCoverageModulationTableNV;
extern PFNGLGETDEBUGMESSAGELOGPROC glGetDebugMessageLog;
extern PFNGLGETDEBUGMESSAGELOGAMDPROC glGetDebugMessageLogAMD;
extern PFNGLGETDEBUGMESSAGELOGARBPROC glGetDebugMessageLogARB;
extern PFNGLGETDEBUGMESSAGELOGKHRPROC glGetDebugMessageLogKHR;
extern PFNGLGETDETAILTEXFUNCSGISPROC glGetDetailTexFuncSGIS;
extern PFNGLGETDOUBLEINDEXEDVEXTPROC glGetDoubleIndexedvEXT;
extern PFNGLGETDOUBLEI_VPROC glGetDoublei_v;
extern PFNGLGETDOUBLEI_VEXTPROC glGetDoublei_vEXT;
extern PFNGLGETDOUBLEVPROC glGetDoublev;
extern PFNGLGETDRIVERCONTROLSTRINGQCOMPROC glGetDriverControlStringQCOM;
extern PFNGLGETDRIVERCONTROLSQCOMPROC glGetDriverControlsQCOM;
extern PFNGLGETERRORPROC glGetError;
extern PFNGLGETFENCEIVNVPROC glGetFenceivNV;
extern PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC glGetFinalCombinerInputParameterfvNV;
extern PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC glGetFinalCombinerInputParameterivNV;
extern PFNGLGETFIRSTPERFQUERYIDINTELPROC glGetFirstPerfQueryIdINTEL;
extern PFNGLGETFIXEDVPROC glGetFixedv;
extern PFNGLGETFIXEDVOESPROC glGetFixedvOES;
extern PFNGLGETFLOATINDEXEDVEXTPROC glGetFloatIndexedvEXT;
extern PFNGLGETFLOATI_VPROC glGetFloati_v;
extern PFNGLGETFLOATI_VEXTPROC glGetFloati_vEXT;
extern PFNGLGETFLOATI_VNVPROC glGetFloati_vNV;
extern PFNGLGETFLOATI_VOESPROC glGetFloati_vOES;
extern PFNGLGETFLOATVPROC glGetFloatv;
extern PFNGLGETFOGFUNCSGISPROC glGetFogFuncSGIS;
extern PFNGLGETFRAGDATAINDEXPROC glGetFragDataIndex;
extern PFNGLGETFRAGDATAINDEXEXTPROC glGetFragDataIndexEXT;
extern PFNGLGETFRAGDATALOCATIONPROC glGetFragDataLocation;
extern PFNGLGETFRAGDATALOCATIONEXTPROC glGetFragDataLocationEXT;
extern PFNGLGETFRAGMENTLIGHTFVSGIXPROC glGetFragmentLightfvSGIX;
extern PFNGLGETFRAGMENTLIGHTIVSGIXPROC glGetFragmentLightivSGIX;
extern PFNGLGETFRAGMENTMATERIALFVSGIXPROC glGetFragmentMaterialfvSGIX;
extern PFNGLGETFRAGMENTMATERIALIVSGIXPROC glGetFragmentMaterialivSGIX;
extern PFNGLGETFRAGMENTSHADINGRATESEXTPROC glGetFragmentShadingRatesEXT;
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVOESPROC glGetFramebufferAttachmentParameterivOES;
extern PFNGLGETFRAMEBUFFERPARAMETERFVAMDPROC glGetFramebufferParameterfvAMD;
extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC glGetFramebufferParameteriv;
extern PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC glGetFramebufferParameterivEXT;
extern PFNGLGETFRAMEBUFFERPIXELLOCALSTORAGESIZEEXTPROC glGetFramebufferPixelLocalStorageSizeEXT;
extern PFNGLGETGRAPHICSRESETSTATUSPROC glGetGraphicsResetStatus;
extern PFNGLGETGRAPHICSRESETSTATUSARBPROC glGetGraphicsResetStatusARB;
extern PFNGLGETGRAPHICSRESETSTATUSEXTPROC glGetGraphicsResetStatusEXT;
extern PFNGLGETGRAPHICSRESETSTATUSKHRPROC glGetGraphicsResetStatusKHR;
extern PFNGLGETHANDLEARBPROC glGetHandleARB;
extern PFNGLGETHISTOGRAMPROC glGetHistogram;
extern PFNGLGETHISTOGRAMEXTPROC glGetHistogramEXT;
extern PFNGLGETHISTOGRAMPARAMETERFVPROC glGetHistogramParameterfv;
extern PFNGLGETHISTOGRAMPARAMETERFVEXTPROC glGetHistogramParameterfvEXT;
extern PFNGLGETHISTOGRAMPARAMETERIVPROC glGetHistogramParameteriv;
extern PFNGLGETHISTOGRAMPARAMETERIVEXTPROC glGetHistogramParameterivEXT;
extern PFNGLGETHISTOGRAMPARAMETERXVOESPROC glGetHistogramParameterxvOES;
extern PFNGLGETIMAGEHANDLEARBPROC glGetImageHandleARB;
extern PFNGLGETIMAGEHANDLENVPROC glGetImageHandleNV;
extern PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC glGetImageTransformParameterfvHP;
extern PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC glGetImageTransformParameterivHP;
extern PFNGLGETINFOLOGARBPROC glGetInfoLogARB;
extern PFNGLGETINSTRUMENTSSGIXPROC glGetInstrumentsSGIX;
extern PFNGLGETINTEGER64I_VPROC glGetInteger64i_v;
extern PFNGLGETINTEGER64VPROC glGetInteger64v;
extern PFNGLGETINTEGER64VAPPLEPROC glGetInteger64vAPPLE;
extern PFNGLGETINTEGER64VEXTPROC glGetInteger64vEXT;
extern PFNGLGETINTEGERINDEXEDVEXTPROC glGetIntegerIndexedvEXT;
extern PFNGLGETINTEGERI_VPROC glGetIntegeri_v;
extern PFNGLGETINTEGERI_VEXTPROC glGetIntegeri_vEXT;
extern PFNGLGETINTEGERUI64I_VNVPROC glGetIntegerui64i_vNV;
extern PFNGLGETINTEGERUI64VNVPROC glGetIntegerui64vNV;
extern PFNGLGETINTEGERVPROC glGetIntegerv;
extern PFNGLGETINTERNALFORMATSAMPLEIVNVPROC glGetInternalformatSampleivNV;
extern PFNGLGETINTERNALFORMATI64VPROC glGetInternalformati64v;
extern PFNGLGETINTERNALFORMATIVPROC glGetInternalformativ;
extern PFNGLGETINVARIANTBOOLEANVEXTPROC glGetInvariantBooleanvEXT;
extern PFNGLGETINVARIANTFLOATVEXTPROC glGetInvariantFloatvEXT;
extern PFNGLGETINVARIANTINTEGERVEXTPROC glGetInvariantIntegervEXT;
extern PFNGLGETLIGHTFVPROC glGetLightfv;
extern PFNGLGETLIGHTIVPROC glGetLightiv;
extern PFNGLGETLIGHTXOESPROC glGetLightxOES;
extern PFNGLGETLIGHTXVPROC glGetLightxv;
extern PFNGLGETLIGHTXVOESPROC glGetLightxvOES;
extern PFNGLGETLISTPARAMETERFVSGIXPROC glGetListParameterfvSGIX;
extern PFNGLGETLISTPARAMETERIVSGIXPROC glGetListParameterivSGIX;
extern PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC glGetLocalConstantBooleanvEXT;
extern PFNGLGETLOCALCONSTANTFLOATVEXTPROC glGetLocalConstantFloatvEXT;
extern PFNGLGETLOCALCONSTANTINTEGERVEXTPROC glGetLocalConstantIntegervEXT;
extern PFNGLGETMAPATTRIBPARAMETERFVNVPROC glGetMapAttribParameterfvNV;
extern PFNGLGETMAPATTRIBPARAMETERIVNVPROC glGetMapAttribParameterivNV;
extern PFNGLGETMAPCONTROLPOINTSNVPROC glGetMapControlPointsNV;
extern PFNGLGETMAPPARAMETERFVNVPROC glGetMapParameterfvNV;
extern PFNGLGETMAPPARAMETERIVNVPROC glGetMapParameterivNV;
extern PFNGLGETMAPDVPROC glGetMapdv;
extern PFNGLGETMAPFVPROC glGetMapfv;
extern PFNGLGETMAPIVPROC glGetMapiv;
extern PFNGLGETMAPXVOESPROC glGetMapxvOES;
extern PFNGLGETMATERIALFVPROC glGetMaterialfv;
extern PFNGLGETMATERIALIVPROC glGetMaterialiv;
extern PFNGLGETMATERIALXOESPROC glGetMaterialxOES;
extern PFNGLGETMATERIALXVPROC glGetMaterialxv;
extern PFNGLGETMATERIALXVOESPROC glGetMaterialxvOES;
extern PFNGLGETMEMORYOBJECTDETACHEDRESOURCESUIVNVPROC glGetMemoryObjectDetachedResourcesuivNV;
extern PFNGLGETMEMORYOBJECTPARAMETERIVEXTPROC glGetMemoryObjectParameterivEXT;
extern PFNGLGETMINMAXPROC glGetMinmax;
extern PFNGLGETMINMAXEXTPROC glGetMinmaxEXT;
extern PFNGLGETMINMAXPARAMETERFVPROC glGetMinmaxParameterfv;
extern PFNGLGETMINMAXPARAMETERFVEXTPROC glGetMinmaxParameterfvEXT;
extern PFNGLGETMINMAXPARAMETERIVPROC glGetMinmaxParameteriv;
extern PFNGLGETMINMAXPARAMETERIVEXTPROC glGetMinmaxParameterivEXT;
extern PFNGLGETMULTITEXENVFVEXTPROC glGetMultiTexEnvfvEXT;
extern PFNGLGETMULTITEXENVIVEXTPROC glGetMultiTexEnvivEXT;
extern PFNGLGETMULTITEXGENDVEXTPROC glGetMultiTexGendvEXT;
extern PFNGLGETMULTITEXGENFVEXTPROC glGetMultiTexGenfvEXT;
extern PFNGLGETMULTITEXGENIVEXTPROC glGetMultiTexGenivEXT;
extern PFNGLGETMULTITEXIMAGEEXTPROC glGetMultiTexImageEXT;
extern PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC glGetMultiTexLevelParameterfvEXT;
extern PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC glGetMultiTexLevelParameterivEXT;
extern PFNGLGETMULTITEXPARAMETERIIVEXTPROC glGetMultiTexParameterIivEXT;
extern PFNGLGETMULTITEXPARAMETERIUIVEXTPROC glGetMultiTexParameterIuivEXT;
extern PFNGLGETMULTITEXPARAMETERFVEXTPROC glGetMultiTexParameterfvEXT;
extern PFNGLGETMULTITEXPARAMETERIVEXTPROC glGetMultiTexParameterivEXT;
extern PFNGLGETMULTISAMPLEFVPROC glGetMultisamplefv;
extern PFNGLGETMULTISAMPLEFVNVPROC glGetMultisamplefvNV;
extern PFNGLGETNAMEDBUFFERPARAMETERI64VPROC glGetNamedBufferParameteri64v;
extern PFNGLGETNAMEDBUFFERPARAMETERIVPROC glGetNamedBufferParameteriv;
extern PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC glGetNamedBufferParameterivEXT;
extern PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC glGetNamedBufferParameterui64vNV;
extern PFNGLGETNAMEDBUFFERPOINTERVPROC glGetNamedBufferPointerv;
extern PFNGLGETNAMEDBUFFERPOINTERVEXTPROC glGetNamedBufferPointervEXT;
extern PFNGLGETNAMEDBUFFERSUBDATAPROC glGetNamedBufferSubData;
extern PFNGLGETNAMEDBUFFERSUBDATAEXTPROC glGetNamedBufferSubDataEXT;
extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERFVAMDPROC glGetNamedFramebufferParameterfvAMD;
extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetNamedFramebufferAttachmentParameteriv;
extern PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetNamedFramebufferAttachmentParameterivEXT;
extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC glGetNamedFramebufferParameteriv;
extern PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC glGetNamedFramebufferParameterivEXT;
extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC glGetNamedProgramLocalParameterIivEXT;
extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC glGetNamedProgramLocalParameterIuivEXT;
extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC glGetNamedProgramLocalParameterdvEXT;
extern PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC glGetNamedProgramLocalParameterfvEXT;
extern PFNGLGETNAMEDPROGRAMSTRINGEXTPROC glGetNamedProgramStringEXT;
extern PFNGLGETNAMEDPROGRAMIVEXTPROC glGetNamedProgramivEXT;
extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC glGetNamedRenderbufferParameteriv;
extern PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC glGetNamedRenderbufferParameterivEXT;
extern PFNGLGETNAMEDSTRINGARBPROC glGetNamedStringARB;
extern PFNGLGETNAMEDSTRINGIVARBPROC glGetNamedStringivARB;
extern PFNGLGETNEXTPERFQUERYIDINTELPROC glGetNextPerfQueryIdINTEL;
extern PFNGLGETOBJECTBUFFERFVATIPROC glGetObjectBufferfvATI;
extern PFNGLGETOBJECTBUFFERIVATIPROC glGetObjectBufferivATI;
extern PFNGLGETOBJECTLABELPROC glGetObjectLabel;
extern PFNGLGETOBJECTLABELEXTPROC glGetObjectLabelEXT;
extern PFNGLGETOBJECTLABELKHRPROC glGetObjectLabelKHR;
extern PFNGLGETOBJECTPARAMETERFVARBPROC glGetObjectParameterfvARB;
extern PFNGLGETOBJECTPARAMETERIVAPPLEPROC glGetObjectParameterivAPPLE;
extern PFNGLGETOBJECTPARAMETERIVARBPROC glGetObjectParameterivARB;
extern PFNGLGETOBJECTPTRLABELPROC glGetObjectPtrLabel;
extern PFNGLGETOBJECTPTRLABELKHRPROC glGetObjectPtrLabelKHR;
extern PFNGLGETOCCLUSIONQUERYIVNVPROC glGetOcclusionQueryivNV;
extern PFNGLGETOCCLUSIONQUERYUIVNVPROC glGetOcclusionQueryuivNV;
extern PFNGLGETPATHCOLORGENFVNVPROC glGetPathColorGenfvNV;
extern PFNGLGETPATHCOLORGENIVNVPROC glGetPathColorGenivNV;
extern PFNGLGETPATHCOMMANDSNVPROC glGetPathCommandsNV;
extern PFNGLGETPATHCOORDSNVPROC glGetPathCoordsNV;
extern PFNGLGETPATHDASHARRAYNVPROC glGetPathDashArrayNV;
extern PFNGLGETPATHLENGTHNVPROC glGetPathLengthNV;
extern PFNGLGETPATHMETRICRANGENVPROC glGetPathMetricRangeNV;
extern PFNGLGETPATHMETRICSNVPROC glGetPathMetricsNV;
extern PFNGLGETPATHPARAMETERFVNVPROC glGetPathParameterfvNV;
extern PFNGLGETPATHPARAMETERIVNVPROC glGetPathParameterivNV;
extern PFNGLGETPATHSPACINGNVPROC glGetPathSpacingNV;
extern PFNGLGETPATHTEXGENFVNVPROC glGetPathTexGenfvNV;
extern PFNGLGETPATHTEXGENIVNVPROC glGetPathTexGenivNV;
extern PFNGLGETPERFCOUNTERINFOINTELPROC glGetPerfCounterInfoINTEL;
extern PFNGLGETPERFMONITORCOUNTERDATAAMDPROC glGetPerfMonitorCounterDataAMD;
extern PFNGLGETPERFMONITORCOUNTERINFOAMDPROC glGetPerfMonitorCounterInfoAMD;
extern PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC glGetPerfMonitorCounterStringAMD;
extern PFNGLGETPERFMONITORCOUNTERSAMDPROC glGetPerfMonitorCountersAMD;
extern PFNGLGETPERFMONITORGROUPSTRINGAMDPROC glGetPerfMonitorGroupStringAMD;
extern PFNGLGETPERFMONITORGROUPSAMDPROC glGetPerfMonitorGroupsAMD;
extern PFNGLGETPERFQUERYDATAINTELPROC glGetPerfQueryDataINTEL;
extern PFNGLGETPERFQUERYIDBYNAMEINTELPROC glGetPerfQueryIdByNameINTEL;
extern PFNGLGETPERFQUERYINFOINTELPROC glGetPerfQueryInfoINTEL;
extern PFNGLGETPIXELMAPFVPROC glGetPixelMapfv;
extern PFNGLGETPIXELMAPUIVPROC glGetPixelMapuiv;
extern PFNGLGETPIXELMAPUSVPROC glGetPixelMapusv;
extern PFNGLGETPIXELMAPXVPROC glGetPixelMapxv;
extern PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC glGetPixelTexGenParameterfvSGIS;
extern PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC glGetPixelTexGenParameterivSGIS;
extern PFNGLGETPIXELTRANSFORMPARAMETERFVEXTPROC glGetPixelTransformParameterfvEXT;
extern PFNGLGETPIXELTRANSFORMPARAMETERIVEXTPROC glGetPixelTransformParameterivEXT;
extern PFNGLGETPOINTERINDEXEDVEXTPROC glGetPointerIndexedvEXT;
extern PFNGLGETPOINTERI_VEXTPROC glGetPointeri_vEXT;
extern PFNGLGETPOINTERVPROC glGetPointerv;
extern PFNGLGETPOINTERVEXTPROC glGetPointervEXT;
extern PFNGLGETPOINTERVKHRPROC glGetPointervKHR;
extern PFNGLGETPOLYGONSTIPPLEPROC glGetPolygonStipple;
extern PFNGLGETPROGRAMBINARYPROC glGetProgramBinary;
extern PFNGLGETPROGRAMBINARYOESPROC glGetProgramBinaryOES;
extern PFNGLGETPROGRAMENVPARAMETERIIVNVPROC glGetProgramEnvParameterIivNV;
extern PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC glGetProgramEnvParameterIuivNV;
extern PFNGLGETPROGRAMENVPARAMETERDVARBPROC glGetProgramEnvParameterdvARB;
extern PFNGLGETPROGRAMENVPARAMETERFVARBPROC glGetProgramEnvParameterfvARB;
extern PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
extern PFNGLGETPROGRAMINTERFACEIVPROC glGetProgramInterfaceiv;
extern PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC glGetProgramLocalParameterIivNV;
extern PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC glGetProgramLocalParameterIuivNV;
extern PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC glGetProgramLocalParameterdvARB;
extern PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC glGetProgramLocalParameterfvARB;
extern PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC glGetProgramNamedParameterdvNV;
extern PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC glGetProgramNamedParameterfvNV;
extern PFNGLGETPROGRAMPARAMETERDVNVPROC glGetProgramParameterdvNV;
extern PFNGLGETPROGRAMPARAMETERFVNVPROC glGetProgramParameterfvNV;
extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC glGetProgramPipelineInfoLog;
extern PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC glGetProgramPipelineInfoLogEXT;
extern PFNGLGETPROGRAMPIPELINEIVPROC glGetProgramPipelineiv;
extern PFNGLGETPROGRAMPIPELINEIVEXTPROC glGetProgramPipelineivEXT;
extern PFNGLGETPROGRAMRESOURCEINDEXPROC glGetProgramResourceIndex;
extern PFNGLGETPROGRAMRESOURCELOCATIONPROC glGetProgramResourceLocation;
extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC glGetProgramResourceLocationIndex;
extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXEXTPROC glGetProgramResourceLocationIndexEXT;
extern PFNGLGETPROGRAMRESOURCENAMEPROC glGetProgramResourceName;
extern PFNGLGETPROGRAMRESOURCEFVNVPROC glGetProgramResourcefvNV;
extern PFNGLGETPROGRAMRESOURCEIVPROC glGetProgramResourceiv;
extern PFNGLGETPROGRAMSTAGEIVPROC glGetProgramStageiv;
extern PFNGLGETPROGRAMSTRINGARBPROC glGetProgramStringARB;
extern PFNGLGETPROGRAMSTRINGNVPROC glGetProgramStringNV;
extern PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC glGetProgramSubroutineParameteruivNV;
extern PFNGLGETPROGRAMIVPROC glGetProgramiv;
extern PFNGLGETPROGRAMIVARBPROC glGetProgramivARB;
extern PFNGLGETPROGRAMIVNVPROC glGetProgramivNV;
extern PFNGLGETQUERYBUFFEROBJECTI64VPROC glGetQueryBufferObjecti64v;
extern PFNGLGETQUERYBUFFEROBJECTIVPROC glGetQueryBufferObjectiv;
extern PFNGLGETQUERYBUFFEROBJECTUI64VPROC glGetQueryBufferObjectui64v;
extern PFNGLGETQUERYBUFFEROBJECTUIVPROC glGetQueryBufferObjectuiv;
extern PFNGLGETQUERYINDEXEDIVPROC glGetQueryIndexediv;
extern PFNGLGETQUERYOBJECTI64VPROC glGetQueryObjecti64v;
extern PFNGLGETQUERYOBJECTI64VEXTPROC glGetQueryObjecti64vEXT;
extern PFNGLGETQUERYOBJECTIVPROC glGetQueryObjectiv;
extern PFNGLGETQUERYOBJECTIVARBPROC glGetQueryObjectivARB;
extern PFNGLGETQUERYOBJECTIVEXTPROC glGetQueryObjectivEXT;
extern PFNGLGETQUERYOBJECTUI64VPROC glGetQueryObjectui64v;
extern PFNGLGETQUERYOBJECTUI64VEXTPROC glGetQueryObjectui64vEXT;
extern PFNGLGETQUERYOBJECTUIVPROC glGetQueryObjectuiv;
extern PFNGLGETQUERYOBJECTUIVARBPROC glGetQueryObjectuivARB;
extern PFNGLGETQUERYOBJECTUIVEXTPROC glGetQueryObjectuivEXT;
extern PFNGLGETQUERYIVPROC glGetQueryiv;
extern PFNGLGETQUERYIVARBPROC glGetQueryivARB;
extern PFNGLGETQUERYIVEXTPROC glGetQueryivEXT;
extern PFNGLGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
extern PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
extern PFNGLGETRENDERBUFFERPARAMETERIVOESPROC glGetRenderbufferParameterivOES;
extern PFNGLGETSAMPLERPARAMETERIIVPROC glGetSamplerParameterIiv;
extern PFNGLGETSAMPLERPARAMETERIIVEXTPROC glGetSamplerParameterIivEXT;
extern PFNGLGETSAMPLERPARAMETERIIVOESPROC glGetSamplerParameterIivOES;
extern PFNGLGETSAMPLERPARAMETERIUIVPROC glGetSamplerParameterIuiv;
extern PFNGLGETSAMPLERPARAMETERIUIVEXTPROC glGetSamplerParameterIuivEXT;
extern PFNGLGETSAMPLERPARAMETERIUIVOESPROC glGetSamplerParameterIuivOES;
extern PFNGLGETSAMPLERPARAMETERFVPROC glGetSamplerParameterfv;
extern PFNGLGETSAMPLERPARAMETERIVPROC glGetSamplerParameteriv;
extern PFNGLGETSEMAPHOREPARAMETERIVNVPROC glGetSemaphoreParameterivNV;
extern PFNGLGETSEMAPHOREPARAMETERUI64VEXTPROC glGetSemaphoreParameterui64vEXT;
extern PFNGLGETSEPARABLEFILTERPROC glGetSeparableFilter;
extern PFNGLGETSEPARABLEFILTEREXTPROC glGetSeparableFilterEXT;
extern PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
extern PFNGLGETSHADERPRECISIONFORMATPROC glGetShaderPrecisionFormat;
extern PFNGLGETSHADERSOURCEPROC glGetShaderSource;
extern PFNGLGETSHADERSOURCEARBPROC glGetShaderSourceARB;
extern PFNGLGETSHADERIVPROC glGetShaderiv;
extern PFNGLGETSHADINGRATEIMAGEPALETTENVPROC glGetShadingRateImagePaletteNV;
extern PFNGLGETSHADINGRATESAMPLELOCATIONIVNVPROC glGetShadingRateSampleLocationivNV;
extern PFNGLGETSHARPENTEXFUNCSGISPROC glGetSharpenTexFuncSGIS;
extern PFNGLGETSTAGEINDEXNVPROC glGetStageIndexNV;
extern PFNGLGETSTRINGPROC glGetString;
extern PFNGLGETSTRINGIPROC glGetStringi;
extern PFNGLGETSUBROUTINEINDEXPROC glGetSubroutineIndex;
extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC glGetSubroutineUniformLocation;
extern PFNGLGETSYNCIVPROC glGetSynciv;
extern PFNGLGETSYNCIVAPPLEPROC glGetSyncivAPPLE;
extern PFNGLGETTEXBUMPPARAMETERFVATIPROC glGetTexBumpParameterfvATI;
extern PFNGLGETTEXBUMPPARAMETERIVATIPROC glGetTexBumpParameterivATI;
extern PFNGLGETTEXENVFVPROC glGetTexEnvfv;
extern PFNGLGETTEXENVIVPROC glGetTexEnviv;
extern PFNGLGETTEXENVXVPROC glGetTexEnvxv;
extern PFNGLGETTEXENVXVOESPROC glGetTexEnvxvOES;
extern PFNGLGETTEXFILTERFUNCSGISPROC glGetTexFilterFuncSGIS;
extern PFNGLGETTEXGENDVPROC glGetTexGendv;
extern PFNGLGETTEXGENFVPROC glGetTexGenfv;
extern PFNGLGETTEXGENFVOESPROC glGetTexGenfvOES;
extern PFNGLGETTEXGENIVPROC glGetTexGeniv;
extern PFNGLGETTEXGENIVOESPROC glGetTexGenivOES;
extern PFNGLGETTEXGENXVOESPROC glGetTexGenxvOES;
extern PFNGLGETTEXIMAGEPROC glGetTexImage;
extern PFNGLGETTEXLEVELPARAMETERFVPROC glGetTexLevelParameterfv;
extern PFNGLGETTEXLEVELPARAMETERIVPROC glGetTexLevelParameteriv;
extern PFNGLGETTEXLEVELPARAMETERXVOESPROC glGetTexLevelParameterxvOES;
extern PFNGLGETTEXPARAMETERIIVPROC glGetTexParameterIiv;
extern PFNGLGETTEXPARAMETERIIVEXTPROC glGetTexParameterIivEXT;
extern PFNGLGETTEXPARAMETERIIVOESPROC glGetTexParameterIivOES;
extern PFNGLGETTEXPARAMETERIUIVPROC glGetTexParameterIuiv;
extern PFNGLGETTEXPARAMETERIUIVEXTPROC glGetTexParameterIuivEXT;
extern PFNGLGETTEXPARAMETERIUIVOESPROC glGetTexParameterIuivOES;
extern PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC glGetTexParameterPointervAPPLE;
extern PFNGLGETTEXPARAMETERFVPROC glGetTexParameterfv;
extern PFNGLGETTEXPARAMETERIVPROC glGetTexParameteriv;
extern PFNGLGETTEXPARAMETERXVPROC glGetTexParameterxv;
extern PFNGLGETTEXPARAMETERXVOESPROC glGetTexParameterxvOES;
extern PFNGLGETTEXTUREHANDLEARBPROC glGetTextureHandleARB;
extern PFNGLGETTEXTUREHANDLEIMGPROC glGetTextureHandleIMG;
extern PFNGLGETTEXTUREHANDLENVPROC glGetTextureHandleNV;
extern PFNGLGETTEXTUREIMAGEPROC glGetTextureImage;
extern PFNGLGETTEXTUREIMAGEEXTPROC glGetTextureImageEXT;
extern PFNGLGETTEXTURELEVELPARAMETERFVPROC glGetTextureLevelParameterfv;
extern PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC glGetTextureLevelParameterfvEXT;
extern PFNGLGETTEXTURELEVELPARAMETERIVPROC glGetTextureLevelParameteriv;
extern PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC glGetTextureLevelParameterivEXT;
extern PFNGLGETTEXTUREPARAMETERIIVPROC glGetTextureParameterIiv;
extern PFNGLGETTEXTUREPARAMETERIIVEXTPROC glGetTextureParameterIivEXT;
extern PFNGLGETTEXTUREPARAMETERIUIVPROC glGetTextureParameterIuiv;
extern PFNGLGETTEXTUREPARAMETERIUIVEXTPROC glGetTextureParameterIuivEXT;
extern PFNGLGETTEXTUREPARAMETERFVPROC glGetTextureParameterfv;
extern PFNGLGETTEXTUREPARAMETERFVEXTPROC glGetTextureParameterfvEXT;
extern PFNGLGETTEXTUREPARAMETERIVPROC glGetTextureParameteriv;
extern PFNGLGETTEXTUREPARAMETERIVEXTPROC glGetTextureParameterivEXT;
extern PFNGLGETTEXTURESAMPLERHANDLEARBPROC glGetTextureSamplerHandleARB;
extern PFNGLGETTEXTURESAMPLERHANDLEIMGPROC glGetTextureSamplerHandleIMG;
extern PFNGLGETTEXTURESAMPLERHANDLENVPROC glGetTextureSamplerHandleNV;
extern PFNGLGETTEXTURESUBIMAGEPROC glGetTextureSubImage;
extern PFNGLGETTRACKMATRIXIVNVPROC glGetTrackMatrixivNV;
extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC glGetTransformFeedbackVarying;
extern PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC glGetTransformFeedbackVaryingEXT;
extern PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC glGetTransformFeedbackVaryingNV;
extern PFNGLGETTRANSFORMFEEDBACKI64_VPROC glGetTransformFeedbacki64_v;
extern PFNGLGETTRANSFORMFEEDBACKI_VPROC glGetTransformFeedbacki_v;
extern PFNGLGETTRANSFORMFEEDBACKIVPROC glGetTransformFeedbackiv;
extern PFNGLGETTRANSLATEDSHADERSOURCEANGLEPROC glGetTranslatedShaderSourceANGLE;
extern PFNGLGETUNIFORMBLOCKINDEXPROC glGetUniformBlockIndex;
extern PFNGLGETUNIFORMBUFFERSIZEEXTPROC glGetUniformBufferSizeEXT;
extern PFNGLGETUNIFORMINDICESPROC glGetUniformIndices;
extern PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;
extern PFNGLGETUNIFORMLOCATIONARBPROC glGetUniformLocationARB;
extern PFNGLGETUNIFORMOFFSETEXTPROC glGetUniformOffsetEXT;
extern PFNGLGETUNIFORMSUBROUTINEUIVPROC glGetUniformSubroutineuiv;
extern PFNGLGETUNIFORMDVPROC glGetUniformdv;
extern PFNGLGETUNIFORMFVPROC glGetUniformfv;
extern PFNGLGETUNIFORMFVARBPROC glGetUniformfvARB;
extern PFNGLGETUNIFORMI64VARBPROC glGetUniformi64vARB;
extern PFNGLGETUNIFORMI64VNVPROC glGetUniformi64vNV;
extern PFNGLGETUNIFORMIVPROC glGetUniformiv;
extern PFNGLGETUNIFORMIVARBPROC glGetUniformivARB;
extern PFNGLGETUNIFORMUI64VARBPROC glGetUniformui64vARB;
extern PFNGLGETUNIFORMUI64VNVPROC glGetUniformui64vNV;
extern PFNGLGETUNIFORMUIVPROC glGetUniformuiv;
extern PFNGLGETUNIFORMUIVEXTPROC glGetUniformuivEXT;
extern PFNGLGETUNSIGNEDBYTEVEXTPROC glGetUnsignedBytevEXT;
extern PFNGLGETUNSIGNEDBYTEI_VEXTPROC glGetUnsignedBytei_vEXT;
extern PFNGLGETVARIANTARRAYOBJECTFVATIPROC glGetVariantArrayObjectfvATI;
extern PFNGLGETVARIANTARRAYOBJECTIVATIPROC glGetVariantArrayObjectivATI;
extern PFNGLGETVARIANTBOOLEANVEXTPROC glGetVariantBooleanvEXT;
extern PFNGLGETVARIANTFLOATVEXTPROC glGetVariantFloatvEXT;
extern PFNGLGETVARIANTINTEGERVEXTPROC glGetVariantIntegervEXT;
extern PFNGLGETVARIANTPOINTERVEXTPROC glGetVariantPointervEXT;
extern PFNGLGETVARYINGLOCATIONNVPROC glGetVaryingLocationNV;
extern PFNGLGETVERTEXARRAYINDEXED64IVPROC glGetVertexArrayIndexed64iv;
extern PFNGLGETVERTEXARRAYINDEXEDIVPROC glGetVertexArrayIndexediv;
extern PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC glGetVertexArrayIntegeri_vEXT;
extern PFNGLGETVERTEXARRAYINTEGERVEXTPROC glGetVertexArrayIntegervEXT;
extern PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC glGetVertexArrayPointeri_vEXT;
extern PFNGLGETVERTEXARRAYPOINTERVEXTPROC glGetVertexArrayPointervEXT;
extern PFNGLGETVERTEXARRAYIVPROC glGetVertexArrayiv;
extern PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC glGetVertexAttribArrayObjectfvATI;
extern PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC glGetVertexAttribArrayObjectivATI;
extern PFNGLGETVERTEXATTRIBIIVPROC glGetVertexAttribIiv;
extern PFNGLGETVERTEXATTRIBIIVEXTPROC glGetVertexAttribIivEXT;
extern PFNGLGETVERTEXATTRIBIUIVPROC glGetVertexAttribIuiv;
extern PFNGLGETVERTEXATTRIBIUIVEXTPROC glGetVertexAttribIuivEXT;
extern PFNGLGETVERTEXATTRIBLDVPROC glGetVertexAttribLdv;
extern PFNGLGETVERTEXATTRIBLDVEXTPROC glGetVertexAttribLdvEXT;
extern PFNGLGETVERTEXATTRIBLI64VNVPROC glGetVertexAttribLi64vNV;
extern PFNGLGETVERTEXATTRIBLUI64VARBPROC glGetVertexAttribLui64vARB;
extern PFNGLGETVERTEXATTRIBLUI64VNVPROC glGetVertexAttribLui64vNV;
extern PFNGLGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv;
extern PFNGLGETVERTEXATTRIBPOINTERVARBPROC glGetVertexAttribPointervARB;
extern PFNGLGETVERTEXATTRIBPOINTERVNVPROC glGetVertexAttribPointervNV;
extern PFNGLGETVERTEXATTRIBDVPROC glGetVertexAttribdv;
extern PFNGLGETVERTEXATTRIBDVARBPROC glGetVertexAttribdvARB;
extern PFNGLGETVERTEXATTRIBDVNVPROC glGetVertexAttribdvNV;
extern PFNGLGETVERTEXATTRIBFVPROC glGetVertexAttribfv;
extern PFNGLGETVERTEXATTRIBFVARBPROC glGetVertexAttribfvARB;
extern PFNGLGETVERTEXATTRIBFVNVPROC glGetVertexAttribfvNV;
extern PFNGLGETVERTEXATTRIBIVPROC glGetVertexAttribiv;
extern PFNGLGETVERTEXATTRIBIVARBPROC glGetVertexAttribivARB;
extern PFNGLGETVERTEXATTRIBIVNVPROC glGetVertexAttribivNV;
extern PFNGLGETVIDEOCAPTURESTREAMDVNVPROC glGetVideoCaptureStreamdvNV;
extern PFNGLGETVIDEOCAPTURESTREAMFVNVPROC glGetVideoCaptureStreamfvNV;
extern PFNGLGETVIDEOCAPTURESTREAMIVNVPROC glGetVideoCaptureStreamivNV;
extern PFNGLGETVIDEOCAPTUREIVNVPROC glGetVideoCaptureivNV;
extern PFNGLGETVIDEOI64VNVPROC glGetVideoi64vNV;
extern PFNGLGETVIDEOIVNVPROC glGetVideoivNV;
extern PFNGLGETVIDEOUI64VNVPROC glGetVideoui64vNV;
extern PFNGLGETVIDEOUIVNVPROC glGetVideouivNV;
extern PFNGLGETNCOLORTABLEPROC glGetnColorTable;
extern PFNGLGETNCOLORTABLEARBPROC glGetnColorTableARB;
extern PFNGLGETNCOMPRESSEDTEXIMAGEPROC glGetnCompressedTexImage;
extern PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC glGetnCompressedTexImageARB;
extern PFNGLGETNCONVOLUTIONFILTERPROC glGetnConvolutionFilter;
extern PFNGLGETNCONVOLUTIONFILTERARBPROC glGetnConvolutionFilterARB;
extern PFNGLGETNHISTOGRAMPROC glGetnHistogram;
extern PFNGLGETNHISTOGRAMARBPROC glGetnHistogramARB;
extern PFNGLGETNMAPDVPROC glGetnMapdv;
extern PFNGLGETNMAPDVARBPROC glGetnMapdvARB;
extern PFNGLGETNMAPFVPROC glGetnMapfv;
extern PFNGLGETNMAPFVARBPROC glGetnMapfvARB;
extern PFNGLGETNMAPIVPROC glGetnMapiv;
extern PFNGLGETNMAPIVARBPROC glGetnMapivARB;
extern PFNGLGETNMINMAXPROC glGetnMinmax;
extern PFNGLGETNMINMAXARBPROC glGetnMinmaxARB;
extern PFNGLGETNPIXELMAPFVPROC glGetnPixelMapfv;
extern PFNGLGETNPIXELMAPFVARBPROC glGetnPixelMapfvARB;
extern PFNGLGETNPIXELMAPUIVPROC glGetnPixelMapuiv;
extern PFNGLGETNPIXELMAPUIVARBPROC glGetnPixelMapuivARB;
extern PFNGLGETNPIXELMAPUSVPROC glGetnPixelMapusv;
extern PFNGLGETNPIXELMAPUSVARBPROC glGetnPixelMapusvARB;
extern PFNGLGETNPOLYGONSTIPPLEPROC glGetnPolygonStipple;
extern PFNGLGETNPOLYGONSTIPPLEARBPROC glGetnPolygonStippleARB;
extern PFNGLGETNSEPARABLEFILTERPROC glGetnSeparableFilter;
extern PFNGLGETNSEPARABLEFILTERARBPROC glGetnSeparableFilterARB;
extern PFNGLGETNTEXIMAGEPROC glGetnTexImage;
extern PFNGLGETNTEXIMAGEARBPROC glGetnTexImageARB;
extern PFNGLGETNUNIFORMDVPROC glGetnUniformdv;
extern PFNGLGETNUNIFORMDVARBPROC glGetnUniformdvARB;
extern PFNGLGETNUNIFORMFVPROC glGetnUniformfv;
extern PFNGLGETNUNIFORMFVARBPROC glGetnUniformfvARB;
extern PFNGLGETNUNIFORMFVEXTPROC glGetnUniformfvEXT;
extern PFNGLGETNUNIFORMFVKHRPROC glGetnUniformfvKHR;
extern PFNGLGETNUNIFORMI64VARBPROC glGetnUniformi64vARB;
extern PFNGLGETNUNIFORMIVPROC glGetnUniformiv;
extern PFNGLGETNUNIFORMIVARBPROC glGetnUniformivARB;
extern PFNGLGETNUNIFORMIVEXTPROC glGetnUniformivEXT;
extern PFNGLGETNUNIFORMIVKHRPROC glGetnUniformivKHR;
extern PFNGLGETNUNIFORMUI64VARBPROC glGetnUniformui64vARB;
extern PFNGLGETNUNIFORMUIVPROC glGetnUniformuiv;
extern PFNGLGETNUNIFORMUIVARBPROC glGetnUniformuivARB;
extern PFNGLGETNUNIFORMUIVKHRPROC glGetnUniformuivKHR;
extern PFNGLGLOBALALPHAFACTORBSUNPROC glGlobalAlphaFactorbSUN;
extern PFNGLGLOBALALPHAFACTORDSUNPROC glGlobalAlphaFactordSUN;
extern PFNGLGLOBALALPHAFACTORFSUNPROC glGlobalAlphaFactorfSUN;
extern PFNGLGLOBALALPHAFACTORISUNPROC glGlobalAlphaFactoriSUN;
extern PFNGLGLOBALALPHAFACTORSSUNPROC glGlobalAlphaFactorsSUN;
extern PFNGLGLOBALALPHAFACTORUBSUNPROC glGlobalAlphaFactorubSUN;
extern PFNGLGLOBALALPHAFACTORUISUNPROC glGlobalAlphaFactoruiSUN;
extern PFNGLGLOBALALPHAFACTORUSSUNPROC glGlobalAlphaFactorusSUN;
extern PFNGLHINTPROC glHint;
extern PFNGLHINTPGIPROC glHintPGI;
extern PFNGLHISTOGRAMPROC glHistogram;
extern PFNGLHISTOGRAMEXTPROC glHistogramEXT;
extern PFNGLIGLOOINTERFACESGIXPROC glIglooInterfaceSGIX;
extern PFNGLIMAGETRANSFORMPARAMETERFHPPROC glImageTransformParameterfHP;
extern PFNGLIMAGETRANSFORMPARAMETERFVHPPROC glImageTransformParameterfvHP;
extern PFNGLIMAGETRANSFORMPARAMETERIHPPROC glImageTransformParameteriHP;
extern PFNGLIMAGETRANSFORMPARAMETERIVHPPROC glImageTransformParameterivHP;
extern PFNGLIMPORTMEMORYFDEXTPROC glImportMemoryFdEXT;
extern PFNGLIMPORTMEMORYWIN32HANDLEEXTPROC glImportMemoryWin32HandleEXT;
extern PFNGLIMPORTMEMORYWIN32NAMEEXTPROC glImportMemoryWin32NameEXT;
extern PFNGLIMPORTSEMAPHOREFDEXTPROC glImportSemaphoreFdEXT;
extern PFNGLIMPORTSEMAPHOREWIN32HANDLEEXTPROC glImportSemaphoreWin32HandleEXT;
extern PFNGLIMPORTSEMAPHOREWIN32NAMEEXTPROC glImportSemaphoreWin32NameEXT;
extern PFNGLIMPORTSYNCEXTPROC glImportSyncEXT;
extern PFNGLINDEXFORMATNVPROC glIndexFormatNV;
extern PFNGLINDEXFUNCEXTPROC glIndexFuncEXT;
extern PFNGLINDEXMASKPROC glIndexMask;
extern PFNGLINDEXMATERIALEXTPROC glIndexMaterialEXT;
extern PFNGLINDEXPOINTERPROC glIndexPointer;
extern PFNGLINDEXPOINTEREXTPROC glIndexPointerEXT;
extern PFNGLINDEXPOINTERLISTIBMPROC glIndexPointerListIBM;
extern PFNGLINDEXDPROC glIndexd;
extern PFNGLINDEXDVPROC glIndexdv;
extern PFNGLINDEXFPROC glIndexf;
extern PFNGLINDEXFVPROC glIndexfv;
extern PFNGLINDEXIPROC glIndexi;
extern PFNGLINDEXIVPROC glIndexiv;
extern PFNGLINDEXSPROC glIndexs;
extern PFNGLINDEXSVPROC glIndexsv;
extern PFNGLINDEXUBPROC glIndexub;
extern PFNGLINDEXUBVPROC glIndexubv;
extern PFNGLINDEXXOESPROC glIndexxOES;
extern PFNGLINDEXXVOESPROC glIndexxvOES;
extern PFNGLINITNAMESPROC glInitNames;
extern PFNGLINSERTCOMPONENTEXTPROC glInsertComponentEXT;
extern PFNGLINSERTEVENTMARKEREXTPROC glInsertEventMarkerEXT;
extern PFNGLINSTRUMENTSBUFFERSGIXPROC glInstrumentsBufferSGIX;
extern PFNGLINTERLEAVEDARRAYSPROC glInterleavedArrays;
extern PFNGLINTERPOLATEPATHSNVPROC glInterpolatePathsNV;
extern PFNGLINVALIDATEBUFFERDATAPROC glInvalidateBufferData;
extern PFNGLINVALIDATEBUFFERSUBDATAPROC glInvalidateBufferSubData;
extern PFNGLINVALIDATEFRAMEBUFFERPROC glInvalidateFramebuffer;
extern PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC glInvalidateNamedFramebufferData;
extern PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC glInvalidateNamedFramebufferSubData;
extern PFNGLINVALIDATESUBFRAMEBUFFERPROC glInvalidateSubFramebuffer;
extern PFNGLINVALIDATETEXIMAGEPROC glInvalidateTexImage;
extern PFNGLINVALIDATETEXSUBIMAGEPROC glInvalidateTexSubImage;
extern PFNGLISASYNCMARKERSGIXPROC glIsAsyncMarkerSGIX;
extern PFNGLISBUFFERPROC glIsBuffer;
extern PFNGLISBUFFERARBPROC glIsBufferARB;
extern PFNGLISBUFFERRESIDENTNVPROC glIsBufferResidentNV;
extern PFNGLISCOMMANDLISTNVPROC glIsCommandListNV;
extern PFNGLISENABLEDPROC glIsEnabled;
extern PFNGLISENABLEDINDEXEDEXTPROC glIsEnabledIndexedEXT;
extern PFNGLISENABLEDIPROC glIsEnabledi;
extern PFNGLISENABLEDIEXTPROC glIsEnablediEXT;
extern PFNGLISENABLEDINVPROC glIsEnablediNV;
extern PFNGLISENABLEDIOESPROC glIsEnablediOES;
extern PFNGLISFENCEAPPLEPROC glIsFenceAPPLE;
extern PFNGLISFENCENVPROC glIsFenceNV;
extern PFNGLISFRAMEBUFFERPROC glIsFramebuffer;
extern PFNGLISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
extern PFNGLISFRAMEBUFFEROESPROC glIsFramebufferOES;
extern PFNGLISIMAGEHANDLERESIDENTARBPROC glIsImageHandleResidentARB;
extern PFNGLISIMAGEHANDLERESIDENTNVPROC glIsImageHandleResidentNV;
extern PFNGLISLISTPROC glIsList;
extern PFNGLISMEMORYOBJECTEXTPROC glIsMemoryObjectEXT;
extern PFNGLISNAMEAMDPROC glIsNameAMD;
extern PFNGLISNAMEDBUFFERRESIDENTNVPROC glIsNamedBufferResidentNV;
extern PFNGLISNAMEDSTRINGARBPROC glIsNamedStringARB;
extern PFNGLISOBJECTBUFFERATIPROC glIsObjectBufferATI;
extern PFNGLISOCCLUSIONQUERYNVPROC glIsOcclusionQueryNV;
extern PFNGLISPATHNVPROC glIsPathNV;
extern PFNGLISPOINTINFILLPATHNVPROC glIsPointInFillPathNV;
extern PFNGLISPOINTINSTROKEPATHNVPROC glIsPointInStrokePathNV;
extern PFNGLISPROGRAMPROC glIsProgram;
extern PFNGLISPROGRAMARBPROC glIsProgramARB;
extern PFNGLISPROGRAMNVPROC glIsProgramNV;
extern PFNGLISPROGRAMPIPELINEPROC glIsProgramPipeline;
extern PFNGLISPROGRAMPIPELINEEXTPROC glIsProgramPipelineEXT;
extern PFNGLISQUERYPROC glIsQuery;
extern PFNGLISQUERYARBPROC glIsQueryARB;
extern PFNGLISQUERYEXTPROC glIsQueryEXT;
extern PFNGLISRENDERBUFFERPROC glIsRenderbuffer;
extern PFNGLISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
extern PFNGLISRENDERBUFFEROESPROC glIsRenderbufferOES;
extern PFNGLISSEMAPHOREEXTPROC glIsSemaphoreEXT;
extern PFNGLISSAMPLERPROC glIsSampler;
extern PFNGLISSHADERPROC glIsShader;
extern PFNGLISSTATENVPROC glIsStateNV;
extern PFNGLISSYNCPROC glIsSync;
extern PFNGLISSYNCAPPLEPROC glIsSyncAPPLE;
extern PFNGLISTEXTUREPROC glIsTexture;
extern PFNGLISTEXTUREEXTPROC glIsTextureEXT;
extern PFNGLISTEXTUREHANDLERESIDENTARBPROC glIsTextureHandleResidentARB;
extern PFNGLISTEXTUREHANDLERESIDENTNVPROC glIsTextureHandleResidentNV;
extern PFNGLISTRANSFORMFEEDBACKPROC glIsTransformFeedback;
extern PFNGLISTRANSFORMFEEDBACKNVPROC glIsTransformFeedbackNV;
extern PFNGLISVARIANTENABLEDEXTPROC glIsVariantEnabledEXT;
extern PFNGLISVERTEXARRAYPROC glIsVertexArray;
extern PFNGLISVERTEXARRAYAPPLEPROC glIsVertexArrayAPPLE;
extern PFNGLISVERTEXARRAYOESPROC glIsVertexArrayOES;
extern PFNGLISVERTEXATTRIBENABLEDAPPLEPROC glIsVertexAttribEnabledAPPLE;
extern PFNGLLGPUCOPYIMAGESUBDATANVXPROC glLGPUCopyImageSubDataNVX;
extern PFNGLLGPUINTERLOCKNVXPROC glLGPUInterlockNVX;
extern PFNGLLGPUNAMEDBUFFERSUBDATANVXPROC glLGPUNamedBufferSubDataNVX;
extern PFNGLLABELOBJECTEXTPROC glLabelObjectEXT;
extern PFNGLLIGHTENVISGIXPROC glLightEnviSGIX;
extern PFNGLLIGHTMODELFPROC glLightModelf;
extern PFNGLLIGHTMODELFVPROC glLightModelfv;
extern PFNGLLIGHTMODELIPROC glLightModeli;
extern PFNGLLIGHTMODELIVPROC glLightModeliv;
extern PFNGLLIGHTMODELXPROC glLightModelx;
extern PFNGLLIGHTMODELXOESPROC glLightModelxOES;
extern PFNGLLIGHTMODELXVPROC glLightModelxv;
extern PFNGLLIGHTMODELXVOESPROC glLightModelxvOES;
extern PFNGLLIGHTFPROC glLightf;
extern PFNGLLIGHTFVPROC glLightfv;
extern PFNGLLIGHTIPROC glLighti;
extern PFNGLLIGHTIVPROC glLightiv;
extern PFNGLLIGHTXPROC glLightx;
extern PFNGLLIGHTXOESPROC glLightxOES;
extern PFNGLLIGHTXVPROC glLightxv;
extern PFNGLLIGHTXVOESPROC glLightxvOES;
extern PFNGLLINESTIPPLEPROC glLineStipple;
extern PFNGLLINEWIDTHPROC glLineWidth;
extern PFNGLLINEWIDTHXPROC glLineWidthx;
extern PFNGLLINEWIDTHXOESPROC glLineWidthxOES;
extern PFNGLLINKPROGRAMPROC glLinkProgram;
extern PFNGLLINKPROGRAMARBPROC glLinkProgramARB;
extern PFNGLLISTBASEPROC glListBase;
extern PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC glListDrawCommandsStatesClientNV;
extern PFNGLLISTPARAMETERFSGIXPROC glListParameterfSGIX;
extern PFNGLLISTPARAMETERFVSGIXPROC glListParameterfvSGIX;
extern PFNGLLISTPARAMETERISGIXPROC glListParameteriSGIX;
extern PFNGLLISTPARAMETERIVSGIXPROC glListParameterivSGIX;
extern PFNGLLOADIDENTITYPROC glLoadIdentity;
extern PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC glLoadIdentityDeformationMapSGIX;
extern PFNGLLOADMATRIXDPROC glLoadMatrixd;
extern PFNGLLOADMATRIXFPROC glLoadMatrixf;
extern PFNGLLOADMATRIXXPROC glLoadMatrixx;
extern PFNGLLOADMATRIXXOESPROC glLoadMatrixxOES;
extern PFNGLLOADNAMEPROC glLoadName;
extern PFNGLLOADPALETTEFROMMODELVIEWMATRIXOESPROC glLoadPaletteFromModelViewMatrixOES;
extern PFNGLLOADPROGRAMNVPROC glLoadProgramNV;
extern PFNGLLOADTRANSPOSEMATRIXDPROC glLoadTransposeMatrixd;
extern PFNGLLOADTRANSPOSEMATRIXDARBPROC glLoadTransposeMatrixdARB;
extern PFNGLLOADTRANSPOSEMATRIXFPROC glLoadTransposeMatrixf;
extern PFNGLLOADTRANSPOSEMATRIXFARBPROC glLoadTransposeMatrixfARB;
extern PFNGLLOADTRANSPOSEMATRIXXOESPROC glLoadTransposeMatrixxOES;
extern PFNGLLOCKARRAYSEXTPROC glLockArraysEXT;
extern PFNGLLOGICOPPROC glLogicOp;
extern PFNGLMAKEBUFFERNONRESIDENTNVPROC glMakeBufferNonResidentNV;
extern PFNGLMAKEBUFFERRESIDENTNVPROC glMakeBufferResidentNV;
extern PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC glMakeImageHandleNonResidentARB;
extern PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC glMakeImageHandleNonResidentNV;
extern PFNGLMAKEIMAGEHANDLERESIDENTARBPROC glMakeImageHandleResidentARB;
extern PFNGLMAKEIMAGEHANDLERESIDENTNVPROC glMakeImageHandleResidentNV;
extern PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC glMakeNamedBufferNonResidentNV;
extern PFNGLMAKENAMEDBUFFERRESIDENTNVPROC glMakeNamedBufferResidentNV;
extern PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC glMakeTextureHandleNonResidentARB;
extern PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC glMakeTextureHandleNonResidentNV;
extern PFNGLMAKETEXTUREHANDLERESIDENTARBPROC glMakeTextureHandleResidentARB;
extern PFNGLMAKETEXTUREHANDLERESIDENTNVPROC glMakeTextureHandleResidentNV;
extern PFNGLMAP1DPROC glMap1d;
extern PFNGLMAP1FPROC glMap1f;
extern PFNGLMAP1XOESPROC glMap1xOES;
extern PFNGLMAP2DPROC glMap2d;
extern PFNGLMAP2FPROC glMap2f;
extern PFNGLMAP2XOESPROC glMap2xOES;
extern PFNGLMAPBUFFERPROC glMapBuffer;
extern PFNGLMAPBUFFERARBPROC glMapBufferARB;
extern PFNGLMAPBUFFEROESPROC glMapBufferOES;
extern PFNGLMAPBUFFERRANGEPROC glMapBufferRange;
extern PFNGLMAPBUFFERRANGEEXTPROC glMapBufferRangeEXT;
extern PFNGLMAPCONTROLPOINTSNVPROC glMapControlPointsNV;
extern PFNGLMAPGRID1DPROC glMapGrid1d;
extern PFNGLMAPGRID1FPROC glMapGrid1f;
extern PFNGLMAPGRID1XOESPROC glMapGrid1xOES;
extern PFNGLMAPGRID2DPROC glMapGrid2d;
extern PFNGLMAPGRID2FPROC glMapGrid2f;
extern PFNGLMAPGRID2XOESPROC glMapGrid2xOES;
extern PFNGLMAPNAMEDBUFFERPROC glMapNamedBuffer;
extern PFNGLMAPNAMEDBUFFEREXTPROC glMapNamedBufferEXT;
extern PFNGLMAPNAMEDBUFFERRANGEPROC glMapNamedBufferRange;
extern PFNGLMAPNAMEDBUFFERRANGEEXTPROC glMapNamedBufferRangeEXT;
extern PFNGLMAPOBJECTBUFFERATIPROC glMapObjectBufferATI;
extern PFNGLMAPPARAMETERFVNVPROC glMapParameterfvNV;
extern PFNGLMAPPARAMETERIVNVPROC glMapParameterivNV;
extern PFNGLMAPTEXTURE2DINTELPROC glMapTexture2DINTEL;
extern PFNGLMAPVERTEXATTRIB1DAPPLEPROC glMapVertexAttrib1dAPPLE;
extern PFNGLMAPVERTEXATTRIB1FAPPLEPROC glMapVertexAttrib1fAPPLE;
extern PFNGLMAPVERTEXATTRIB2DAPPLEPROC glMapVertexAttrib2dAPPLE;
extern PFNGLMAPVERTEXATTRIB2FAPPLEPROC glMapVertexAttrib2fAPPLE;
extern PFNGLMATERIALFPROC glMaterialf;
extern PFNGLMATERIALFVPROC glMaterialfv;
extern PFNGLMATERIALIPROC glMateriali;
extern PFNGLMATERIALIVPROC glMaterialiv;
extern PFNGLMATERIALXPROC glMaterialx;
extern PFNGLMATERIALXOESPROC glMaterialxOES;
extern PFNGLMATERIALXVPROC glMaterialxv;
extern PFNGLMATERIALXVOESPROC glMaterialxvOES;
extern PFNGLMATRIXFRUSTUMEXTPROC glMatrixFrustumEXT;
extern PFNGLMATRIXINDEXPOINTERARBPROC glMatrixIndexPointerARB;
extern PFNGLMATRIXINDEXPOINTEROESPROC glMatrixIndexPointerOES;
extern PFNGLMATRIXINDEXUBVARBPROC glMatrixIndexubvARB;
extern PFNGLMATRIXINDEXUIVARBPROC glMatrixIndexuivARB;
extern PFNGLMATRIXINDEXUSVARBPROC glMatrixIndexusvARB;
extern PFNGLMATRIXLOAD3X2FNVPROC glMatrixLoad3x2fNV;
extern PFNGLMATRIXLOAD3X3FNVPROC glMatrixLoad3x3fNV;
extern PFNGLMATRIXLOADIDENTITYEXTPROC glMatrixLoadIdentityEXT;
extern PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC glMatrixLoadTranspose3x3fNV;
extern PFNGLMATRIXLOADTRANSPOSEDEXTPROC glMatrixLoadTransposedEXT;
extern PFNGLMATRIXLOADTRANSPOSEFEXTPROC glMatrixLoadTransposefEXT;
extern PFNGLMATRIXLOADDEXTPROC glMatrixLoaddEXT;
extern PFNGLMATRIXLOADFEXTPROC glMatrixLoadfEXT;
extern PFNGLMATRIXMODEPROC glMatrixMode;
extern PFNGLMATRIXMULT3X2FNVPROC glMatrixMult3x2fNV;
extern PFNGLMATRIXMULT3X3FNVPROC glMatrixMult3x3fNV;
extern PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC glMatrixMultTranspose3x3fNV;
extern PFNGLMATRIXMULTTRANSPOSEDEXTPROC glMatrixMultTransposedEXT;
extern PFNGLMATRIXMULTTRANSPOSEFEXTPROC glMatrixMultTransposefEXT;
extern PFNGLMATRIXMULTDEXTPROC glMatrixMultdEXT;
extern PFNGLMATRIXMULTFEXTPROC glMatrixMultfEXT;
extern PFNGLMATRIXORTHOEXTPROC glMatrixOrthoEXT;
extern PFNGLMATRIXPOPEXTPROC glMatrixPopEXT;
extern PFNGLMATRIXPUSHEXTPROC glMatrixPushEXT;
extern PFNGLMATRIXROTATEDEXTPROC glMatrixRotatedEXT;
extern PFNGLMATRIXROTATEFEXTPROC glMatrixRotatefEXT;
extern PFNGLMATRIXSCALEDEXTPROC glMatrixScaledEXT;
extern PFNGLMATRIXSCALEFEXTPROC glMatrixScalefEXT;
extern PFNGLMATRIXTRANSLATEDEXTPROC glMatrixTranslatedEXT;
extern PFNGLMATRIXTRANSLATEFEXTPROC glMatrixTranslatefEXT;
extern PFNGLMAXACTIVESHADERCORESARMPROC glMaxActiveShaderCoresARM;
extern PFNGLMAXSHADERCOMPILERTHREADSKHRPROC glMaxShaderCompilerThreadsKHR;
extern PFNGLMAXSHADERCOMPILERTHREADSARBPROC glMaxShaderCompilerThreadsARB;
extern PFNGLMEMORYBARRIERPROC glMemoryBarrier;
extern PFNGLMEMORYBARRIERBYREGIONPROC glMemoryBarrierByRegion;
extern PFNGLMEMORYBARRIEREXTPROC glMemoryBarrierEXT;
extern PFNGLMEMORYOBJECTPARAMETERIVEXTPROC glMemoryObjectParameterivEXT;
extern PFNGLMINSAMPLESHADINGPROC glMinSampleShading;
extern PFNGLMINSAMPLESHADINGARBPROC glMinSampleShadingARB;
extern PFNGLMINSAMPLESHADINGOESPROC glMinSampleShadingOES;
extern PFNGLMINMAXPROC glMinmax;
extern PFNGLMINMAXEXTPROC glMinmaxEXT;
extern PFNGLMULTMATRIXDPROC glMultMatrixd;
extern PFNGLMULTMATRIXFPROC glMultMatrixf;
extern PFNGLMULTMATRIXXPROC glMultMatrixx;
extern PFNGLMULTMATRIXXOESPROC glMultMatrixxOES;
extern PFNGLMULTTRANSPOSEMATRIXDPROC glMultTransposeMatrixd;
extern PFNGLMULTTRANSPOSEMATRIXDARBPROC glMultTransposeMatrixdARB;
extern PFNGLMULTTRANSPOSEMATRIXFPROC glMultTransposeMatrixf;
extern PFNGLMULTTRANSPOSEMATRIXFARBPROC glMultTransposeMatrixfARB;
extern PFNGLMULTTRANSPOSEMATRIXXOESPROC glMultTransposeMatrixxOES;
extern PFNGLMULTIDRAWARRAYSPROC glMultiDrawArrays;
extern PFNGLMULTIDRAWARRAYSEXTPROC glMultiDrawArraysEXT;
extern PFNGLMULTIDRAWARRAYSINDIRECTPROC glMultiDrawArraysIndirect;
extern PFNGLMULTIDRAWARRAYSINDIRECTAMDPROC glMultiDrawArraysIndirectAMD;
extern PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC glMultiDrawArraysIndirectBindlessCountNV;
extern PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC glMultiDrawArraysIndirectBindlessNV;
extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTPROC glMultiDrawArraysIndirectCount;
extern PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC glMultiDrawArraysIndirectCountARB;
extern PFNGLMULTIDRAWARRAYSINDIRECTEXTPROC glMultiDrawArraysIndirectEXT;
extern PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC glMultiDrawElementArrayAPPLE;
extern PFNGLMULTIDRAWELEMENTSPROC glMultiDrawElements;
extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC glMultiDrawElementsBaseVertex;
extern PFNGLMULTIDRAWELEMENTSBASEVERTEXEXTPROC glMultiDrawElementsBaseVertexEXT;
extern PFNGLMULTIDRAWELEMENTSEXTPROC glMultiDrawElementsEXT;
extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC glMultiDrawElementsIndirect;
extern PFNGLMULTIDRAWELEMENTSINDIRECTAMDPROC glMultiDrawElementsIndirectAMD;
extern PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC glMultiDrawElementsIndirectBindlessCountNV;
extern PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC glMultiDrawElementsIndirectBindlessNV;
extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTPROC glMultiDrawElementsIndirectCount;
extern PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC glMultiDrawElementsIndirectCountARB;
extern PFNGLMULTIDRAWELEMENTSINDIRECTEXTPROC glMultiDrawElementsIndirectEXT;
extern PFNGLMULTIDRAWMESHTASKSINDIRECTNVPROC glMultiDrawMeshTasksIndirectNV;
extern PFNGLMULTIDRAWMESHTASKSINDIRECTCOUNTNVPROC glMultiDrawMeshTasksIndirectCountNV;
extern PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC glMultiDrawRangeElementArrayAPPLE;
extern PFNGLMULTIMODEDRAWARRAYSIBMPROC glMultiModeDrawArraysIBM;
extern PFNGLMULTIMODEDRAWELEMENTSIBMPROC glMultiModeDrawElementsIBM;
extern PFNGLMULTITEXBUFFEREXTPROC glMultiTexBufferEXT;
extern PFNGLMULTITEXCOORD1BOESPROC glMultiTexCoord1bOES;
extern PFNGLMULTITEXCOORD1BVOESPROC glMultiTexCoord1bvOES;
extern PFNGLMULTITEXCOORD1DPROC glMultiTexCoord1d;
extern PFNGLMULTITEXCOORD1DARBPROC glMultiTexCoord1dARB;
extern PFNGLMULTITEXCOORD1DVPROC glMultiTexCoord1dv;
extern PFNGLMULTITEXCOORD1DVARBPROC glMultiTexCoord1dvARB;
extern PFNGLMULTITEXCOORD1FPROC glMultiTexCoord1f;
extern PFNGLMULTITEXCOORD1FARBPROC glMultiTexCoord1fARB;
extern PFNGLMULTITEXCOORD1FVPROC glMultiTexCoord1fv;
extern PFNGLMULTITEXCOORD1FVARBPROC glMultiTexCoord1fvARB;
extern PFNGLMULTITEXCOORD1HNVPROC glMultiTexCoord1hNV;
extern PFNGLMULTITEXCOORD1HVNVPROC glMultiTexCoord1hvNV;
extern PFNGLMULTITEXCOORD1IPROC glMultiTexCoord1i;
extern PFNGLMULTITEXCOORD1IARBPROC glMultiTexCoord1iARB;
extern PFNGLMULTITEXCOORD1IVPROC glMultiTexCoord1iv;
extern PFNGLMULTITEXCOORD1IVARBPROC glMultiTexCoord1ivARB;
extern PFNGLMULTITEXCOORD1SPROC glMultiTexCoord1s;
extern PFNGLMULTITEXCOORD1SARBPROC glMultiTexCoord1sARB;
extern PFNGLMULTITEXCOORD1SVPROC glMultiTexCoord1sv;
extern PFNGLMULTITEXCOORD1SVARBPROC glMultiTexCoord1svARB;
extern PFNGLMULTITEXCOORD1XOESPROC glMultiTexCoord1xOES;
extern PFNGLMULTITEXCOORD1XVOESPROC glMultiTexCoord1xvOES;
extern PFNGLMULTITEXCOORD2BOESPROC glMultiTexCoord2bOES;
extern PFNGLMULTITEXCOORD2BVOESPROC glMultiTexCoord2bvOES;
extern PFNGLMULTITEXCOORD2DPROC glMultiTexCoord2d;
extern PFNGLMULTITEXCOORD2DARBPROC glMultiTexCoord2dARB;
extern PFNGLMULTITEXCOORD2DVPROC glMultiTexCoord2dv;
extern PFNGLMULTITEXCOORD2DVARBPROC glMultiTexCoord2dvARB;
extern PFNGLMULTITEXCOORD2FPROC glMultiTexCoord2f;
extern PFNGLMULTITEXCOORD2FARBPROC glMultiTexCoord2fARB;
extern PFNGLMULTITEXCOORD2FVPROC glMultiTexCoord2fv;
extern PFNGLMULTITEXCOORD2FVARBPROC glMultiTexCoord2fvARB;
extern PFNGLMULTITEXCOORD2HNVPROC glMultiTexCoord2hNV;
extern PFNGLMULTITEXCOORD2HVNVPROC glMultiTexCoord2hvNV;
extern PFNGLMULTITEXCOORD2IPROC glMultiTexCoord2i;
extern PFNGLMULTITEXCOORD2IARBPROC glMultiTexCoord2iARB;
extern PFNGLMULTITEXCOORD2IVPROC glMultiTexCoord2iv;
extern PFNGLMULTITEXCOORD2IVARBPROC glMultiTexCoord2ivARB;
extern PFNGLMULTITEXCOORD2SPROC glMultiTexCoord2s;
extern PFNGLMULTITEXCOORD2SARBPROC glMultiTexCoord2sARB;
extern PFNGLMULTITEXCOORD2SVPROC glMultiTexCoord2sv;
extern PFNGLMULTITEXCOORD2SVARBPROC glMultiTexCoord2svARB;
extern PFNGLMULTITEXCOORD2XOESPROC glMultiTexCoord2xOES;
extern PFNGLMULTITEXCOORD2XVOESPROC glMultiTexCoord2xvOES;
extern PFNGLMULTITEXCOORD3BOESPROC glMultiTexCoord3bOES;
extern PFNGLMULTITEXCOORD3BVOESPROC glMultiTexCoord3bvOES;
extern PFNGLMULTITEXCOORD3DPROC glMultiTexCoord3d;
extern PFNGLMULTITEXCOORD3DARBPROC glMultiTexCoord3dARB;
extern PFNGLMULTITEXCOORD3DVPROC glMultiTexCoord3dv;
extern PFNGLMULTITEXCOORD3DVARBPROC glMultiTexCoord3dvARB;
extern PFNGLMULTITEXCOORD3FPROC glMultiTexCoord3f;
extern PFNGLMULTITEXCOORD3FARBPROC glMultiTexCoord3fARB;
extern PFNGLMULTITEXCOORD3FVPROC glMultiTexCoord3fv;
extern PFNGLMULTITEXCOORD3FVARBPROC glMultiTexCoord3fvARB;
extern PFNGLMULTITEXCOORD3HNVPROC glMultiTexCoord3hNV;
extern PFNGLMULTITEXCOORD3HVNVPROC glMultiTexCoord3hvNV;
extern PFNGLMULTITEXCOORD3IPROC glMultiTexCoord3i;
extern PFNGLMULTITEXCOORD3IARBPROC glMultiTexCoord3iARB;
extern PFNGLMULTITEXCOORD3IVPROC glMultiTexCoord3iv;
extern PFNGLMULTITEXCOORD3IVARBPROC glMultiTexCoord3ivARB;
extern PFNGLMULTITEXCOORD3SPROC glMultiTexCoord3s;
extern PFNGLMULTITEXCOORD3SARBPROC glMultiTexCoord3sARB;
extern PFNGLMULTITEXCOORD3SVPROC glMultiTexCoord3sv;
extern PFNGLMULTITEXCOORD3SVARBPROC glMultiTexCoord3svARB;
extern PFNGLMULTITEXCOORD3XOESPROC glMultiTexCoord3xOES;
extern PFNGLMULTITEXCOORD3XVOESPROC glMultiTexCoord3xvOES;
extern PFNGLMULTITEXCOORD4BOESPROC glMultiTexCoord4bOES;
extern PFNGLMULTITEXCOORD4BVOESPROC glMultiTexCoord4bvOES;
extern PFNGLMULTITEXCOORD4DPROC glMultiTexCoord4d;
extern PFNGLMULTITEXCOORD4DARBPROC glMultiTexCoord4dARB;
extern PFNGLMULTITEXCOORD4DVPROC glMultiTexCoord4dv;
extern PFNGLMULTITEXCOORD4DVARBPROC glMultiTexCoord4dvARB;
extern PFNGLMULTITEXCOORD4FPROC glMultiTexCoord4f;
extern PFNGLMULTITEXCOORD4FARBPROC glMultiTexCoord4fARB;
extern PFNGLMULTITEXCOORD4FVPROC glMultiTexCoord4fv;
extern PFNGLMULTITEXCOORD4FVARBPROC glMultiTexCoord4fvARB;
extern PFNGLMULTITEXCOORD4HNVPROC glMultiTexCoord4hNV;
extern PFNGLMULTITEXCOORD4HVNVPROC glMultiTexCoord4hvNV;
extern PFNGLMULTITEXCOORD4IPROC glMultiTexCoord4i;
extern PFNGLMULTITEXCOORD4IARBPROC glMultiTexCoord4iARB;
extern PFNGLMULTITEXCOORD4IVPROC glMultiTexCoord4iv;
extern PFNGLMULTITEXCOORD4IVARBPROC glMultiTexCoord4ivARB;
extern PFNGLMULTITEXCOORD4SPROC glMultiTexCoord4s;
extern PFNGLMULTITEXCOORD4SARBPROC glMultiTexCoord4sARB;
extern PFNGLMULTITEXCOORD4SVPROC glMultiTexCoord4sv;
extern PFNGLMULTITEXCOORD4SVARBPROC glMultiTexCoord4svARB;
extern PFNGLMULTITEXCOORD4XPROC glMultiTexCoord4x;
extern PFNGLMULTITEXCOORD4XOESPROC glMultiTexCoord4xOES;
extern PFNGLMULTITEXCOORD4XVOESPROC glMultiTexCoord4xvOES;
extern PFNGLMULTITEXCOORDP1UIPROC glMultiTexCoordP1ui;
extern PFNGLMULTITEXCOORDP1UIVPROC glMultiTexCoordP1uiv;
extern PFNGLMULTITEXCOORDP2UIPROC glMultiTexCoordP2ui;
extern PFNGLMULTITEXCOORDP2UIVPROC glMultiTexCoordP2uiv;
extern PFNGLMULTITEXCOORDP3UIPROC glMultiTexCoordP3ui;
extern PFNGLMULTITEXCOORDP3UIVPROC glMultiTexCoordP3uiv;
extern PFNGLMULTITEXCOORDP4UIPROC glMultiTexCoordP4ui;
extern PFNGLMULTITEXCOORDP4UIVPROC glMultiTexCoordP4uiv;
extern PFNGLMULTITEXCOORDPOINTEREXTPROC glMultiTexCoordPointerEXT;
extern PFNGLMULTITEXENVFEXTPROC glMultiTexEnvfEXT;
extern PFNGLMULTITEXENVFVEXTPROC glMultiTexEnvfvEXT;
extern PFNGLMULTITEXENVIEXTPROC glMultiTexEnviEXT;
extern PFNGLMULTITEXENVIVEXTPROC glMultiTexEnvivEXT;
extern PFNGLMULTITEXGENDEXTPROC glMultiTexGendEXT;
extern PFNGLMULTITEXGENDVEXTPROC glMultiTexGendvEXT;
extern PFNGLMULTITEXGENFEXTPROC glMultiTexGenfEXT;
extern PFNGLMULTITEXGENFVEXTPROC glMultiTexGenfvEXT;
extern PFNGLMULTITEXGENIEXTPROC glMultiTexGeniEXT;
extern PFNGLMULTITEXGENIVEXTPROC glMultiTexGenivEXT;
extern PFNGLMULTITEXIMAGE1DEXTPROC glMultiTexImage1DEXT;
extern PFNGLMULTITEXIMAGE2DEXTPROC glMultiTexImage2DEXT;
extern PFNGLMULTITEXIMAGE3DEXTPROC glMultiTexImage3DEXT;
extern PFNGLMULTITEXPARAMETERIIVEXTPROC glMultiTexParameterIivEXT;
extern PFNGLMULTITEXPARAMETERIUIVEXTPROC glMultiTexParameterIuivEXT;
extern PFNGLMULTITEXPARAMETERFEXTPROC glMultiTexParameterfEXT;
extern PFNGLMULTITEXPARAMETERFVEXTPROC glMultiTexParameterfvEXT;
extern PFNGLMULTITEXPARAMETERIEXTPROC glMultiTexParameteriEXT;
extern PFNGLMULTITEXPARAMETERIVEXTPROC glMultiTexParameterivEXT;
extern PFNGLMULTITEXRENDERBUFFEREXTPROC glMultiTexRenderbufferEXT;
extern PFNGLMULTITEXSUBIMAGE1DEXTPROC glMultiTexSubImage1DEXT;
extern PFNGLMULTITEXSUBIMAGE2DEXTPROC glMultiTexSubImage2DEXT;
extern PFNGLMULTITEXSUBIMAGE3DEXTPROC glMultiTexSubImage3DEXT;
extern PFNGLMULTICASTBARRIERNVPROC glMulticastBarrierNV;
extern PFNGLMULTICASTBLITFRAMEBUFFERNVPROC glMulticastBlitFramebufferNV;
extern PFNGLMULTICASTBUFFERSUBDATANVPROC glMulticastBufferSubDataNV;
extern PFNGLMULTICASTCOPYBUFFERSUBDATANVPROC glMulticastCopyBufferSubDataNV;
extern PFNGLMULTICASTCOPYIMAGESUBDATANVPROC glMulticastCopyImageSubDataNV;
extern PFNGLMULTICASTFRAMEBUFFERSAMPLELOCATIONSFVNVPROC glMulticastFramebufferSampleLocationsfvNV;
extern PFNGLMULTICASTGETQUERYOBJECTI64VNVPROC glMulticastGetQueryObjecti64vNV;
extern PFNGLMULTICASTGETQUERYOBJECTIVNVPROC glMulticastGetQueryObjectivNV;
extern PFNGLMULTICASTGETQUERYOBJECTUI64VNVPROC glMulticastGetQueryObjectui64vNV;
extern PFNGLMULTICASTGETQUERYOBJECTUIVNVPROC glMulticastGetQueryObjectuivNV;
extern PFNGLMULTICASTSCISSORARRAYVNVXPROC glMulticastScissorArrayvNVX;
extern PFNGLMULTICASTVIEWPORTARRAYVNVXPROC glMulticastViewportArrayvNVX;
extern PFNGLMULTICASTVIEWPORTPOSITIONWSCALENVXPROC glMulticastViewportPositionWScaleNVX;
extern PFNGLMULTICASTWAITSYNCNVPROC glMulticastWaitSyncNV;
extern PFNGLNAMEDBUFFERATTACHMEMORYNVPROC glNamedBufferAttachMemoryNV;
extern PFNGLNAMEDBUFFERDATAPROC glNamedBufferData;
extern PFNGLNAMEDBUFFERDATAEXTPROC glNamedBufferDataEXT;
extern PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC glNamedBufferPageCommitmentARB;
extern PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC glNamedBufferPageCommitmentEXT;
extern PFNGLNAMEDBUFFERPAGECOMMITMENTMEMNVPROC glNamedBufferPageCommitmentMemNV;
extern PFNGLNAMEDBUFFERSTORAGEPROC glNamedBufferStorage;
extern PFNGLNAMEDBUFFERSTORAGEEXTERNALEXTPROC glNamedBufferStorageExternalEXT;
extern PFNGLNAMEDBUFFERSTORAGEEXTPROC glNamedBufferStorageEXT;
extern PFNGLNAMEDBUFFERSTORAGEMEMEXTPROC glNamedBufferStorageMemEXT;
extern PFNGLNAMEDBUFFERSUBDATAPROC glNamedBufferSubData;
extern PFNGLNAMEDBUFFERSUBDATAEXTPROC glNamedBufferSubDataEXT;
extern PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC glNamedCopyBufferSubDataEXT;
extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC glNamedFramebufferDrawBuffer;
extern PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC glNamedFramebufferDrawBuffers;
extern PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC glNamedFramebufferParameteri;
extern PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC glNamedFramebufferParameteriEXT;
extern PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC glNamedFramebufferReadBuffer;
extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC glNamedFramebufferRenderbuffer;
extern PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC glNamedFramebufferRenderbufferEXT;
extern PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC glNamedFramebufferSampleLocationsfvARB;
extern PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC glNamedFramebufferSampleLocationsfvNV;
extern PFNGLNAMEDFRAMEBUFFERTEXTUREPROC glNamedFramebufferTexture;
extern PFNGLNAMEDFRAMEBUFFERSAMPLEPOSITIONSFVAMDPROC glNamedFramebufferSamplePositionsfvAMD;
extern PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC glNamedFramebufferTexture1DEXT;
extern PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC glNamedFramebufferTexture2DEXT;
extern PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC glNamedFramebufferTexture3DEXT;
extern PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC glNamedFramebufferTextureEXT;
extern PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC glNamedFramebufferTextureFaceEXT;
extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC glNamedFramebufferTextureLayer;
extern PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC glNamedFramebufferTextureLayerEXT;
extern PFNGLNAMEDFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC glNamedFramebufferTextureMultiviewOVR;
extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC glNamedProgramLocalParameter4dEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC glNamedProgramLocalParameter4dvEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC glNamedProgramLocalParameter4fEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC glNamedProgramLocalParameter4fvEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC glNamedProgramLocalParameterI4iEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC glNamedProgramLocalParameterI4ivEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC glNamedProgramLocalParameterI4uiEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC glNamedProgramLocalParameterI4uivEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC glNamedProgramLocalParameters4fvEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC glNamedProgramLocalParametersI4ivEXT;
extern PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC glNamedProgramLocalParametersI4uivEXT;
extern PFNGLNAMEDPROGRAMSTRINGEXTPROC glNamedProgramStringEXT;
extern PFNGLNAMEDRENDERBUFFERSTORAGEPROC glNamedRenderbufferStorage;
extern PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC glNamedRenderbufferStorageEXT;
extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC glNamedRenderbufferStorageMultisample;
extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC glNamedRenderbufferStorageMultisampleAdvancedAMD;
extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC glNamedRenderbufferStorageMultisampleCoverageEXT;
extern PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glNamedRenderbufferStorageMultisampleEXT;
extern PFNGLNAMEDSTRINGARBPROC glNamedStringARB;
extern PFNGLNEWLISTPROC glNewList;
extern PFNGLNEWOBJECTBUFFERATIPROC glNewObjectBufferATI;
extern PFNGLNORMAL3BPROC glNormal3b;
extern PFNGLNORMAL3BVPROC glNormal3bv;
extern PFNGLNORMAL3DPROC glNormal3d;
extern PFNGLNORMAL3DVPROC glNormal3dv;
extern PFNGLNORMAL3FPROC glNormal3f;
extern PFNGLNORMAL3FVERTEX3FSUNPROC glNormal3fVertex3fSUN;
extern PFNGLNORMAL3FVERTEX3FVSUNPROC glNormal3fVertex3fvSUN;
extern PFNGLNORMAL3FVPROC glNormal3fv;
extern PFNGLNORMAL3HNVPROC glNormal3hNV;
extern PFNGLNORMAL3HVNVPROC glNormal3hvNV;
extern PFNGLNORMAL3IPROC glNormal3i;
extern PFNGLNORMAL3IVPROC glNormal3iv;
extern PFNGLNORMAL3SPROC glNormal3s;
extern PFNGLNORMAL3SVPROC glNormal3sv;
extern PFNGLNORMAL3XPROC glNormal3x;
extern PFNGLNORMAL3XOESPROC glNormal3xOES;
extern PFNGLNORMAL3XVOESPROC glNormal3xvOES;
extern PFNGLNORMALFORMATNVPROC glNormalFormatNV;
extern PFNGLNORMALP3UIPROC glNormalP3ui;
extern PFNGLNORMALP3UIVPROC glNormalP3uiv;
extern PFNGLNORMALPOINTERPROC glNormalPointer;
extern PFNGLNORMALPOINTEREXTPROC glNormalPointerEXT;
extern PFNGLNORMALPOINTERLISTIBMPROC glNormalPointerListIBM;
extern PFNGLNORMALPOINTERVINTELPROC glNormalPointervINTEL;
extern PFNGLNORMALSTREAM3BATIPROC glNormalStream3bATI;
extern PFNGLNORMALSTREAM3BVATIPROC glNormalStream3bvATI;
extern PFNGLNORMALSTREAM3DATIPROC glNormalStream3dATI;
extern PFNGLNORMALSTREAM3DVATIPROC glNormalStream3dvATI;
extern PFNGLNORMALSTREAM3FATIPROC glNormalStream3fATI;
extern PFNGLNORMALSTREAM3FVATIPROC glNormalStream3fvATI;
extern PFNGLNORMALSTREAM3IATIPROC glNormalStream3iATI;
extern PFNGLNORMALSTREAM3IVATIPROC glNormalStream3ivATI;
extern PFNGLNORMALSTREAM3SATIPROC glNormalStream3sATI;
extern PFNGLNORMALSTREAM3SVATIPROC glNormalStream3svATI;
extern PFNGLOBJECTLABELPROC glObjectLabel;
extern PFNGLOBJECTLABELKHRPROC glObjectLabelKHR;
extern PFNGLOBJECTPTRLABELPROC glObjectPtrLabel;
extern PFNGLOBJECTPTRLABELKHRPROC glObjectPtrLabelKHR;
extern PFNGLOBJECTPURGEABLEAPPLEPROC glObjectPurgeableAPPLE;
extern PFNGLOBJECTUNPURGEABLEAPPLEPROC glObjectUnpurgeableAPPLE;
extern PFNGLORTHOPROC glOrtho;
extern PFNGLORTHOFPROC glOrthof;
extern PFNGLORTHOFOESPROC glOrthofOES;
extern PFNGLORTHOXPROC glOrthox;
extern PFNGLORTHOXOESPROC glOrthoxOES;
extern PFNGLPNTRIANGLESFATIPROC glPNTrianglesfATI;
extern PFNGLPNTRIANGLESIATIPROC glPNTrianglesiATI;
extern PFNGLPASSTEXCOORDATIPROC glPassTexCoordATI;
extern PFNGLPASSTHROUGHPROC glPassThrough;
extern PFNGLPASSTHROUGHXOESPROC glPassThroughxOES;
extern PFNGLPATCHPARAMETERFVPROC glPatchParameterfv;
extern PFNGLPATCHPARAMETERIPROC glPatchParameteri;
extern PFNGLPATCHPARAMETERIEXTPROC glPatchParameteriEXT;
extern PFNGLPATCHPARAMETERIOESPROC glPatchParameteriOES;
extern PFNGLPATHCOLORGENNVPROC glPathColorGenNV;
extern PFNGLPATHCOMMANDSNVPROC glPathCommandsNV;
extern PFNGLPATHCOORDSNVPROC glPathCoordsNV;
extern PFNGLPATHCOVERDEPTHFUNCNVPROC glPathCoverDepthFuncNV;
extern PFNGLPATHDASHARRAYNVPROC glPathDashArrayNV;
extern PFNGLPATHFOGGENNVPROC glPathFogGenNV;
extern PFNGLPATHGLYPHINDEXARRAYNVPROC glPathGlyphIndexArrayNV;
extern PFNGLPATHGLYPHINDEXRANGENVPROC glPathGlyphIndexRangeNV;
extern PFNGLPATHGLYPHRANGENVPROC glPathGlyphRangeNV;
extern PFNGLPATHGLYPHSNVPROC glPathGlyphsNV;
extern PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC glPathMemoryGlyphIndexArrayNV;
extern PFNGLPATHPARAMETERFNVPROC glPathParameterfNV;
extern PFNGLPATHPARAMETERFVNVPROC glPathParameterfvNV;
extern PFNGLPATHPARAMETERINVPROC glPathParameteriNV;
extern PFNGLPATHPARAMETERIVNVPROC glPathParameterivNV;
extern PFNGLPATHSTENCILDEPTHOFFSETNVPROC glPathStencilDepthOffsetNV;
extern PFNGLPATHSTENCILFUNCNVPROC glPathStencilFuncNV;
extern PFNGLPATHSTRINGNVPROC glPathStringNV;
extern PFNGLPATHSUBCOMMANDSNVPROC glPathSubCommandsNV;
extern PFNGLPATHSUBCOORDSNVPROC glPathSubCoordsNV;
extern PFNGLPATHTEXGENNVPROC glPathTexGenNV;
extern PFNGLPAUSETRANSFORMFEEDBACKPROC glPauseTransformFeedback;
extern PFNGLPAUSETRANSFORMFEEDBACKNVPROC glPauseTransformFeedbackNV;
extern PFNGLPIXELDATARANGENVPROC glPixelDataRangeNV;
extern PFNGLPIXELMAPFVPROC glPixelMapfv;
extern PFNGLPIXELMAPUIVPROC glPixelMapuiv;
extern PFNGLPIXELMAPUSVPROC glPixelMapusv;
extern PFNGLPIXELMAPXPROC glPixelMapx;
extern PFNGLPIXELSTOREFPROC glPixelStoref;
extern PFNGLPIXELSTOREIPROC glPixelStorei;
extern PFNGLPIXELSTOREXPROC glPixelStorex;
extern PFNGLPIXELTEXGENPARAMETERFSGISPROC glPixelTexGenParameterfSGIS;
extern PFNGLPIXELTEXGENPARAMETERFVSGISPROC glPixelTexGenParameterfvSGIS;
extern PFNGLPIXELTEXGENPARAMETERISGISPROC glPixelTexGenParameteriSGIS;
extern PFNGLPIXELTEXGENPARAMETERIVSGISPROC glPixelTexGenParameterivSGIS;
extern PFNGLPIXELTEXGENSGIXPROC glPixelTexGenSGIX;
extern PFNGLPIXELTRANSFERFPROC glPixelTransferf;
extern PFNGLPIXELTRANSFERIPROC glPixelTransferi;
extern PFNGLPIXELTRANSFERXOESPROC glPixelTransferxOES;
extern PFNGLPIXELTRANSFORMPARAMETERFEXTPROC glPixelTransformParameterfEXT;
extern PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC glPixelTransformParameterfvEXT;
extern PFNGLPIXELTRANSFORMPARAMETERIEXTPROC glPixelTransformParameteriEXT;
extern PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC glPixelTransformParameterivEXT;
extern PFNGLPIXELZOOMPROC glPixelZoom;
extern PFNGLPIXELZOOMXOESPROC glPixelZoomxOES;
extern PFNGLPOINTALONGPATHNVPROC glPointAlongPathNV;
extern PFNGLPOINTPARAMETERFPROC glPointParameterf;
extern PFNGLPOINTPARAMETERFARBPROC glPointParameterfARB;
extern PFNGLPOINTPARAMETERFEXTPROC glPointParameterfEXT;
extern PFNGLPOINTPARAMETERFSGISPROC glPointParameterfSGIS;
extern PFNGLPOINTPARAMETERFVPROC glPointParameterfv;
extern PFNGLPOINTPARAMETERFVARBPROC glPointParameterfvARB;
extern PFNGLPOINTPARAMETERFVEXTPROC glPointParameterfvEXT;
extern PFNGLPOINTPARAMETERFVSGISPROC glPointParameterfvSGIS;
extern PFNGLPOINTPARAMETERIPROC glPointParameteri;
extern PFNGLPOINTPARAMETERINVPROC glPointParameteriNV;
extern PFNGLPOINTPARAMETERIVPROC glPointParameteriv;
extern PFNGLPOINTPARAMETERIVNVPROC glPointParameterivNV;
extern PFNGLPOINTPARAMETERXPROC glPointParameterx;
extern PFNGLPOINTPARAMETERXOESPROC glPointParameterxOES;
extern PFNGLPOINTPARAMETERXVPROC glPointParameterxv;
extern PFNGLPOINTPARAMETERXVOESPROC glPointParameterxvOES;
extern PFNGLPOINTSIZEPROC glPointSize;
extern PFNGLPOINTSIZEPOINTEROESPROC glPointSizePointerOES;
extern PFNGLPOINTSIZEXPROC glPointSizex;
extern PFNGLPOINTSIZEXOESPROC glPointSizexOES;
extern PFNGLPOLLASYNCSGIXPROC glPollAsyncSGIX;
extern PFNGLPOLLINSTRUMENTSSGIXPROC glPollInstrumentsSGIX;
extern PFNGLPOLYGONMODEPROC glPolygonMode;
extern PFNGLPOLYGONMODENVPROC glPolygonModeNV;
extern PFNGLPOLYGONOFFSETPROC glPolygonOffset;
extern PFNGLPOLYGONOFFSETCLAMPPROC glPolygonOffsetClamp;
extern PFNGLPOLYGONOFFSETCLAMPEXTPROC glPolygonOffsetClampEXT;
extern PFNGLPOLYGONOFFSETEXTPROC glPolygonOffsetEXT;
extern PFNGLPOLYGONOFFSETXPROC glPolygonOffsetx;
extern PFNGLPOLYGONOFFSETXOESPROC glPolygonOffsetxOES;
extern PFNGLPOLYGONSTIPPLEPROC glPolygonStipple;
extern PFNGLPOPATTRIBPROC glPopAttrib;
extern PFNGLPOPCLIENTATTRIBPROC glPopClientAttrib;
extern PFNGLPOPDEBUGGROUPPROC glPopDebugGroup;
extern PFNGLPOPDEBUGGROUPKHRPROC glPopDebugGroupKHR;
extern PFNGLPOPGROUPMARKEREXTPROC glPopGroupMarkerEXT;
extern PFNGLPOPMATRIXPROC glPopMatrix;
extern PFNGLPOPNAMEPROC glPopName;
extern PFNGLPRESENTFRAMEDUALFILLNVPROC glPresentFrameDualFillNV;
extern PFNGLPRESENTFRAMEKEYEDNVPROC glPresentFrameKeyedNV;
extern PFNGLPRIMITIVEBOUNDINGBOXPROC glPrimitiveBoundingBox;
extern PFNGLPRIMITIVEBOUNDINGBOXARBPROC glPrimitiveBoundingBoxARB;
extern PFNGLPRIMITIVEBOUNDINGBOXEXTPROC glPrimitiveBoundingBoxEXT;
extern PFNGLPRIMITIVEBOUNDINGBOXOESPROC glPrimitiveBoundingBoxOES;
extern PFNGLPRIMITIVERESTARTINDEXPROC glPrimitiveRestartIndex;
extern PFNGLPRIMITIVERESTARTINDEXNVPROC glPrimitiveRestartIndexNV;
extern PFNGLPRIMITIVERESTARTNVPROC glPrimitiveRestartNV;
extern PFNGLPRIORITIZETEXTURESPROC glPrioritizeTextures;
extern PFNGLPRIORITIZETEXTURESEXTPROC glPrioritizeTexturesEXT;
extern PFNGLPRIORITIZETEXTURESXOESPROC glPrioritizeTexturesxOES;
extern PFNGLPROGRAMBINARYPROC glProgramBinary;
extern PFNGLPROGRAMBINARYOESPROC glProgramBinaryOES;
extern PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC glProgramBufferParametersIivNV;
extern PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC glProgramBufferParametersIuivNV;
extern PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC glProgramBufferParametersfvNV;
extern PFNGLPROGRAMENVPARAMETER4DARBPROC glProgramEnvParameter4dARB;
extern PFNGLPROGRAMENVPARAMETER4DVARBPROC glProgramEnvParameter4dvARB;
extern PFNGLPROGRAMENVPARAMETER4FARBPROC glProgramEnvParameter4fARB;
extern PFNGLPROGRAMENVPARAMETER4FVARBPROC glProgramEnvParameter4fvARB;
extern PFNGLPROGRAMENVPARAMETERI4INVPROC glProgramEnvParameterI4iNV;
extern PFNGLPROGRAMENVPARAMETERI4IVNVPROC glProgramEnvParameterI4ivNV;
extern PFNGLPROGRAMENVPARAMETERI4UINVPROC glProgramEnvParameterI4uiNV;
extern PFNGLPROGRAMENVPARAMETERI4UIVNVPROC glProgramEnvParameterI4uivNV;
extern PFNGLPROGRAMENVPARAMETERS4FVEXTPROC glProgramEnvParameters4fvEXT;
extern PFNGLPROGRAMENVPARAMETERSI4IVNVPROC glProgramEnvParametersI4ivNV;
extern PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC glProgramEnvParametersI4uivNV;
extern PFNGLPROGRAMLOCALPARAMETER4DARBPROC glProgramLocalParameter4dARB;
extern PFNGLPROGRAMLOCALPARAMETER4DVARBPROC glProgramLocalParameter4dvARB;
extern PFNGLPROGRAMLOCALPARAMETER4FARBPROC glProgramLocalParameter4fARB;
extern PFNGLPROGRAMLOCALPARAMETER4FVARBPROC glProgramLocalParameter4fvARB;
extern PFNGLPROGRAMLOCALPARAMETERI4INVPROC glProgramLocalParameterI4iNV;
extern PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC glProgramLocalParameterI4ivNV;
extern PFNGLPROGRAMLOCALPARAMETERI4UINVPROC glProgramLocalParameterI4uiNV;
extern PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC glProgramLocalParameterI4uivNV;
extern PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC glProgramLocalParameters4fvEXT;
extern PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC glProgramLocalParametersI4ivNV;
extern PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC glProgramLocalParametersI4uivNV;
extern PFNGLPROGRAMNAMEDPARAMETER4DNVPROC glProgramNamedParameter4dNV;
extern PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC glProgramNamedParameter4dvNV;
extern PFNGLPROGRAMNAMEDPARAMETER4FNVPROC glProgramNamedParameter4fNV;
extern PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC glProgramNamedParameter4fvNV;
extern PFNGLPROGRAMPARAMETER4DNVPROC glProgramParameter4dNV;
extern PFNGLPROGRAMPARAMETER4DVNVPROC glProgramParameter4dvNV;
extern PFNGLPROGRAMPARAMETER4FNVPROC glProgramParameter4fNV;
extern PFNGLPROGRAMPARAMETER4FVNVPROC glProgramParameter4fvNV;
extern PFNGLPROGRAMPARAMETERIPROC glProgramParameteri;
extern PFNGLPROGRAMPARAMETERIARBPROC glProgramParameteriARB;
extern PFNGLPROGRAMPARAMETERIEXTPROC glProgramParameteriEXT;
extern PFNGLPROGRAMPARAMETERS4DVNVPROC glProgramParameters4dvNV;
extern PFNGLPROGRAMPARAMETERS4FVNVPROC glProgramParameters4fvNV;
extern PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC glProgramPathFragmentInputGenNV;
extern PFNGLPROGRAMSTRINGARBPROC glProgramStringARB;
extern PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC glProgramSubroutineParametersuivNV;
extern PFNGLPROGRAMUNIFORM1DPROC glProgramUniform1d;
extern PFNGLPROGRAMUNIFORM1DEXTPROC glProgramUniform1dEXT;
extern PFNGLPROGRAMUNIFORM1DVPROC glProgramUniform1dv;
extern PFNGLPROGRAMUNIFORM1DVEXTPROC glProgramUniform1dvEXT;
extern PFNGLPROGRAMUNIFORM1FPROC glProgramUniform1f;
extern PFNGLPROGRAMUNIFORM1FEXTPROC glProgramUniform1fEXT;
extern PFNGLPROGRAMUNIFORM1FVPROC glProgramUniform1fv;
extern PFNGLPROGRAMUNIFORM1FVEXTPROC glProgramUniform1fvEXT;
extern PFNGLPROGRAMUNIFORM1IPROC glProgramUniform1i;
extern PFNGLPROGRAMUNIFORM1I64ARBPROC glProgramUniform1i64ARB;
extern PFNGLPROGRAMUNIFORM1I64NVPROC glProgramUniform1i64NV;
extern PFNGLPROGRAMUNIFORM1I64VARBPROC glProgramUniform1i64vARB;
extern PFNGLPROGRAMUNIFORM1I64VNVPROC glProgramUniform1i64vNV;
extern PFNGLPROGRAMUNIFORM1IEXTPROC glProgramUniform1iEXT;
extern PFNGLPROGRAMUNIFORM1IVPROC glProgramUniform1iv;
extern PFNGLPROGRAMUNIFORM1IVEXTPROC glProgramUniform1ivEXT;
extern PFNGLPROGRAMUNIFORM1UIPROC glProgramUniform1ui;
extern PFNGLPROGRAMUNIFORM1UI64ARBPROC glProgramUniform1ui64ARB;
extern PFNGLPROGRAMUNIFORM1UI64NVPROC glProgramUniform1ui64NV;
extern PFNGLPROGRAMUNIFORM1UI64VARBPROC glProgramUniform1ui64vARB;
extern PFNGLPROGRAMUNIFORM1UI64VNVPROC glProgramUniform1ui64vNV;
extern PFNGLPROGRAMUNIFORM1UIEXTPROC glProgramUniform1uiEXT;
extern PFNGLPROGRAMUNIFORM1UIVPROC glProgramUniform1uiv;
extern PFNGLPROGRAMUNIFORM1UIVEXTPROC glProgramUniform1uivEXT;
extern PFNGLPROGRAMUNIFORM2DPROC glProgramUniform2d;
extern PFNGLPROGRAMUNIFORM2DEXTPROC glProgramUniform2dEXT;
extern PFNGLPROGRAMUNIFORM2DVPROC glProgramUniform2dv;
extern PFNGLPROGRAMUNIFORM2DVEXTPROC glProgramUniform2dvEXT;
extern PFNGLPROGRAMUNIFORM2FPROC glProgramUniform2f;
extern PFNGLPROGRAMUNIFORM2FEXTPROC glProgramUniform2fEXT;
extern PFNGLPROGRAMUNIFORM2FVPROC glProgramUniform2fv;
extern PFNGLPROGRAMUNIFORM2FVEXTPROC glProgramUniform2fvEXT;
extern PFNGLPROGRAMUNIFORM2IPROC glProgramUniform2i;
extern PFNGLPROGRAMUNIFORM2I64ARBPROC glProgramUniform2i64ARB;
extern PFNGLPROGRAMUNIFORM2I64NVPROC glProgramUniform2i64NV;
extern PFNGLPROGRAMUNIFORM2I64VARBPROC glProgramUniform2i64vARB;
extern PFNGLPROGRAMUNIFORM2I64VNVPROC glProgramUniform2i64vNV;
extern PFNGLPROGRAMUNIFORM2IEXTPROC glProgramUniform2iEXT;
extern PFNGLPROGRAMUNIFORM2IVPROC glProgramUniform2iv;
extern PFNGLPROGRAMUNIFORM2IVEXTPROC glProgramUniform2ivEXT;
extern PFNGLPROGRAMUNIFORM2UIPROC glProgramUniform2ui;
extern PFNGLPROGRAMUNIFORM2UI64ARBPROC glProgramUniform2ui64ARB;
extern PFNGLPROGRAMUNIFORM2UI64NVPROC glProgramUniform2ui64NV;
extern PFNGLPROGRAMUNIFORM2UI64VARBPROC glProgramUniform2ui64vARB;
extern PFNGLPROGRAMUNIFORM2UI64VNVPROC glProgramUniform2ui64vNV;
extern PFNGLPROGRAMUNIFORM2UIEXTPROC glProgramUniform2uiEXT;
extern PFNGLPROGRAMUNIFORM2UIVPROC glProgramUniform2uiv;
extern PFNGLPROGRAMUNIFORM2UIVEXTPROC glProgramUniform2uivEXT;
extern PFNGLPROGRAMUNIFORM3DPROC glProgramUniform3d;
extern PFNGLPROGRAMUNIFORM3DEXTPROC glProgramUniform3dEXT;
extern PFNGLPROGRAMUNIFORM3DVPROC glProgramUniform3dv;
extern PFNGLPROGRAMUNIFORM3DVEXTPROC glProgramUniform3dvEXT;
extern PFNGLPROGRAMUNIFORM3FPROC glProgramUniform3f;
extern PFNGLPROGRAMUNIFORM3FEXTPROC glProgramUniform3fEXT;
extern PFNGLPROGRAMUNIFORM3FVPROC glProgramUniform3fv;
extern PFNGLPROGRAMUNIFORM3FVEXTPROC glProgramUniform3fvEXT;
extern PFNGLPROGRAMUNIFORM3IPROC glProgramUniform3i;
extern PFNGLPROGRAMUNIFORM3I64ARBPROC glProgramUniform3i64ARB;
extern PFNGLPROGRAMUNIFORM3I64NVPROC glProgramUniform3i64NV;
extern PFNGLPROGRAMUNIFORM3I64VARBPROC glProgramUniform3i64vARB;
extern PFNGLPROGRAMUNIFORM3I64VNVPROC glProgramUniform3i64vNV;
extern PFNGLPROGRAMUNIFORM3IEXTPROC glProgramUniform3iEXT;
extern PFNGLPROGRAMUNIFORM3IVPROC glProgramUniform3iv;
extern PFNGLPROGRAMUNIFORM3IVEXTPROC glProgramUniform3ivEXT;
extern PFNGLPROGRAMUNIFORM3UIPROC glProgramUniform3ui;
extern PFNGLPROGRAMUNIFORM3UI64ARBPROC glProgramUniform3ui64ARB;
extern PFNGLPROGRAMUNIFORM3UI64NVPROC glProgramUniform3ui64NV;
extern PFNGLPROGRAMUNIFORM3UI64VARBPROC glProgramUniform3ui64vARB;
extern PFNGLPROGRAMUNIFORM3UI64VNVPROC glProgramUniform3ui64vNV;
extern PFNGLPROGRAMUNIFORM3UIEXTPROC glProgramUniform3uiEXT;
extern PFNGLPROGRAMUNIFORM3UIVPROC glProgramUniform3uiv;
extern PFNGLPROGRAMUNIFORM3UIVEXTPROC glProgramUniform3uivEXT;
extern PFNGLPROGRAMUNIFORM4DPROC glProgramUniform4d;
extern PFNGLPROGRAMUNIFORM4DEXTPROC glProgramUniform4dEXT;
extern PFNGLPROGRAMUNIFORM4DVPROC glProgramUniform4dv;
extern PFNGLPROGRAMUNIFORM4DVEXTPROC glProgramUniform4dvEXT;
extern PFNGLPROGRAMUNIFORM4FPROC glProgramUniform4f;
extern PFNGLPROGRAMUNIFORM4FEXTPROC glProgramUniform4fEXT;
extern PFNGLPROGRAMUNIFORM4FVPROC glProgramUniform4fv;
extern PFNGLPROGRAMUNIFORM4FVEXTPROC glProgramUniform4fvEXT;
extern PFNGLPROGRAMUNIFORM4IPROC glProgramUniform4i;
extern PFNGLPROGRAMUNIFORM4I64ARBPROC glProgramUniform4i64ARB;
extern PFNGLPROGRAMUNIFORM4I64NVPROC glProgramUniform4i64NV;
extern PFNGLPROGRAMUNIFORM4I64VARBPROC glProgramUniform4i64vARB;
extern PFNGLPROGRAMUNIFORM4I64VNVPROC glProgramUniform4i64vNV;
extern PFNGLPROGRAMUNIFORM4IEXTPROC glProgramUniform4iEXT;
extern PFNGLPROGRAMUNIFORM4IVPROC glProgramUniform4iv;
extern PFNGLPROGRAMUNIFORM4IVEXTPROC glProgramUniform4ivEXT;
extern PFNGLPROGRAMUNIFORM4UIPROC glProgramUniform4ui;
extern PFNGLPROGRAMUNIFORM4UI64ARBPROC glProgramUniform4ui64ARB;
extern PFNGLPROGRAMUNIFORM4UI64NVPROC glProgramUniform4ui64NV;
extern PFNGLPROGRAMUNIFORM4UI64VARBPROC glProgramUniform4ui64vARB;
extern PFNGLPROGRAMUNIFORM4UI64VNVPROC glProgramUniform4ui64vNV;
extern PFNGLPROGRAMUNIFORM4UIEXTPROC glProgramUniform4uiEXT;
extern PFNGLPROGRAMUNIFORM4UIVPROC glProgramUniform4uiv;
extern PFNGLPROGRAMUNIFORM4UIVEXTPROC glProgramUniform4uivEXT;
extern PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC glProgramUniformHandleui64ARB;
extern PFNGLPROGRAMUNIFORMHANDLEUI64IMGPROC glProgramUniformHandleui64IMG;
extern PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC glProgramUniformHandleui64NV;
extern PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC glProgramUniformHandleui64vARB;
extern PFNGLPROGRAMUNIFORMHANDLEUI64VIMGPROC glProgramUniformHandleui64vIMG;
extern PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC glProgramUniformHandleui64vNV;
extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC glProgramUniformMatrix2dv;
extern PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC glProgramUniformMatrix2dvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC glProgramUniformMatrix2fv;
extern PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC glProgramUniformMatrix2fvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC glProgramUniformMatrix2x3dv;
extern PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC glProgramUniformMatrix2x3dvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC glProgramUniformMatrix2x3fv;
extern PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC glProgramUniformMatrix2x3fvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC glProgramUniformMatrix2x4dv;
extern PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC glProgramUniformMatrix2x4dvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC glProgramUniformMatrix2x4fv;
extern PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC glProgramUniformMatrix2x4fvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC glProgramUniformMatrix3dv;
extern PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC glProgramUniformMatrix3dvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC glProgramUniformMatrix3fv;
extern PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC glProgramUniformMatrix3fvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC glProgramUniformMatrix3x2dv;
extern PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC glProgramUniformMatrix3x2dvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC glProgramUniformMatrix3x2fv;
extern PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC glProgramUniformMatrix3x2fvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC glProgramUniformMatrix3x4dv;
extern PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC glProgramUniformMatrix3x4dvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC glProgramUniformMatrix3x4fv;
extern PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC glProgramUniformMatrix3x4fvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC glProgramUniformMatrix4dv;
extern PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC glProgramUniformMatrix4dvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC glProgramUniformMatrix4fv;
extern PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC glProgramUniformMatrix4fvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC glProgramUniformMatrix4x2dv;
extern PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC glProgramUniformMatrix4x2dvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC glProgramUniformMatrix4x2fv;
extern PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC glProgramUniformMatrix4x2fvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC glProgramUniformMatrix4x3dv;
extern PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC glProgramUniformMatrix4x3dvEXT;
extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC glProgramUniformMatrix4x3fv;
extern PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC glProgramUniformMatrix4x3fvEXT;
extern PFNGLPROGRAMUNIFORMUI64NVPROC glProgramUniformui64NV;
extern PFNGLPROGRAMUNIFORMUI64VNVPROC glProgramUniformui64vNV;
extern PFNGLPROGRAMVERTEXLIMITNVPROC glProgramVertexLimitNV;
extern PFNGLPROVOKINGVERTEXPROC glProvokingVertex;
extern PFNGLPROVOKINGVERTEXEXTPROC glProvokingVertexEXT;
extern PFNGLPUSHATTRIBPROC glPushAttrib;
extern PFNGLPUSHCLIENTATTRIBPROC glPushClientAttrib;
extern PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC glPushClientAttribDefaultEXT;
extern PFNGLPUSHDEBUGGROUPPROC glPushDebugGroup;
extern PFNGLPUSHDEBUGGROUPKHRPROC glPushDebugGroupKHR;
extern PFNGLPUSHGROUPMARKEREXTPROC glPushGroupMarkerEXT;
extern PFNGLPUSHMATRIXPROC glPushMatrix;
extern PFNGLPUSHNAMEPROC glPushName;
extern PFNGLQUERYCOUNTERPROC glQueryCounter;
extern PFNGLQUERYCOUNTEREXTPROC glQueryCounterEXT;
extern PFNGLQUERYMATRIXXOESPROC glQueryMatrixxOES;
extern PFNGLQUERYOBJECTPARAMETERUIAMDPROC glQueryObjectParameteruiAMD;
extern PFNGLQUERYRESOURCENVPROC glQueryResourceNV;
extern PFNGLQUERYRESOURCETAGNVPROC glQueryResourceTagNV;
extern PFNGLRASTERPOS2DPROC glRasterPos2d;
extern PFNGLRASTERPOS2DVPROC glRasterPos2dv;
extern PFNGLRASTERPOS2FPROC glRasterPos2f;
extern PFNGLRASTERPOS2FVPROC glRasterPos2fv;
extern PFNGLRASTERPOS2IPROC glRasterPos2i;
extern PFNGLRASTERPOS2IVPROC glRasterPos2iv;
extern PFNGLRASTERPOS2SPROC glRasterPos2s;
extern PFNGLRASTERPOS2SVPROC glRasterPos2sv;
extern PFNGLRASTERPOS2XOESPROC glRasterPos2xOES;
extern PFNGLRASTERPOS2XVOESPROC glRasterPos2xvOES;
extern PFNGLRASTERPOS3DPROC glRasterPos3d;
extern PFNGLRASTERPOS3DVPROC glRasterPos3dv;
extern PFNGLRASTERPOS3FPROC glRasterPos3f;
extern PFNGLRASTERPOS3FVPROC glRasterPos3fv;
extern PFNGLRASTERPOS3IPROC glRasterPos3i;
extern PFNGLRASTERPOS3IVPROC glRasterPos3iv;
extern PFNGLRASTERPOS3SPROC glRasterPos3s;
extern PFNGLRASTERPOS3SVPROC glRasterPos3sv;
extern PFNGLRASTERPOS3XOESPROC glRasterPos3xOES;
extern PFNGLRASTERPOS3XVOESPROC glRasterPos3xvOES;
extern PFNGLRASTERPOS4DPROC glRasterPos4d;
extern PFNGLRASTERPOS4DVPROC glRasterPos4dv;
extern PFNGLRASTERPOS4FPROC glRasterPos4f;
extern PFNGLRASTERPOS4FVPROC glRasterPos4fv;
extern PFNGLRASTERPOS4IPROC glRasterPos4i;
extern PFNGLRASTERPOS4IVPROC glRasterPos4iv;
extern PFNGLRASTERPOS4SPROC glRasterPos4s;
extern PFNGLRASTERPOS4SVPROC glRasterPos4sv;
extern PFNGLRASTERPOS4XOESPROC glRasterPos4xOES;
extern PFNGLRASTERPOS4XVOESPROC glRasterPos4xvOES;
extern PFNGLRASTERSAMPLESEXTPROC glRasterSamplesEXT;
extern PFNGLREADBUFFERPROC glReadBuffer;
extern PFNGLREADBUFFERINDEXEDEXTPROC glReadBufferIndexedEXT;
extern PFNGLREADBUFFERNVPROC glReadBufferNV;
extern PFNGLREADINSTRUMENTSSGIXPROC glReadInstrumentsSGIX;
extern PFNGLREADPIXELSPROC glReadPixels;
extern PFNGLREADNPIXELSPROC glReadnPixels;
extern PFNGLREADNPIXELSARBPROC glReadnPixelsARB;
extern PFNGLREADNPIXELSEXTPROC glReadnPixelsEXT;
extern PFNGLREADNPIXELSKHRPROC glReadnPixelsKHR;
extern PFNGLRELEASEKEYEDMUTEXWIN32EXTPROC glReleaseKeyedMutexWin32EXT;
extern PFNGLRECTDPROC glRectd;
extern PFNGLRECTDVPROC glRectdv;
extern PFNGLRECTFPROC glRectf;
extern PFNGLRECTFVPROC glRectfv;
extern PFNGLRECTIPROC glRecti;
extern PFNGLRECTIVPROC glRectiv;
extern PFNGLRECTSPROC glRects;
extern PFNGLRECTSVPROC glRectsv;
extern PFNGLRECTXOESPROC glRectxOES;
extern PFNGLRECTXVOESPROC glRectxvOES;
extern PFNGLREFERENCEPLANESGIXPROC glReferencePlaneSGIX;
extern PFNGLRELEASESHADERCOMPILERPROC glReleaseShaderCompiler;
extern PFNGLRENDERGPUMASKNVPROC glRenderGpuMaskNV;
extern PFNGLRENDERMODEPROC glRenderMode;
extern PFNGLRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
extern PFNGLRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC glRenderbufferStorageMultisample;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC glRenderbufferStorageMultisampleANGLE;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC glRenderbufferStorageMultisampleAPPLE;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEADVANCEDAMDPROC glRenderbufferStorageMultisampleAdvancedAMD;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC glRenderbufferStorageMultisampleCoverageNV;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC glRenderbufferStorageMultisampleEXT;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC glRenderbufferStorageMultisampleIMG;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLENVPROC glRenderbufferStorageMultisampleNV;
extern PFNGLRENDERBUFFERSTORAGEOESPROC glRenderbufferStorageOES;
extern PFNGLREPLACEMENTCODEPOINTERSUNPROC glReplacementCodePointerSUN;
extern PFNGLREPLACEMENTCODEUBSUNPROC glReplacementCodeubSUN;
extern PFNGLREPLACEMENTCODEUBVSUNPROC glReplacementCodeubvSUN;
extern PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC glReplacementCodeuiColor3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC glReplacementCodeuiColor3fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiColor4fNormal3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC glReplacementCodeuiColor4ubVertex3fSUN;
extern PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC glReplacementCodeuiColor4ubVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC glReplacementCodeuiNormal3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiNormal3fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUISUNPROC glReplacementCodeuiSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC glReplacementCodeuiTexCoord2fVertex3fSUN;
extern PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC glReplacementCodeuiTexCoord2fVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC glReplacementCodeuiVertex3fSUN;
extern PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC glReplacementCodeuiVertex3fvSUN;
extern PFNGLREPLACEMENTCODEUIVSUNPROC glReplacementCodeuivSUN;
extern PFNGLREPLACEMENTCODEUSSUNPROC glReplacementCodeusSUN;
extern PFNGLREPLACEMENTCODEUSVSUNPROC glReplacementCodeusvSUN;
extern PFNGLREQUESTRESIDENTPROGRAMSNVPROC glRequestResidentProgramsNV;
extern PFNGLRESETHISTOGRAMPROC glResetHistogram;
extern PFNGLRESETHISTOGRAMEXTPROC glResetHistogramEXT;
extern PFNGLRESETMEMORYOBJECTPARAMETERNVPROC glResetMemoryObjectParameterNV;
extern PFNGLRESETMINMAXPROC glResetMinmax;
extern PFNGLRESETMINMAXEXTPROC glResetMinmaxEXT;
extern PFNGLRESIZEBUFFERSMESAPROC glResizeBuffersMESA;
extern PFNGLRESOLVEDEPTHVALUESNVPROC glResolveDepthValuesNV;
extern PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC glResolveMultisampleFramebufferAPPLE;
extern PFNGLRESUMETRANSFORMFEEDBACKPROC glResumeTransformFeedback;
extern PFNGLRESUMETRANSFORMFEEDBACKNVPROC glResumeTransformFeedbackNV;
extern PFNGLROTATEDPROC glRotated;
extern PFNGLROTATEFPROC glRotatef;
extern PFNGLROTATEXPROC glRotatex;
extern PFNGLROTATEXOESPROC glRotatexOES;
extern PFNGLSAMPLECOVERAGEPROC glSampleCoverage;
extern PFNGLSAMPLECOVERAGEARBPROC glSampleCoverageARB;
extern PFNGLSAMPLECOVERAGEXPROC glSampleCoveragex;
extern PFNGLSAMPLECOVERAGEXOESPROC glSampleCoveragexOES;
extern PFNGLSAMPLEMAPATIPROC glSampleMapATI;
extern PFNGLSAMPLEMASKEXTPROC glSampleMaskEXT;
extern PFNGLSAMPLEMASKINDEXEDNVPROC glSampleMaskIndexedNV;
extern PFNGLSAMPLEMASKSGISPROC glSampleMaskSGIS;
extern PFNGLSAMPLEMASKIPROC glSampleMaski;
extern PFNGLSAMPLEPATTERNEXTPROC glSamplePatternEXT;
extern PFNGLSAMPLEPATTERNSGISPROC glSamplePatternSGIS;
extern PFNGLSAMPLERPARAMETERIIVPROC glSamplerParameterIiv;
extern PFNGLSAMPLERPARAMETERIIVEXTPROC glSamplerParameterIivEXT;
extern PFNGLSAMPLERPARAMETERIIVOESPROC glSamplerParameterIivOES;
extern PFNGLSAMPLERPARAMETERIUIVPROC glSamplerParameterIuiv;
extern PFNGLSAMPLERPARAMETERIUIVEXTPROC glSamplerParameterIuivEXT;
extern PFNGLSAMPLERPARAMETERIUIVOESPROC glSamplerParameterIuivOES;
extern PFNGLSAMPLERPARAMETERFPROC glSamplerParameterf;
extern PFNGLSAMPLERPARAMETERFVPROC glSamplerParameterfv;
extern PFNGLSAMPLERPARAMETERIPROC glSamplerParameteri;
extern PFNGLSAMPLERPARAMETERIVPROC glSamplerParameteriv;
extern PFNGLSCALEDPROC glScaled;
extern PFNGLSCALEFPROC glScalef;
extern PFNGLSCALEXPROC glScalex;
extern PFNGLSCALEXOESPROC glScalexOES;
extern PFNGLSCISSORPROC glScissor;
extern PFNGLSCISSORARRAYVPROC glScissorArrayv;
extern PFNGLSCISSORARRAYVNVPROC glScissorArrayvNV;
extern PFNGLSCISSORARRAYVOESPROC glScissorArrayvOES;
extern PFNGLSCISSOREXCLUSIVEARRAYVNVPROC glScissorExclusiveArrayvNV;
extern PFNGLSCISSOREXCLUSIVENVPROC glScissorExclusiveNV;
extern PFNGLSCISSORINDEXEDPROC glScissorIndexed;
extern PFNGLSCISSORINDEXEDNVPROC glScissorIndexedNV;
extern PFNGLSCISSORINDEXEDOESPROC glScissorIndexedOES;
extern PFNGLSCISSORINDEXEDVPROC glScissorIndexedv;
extern PFNGLSCISSORINDEXEDVNVPROC glScissorIndexedvNV;
extern PFNGLSCISSORINDEXEDVOESPROC glScissorIndexedvOES;
extern PFNGLSECONDARYCOLOR3BPROC glSecondaryColor3b;
extern PFNGLSECONDARYCOLOR3BEXTPROC glSecondaryColor3bEXT;
extern PFNGLSECONDARYCOLOR3BVPROC glSecondaryColor3bv;
extern PFNGLSECONDARYCOLOR3BVEXTPROC glSecondaryColor3bvEXT;
extern PFNGLSECONDARYCOLOR3DPROC glSecondaryColor3d;
extern PFNGLSECONDARYCOLOR3DEXTPROC glSecondaryColor3dEXT;
extern PFNGLSECONDARYCOLOR3DVPROC glSecondaryColor3dv;
extern PFNGLSECONDARYCOLOR3DVEXTPROC glSecondaryColor3dvEXT;
extern PFNGLSECONDARYCOLOR3FPROC glSecondaryColor3f;
extern PFNGLSECONDARYCOLOR3FEXTPROC glSecondaryColor3fEXT;
extern PFNGLSECONDARYCOLOR3FVPROC glSecondaryColor3fv;
extern PFNGLSECONDARYCOLOR3FVEXTPROC glSecondaryColor3fvEXT;
extern PFNGLSECONDARYCOLOR3HNVPROC glSecondaryColor3hNV;
extern PFNGLSECONDARYCOLOR3HVNVPROC glSecondaryColor3hvNV;
extern PFNGLSECONDARYCOLOR3IPROC glSecondaryColor3i;
extern PFNGLSECONDARYCOLOR3IEXTPROC glSecondaryColor3iEXT;
extern PFNGLSECONDARYCOLOR3IVPROC glSecondaryColor3iv;
extern PFNGLSECONDARYCOLOR3IVEXTPROC glSecondaryColor3ivEXT;
extern PFNGLSECONDARYCOLOR3SPROC glSecondaryColor3s;
extern PFNGLSECONDARYCOLOR3SEXTPROC glSecondaryColor3sEXT;
extern PFNGLSECONDARYCOLOR3SVPROC glSecondaryColor3sv;
extern PFNGLSECONDARYCOLOR3SVEXTPROC glSecondaryColor3svEXT;
extern PFNGLSECONDARYCOLOR3UBPROC glSecondaryColor3ub;
extern PFNGLSECONDARYCOLOR3UBEXTPROC glSecondaryColor3ubEXT;
extern PFNGLSECONDARYCOLOR3UBVPROC glSecondaryColor3ubv;
extern PFNGLSECONDARYCOLOR3UBVEXTPROC glSecondaryColor3ubvEXT;
extern PFNGLSECONDARYCOLOR3UIPROC glSecondaryColor3ui;
extern PFNGLSECONDARYCOLOR3UIEXTPROC glSecondaryColor3uiEXT;
extern PFNGLSECONDARYCOLOR3UIVPROC glSecondaryColor3uiv;
extern PFNGLSECONDARYCOLOR3UIVEXTPROC glSecondaryColor3uivEXT;
extern PFNGLSECONDARYCOLOR3USPROC glSecondaryColor3us;
extern PFNGLSECONDARYCOLOR3USEXTPROC glSecondaryColor3usEXT;
extern PFNGLSECONDARYCOLOR3USVPROC glSecondaryColor3usv;
extern PFNGLSECONDARYCOLOR3USVEXTPROC glSecondaryColor3usvEXT;
extern PFNGLSECONDARYCOLORFORMATNVPROC glSecondaryColorFormatNV;
extern PFNGLSECONDARYCOLORP3UIPROC glSecondaryColorP3ui;
extern PFNGLSECONDARYCOLORP3UIVPROC glSecondaryColorP3uiv;
extern PFNGLSECONDARYCOLORPOINTERPROC glSecondaryColorPointer;
extern PFNGLSECONDARYCOLORPOINTEREXTPROC glSecondaryColorPointerEXT;
extern PFNGLSECONDARYCOLORPOINTERLISTIBMPROC glSecondaryColorPointerListIBM;
extern PFNGLSELECTBUFFERPROC glSelectBuffer;
extern PFNGLSELECTPERFMONITORCOUNTERSAMDPROC glSelectPerfMonitorCountersAMD;
extern PFNGLSEMAPHOREPARAMETERIVNVPROC glSemaphoreParameterivNV;
extern PFNGLSEMAPHOREPARAMETERUI64VEXTPROC glSemaphoreParameterui64vEXT;
extern PFNGLSEPARABLEFILTER2DPROC glSeparableFilter2D;
extern PFNGLSEPARABLEFILTER2DEXTPROC glSeparableFilter2DEXT;
extern PFNGLSETFENCEAPPLEPROC glSetFenceAPPLE;
extern PFNGLSETFENCENVPROC glSetFenceNV;
extern PFNGLSETFRAGMENTSHADERCONSTANTATIPROC glSetFragmentShaderConstantATI;
extern PFNGLSETINVARIANTEXTPROC glSetInvariantEXT;
extern PFNGLSETLOCALCONSTANTEXTPROC glSetLocalConstantEXT;
extern PFNGLSETMULTISAMPLEFVAMDPROC glSetMultisamplefvAMD;
extern PFNGLSHADEMODELPROC glShadeModel;
extern PFNGLSHADERBINARYPROC glShaderBinary;
extern PFNGLSHADEROP1EXTPROC glShaderOp1EXT;
extern PFNGLSHADEROP2EXTPROC glShaderOp2EXT;
extern PFNGLSHADEROP3EXTPROC glShaderOp3EXT;
extern PFNGLSHADERSOURCEPROC glShaderSource;
extern PFNGLSHADERSOURCEARBPROC glShaderSourceARB;
extern PFNGLSHADERSTORAGEBLOCKBINDINGPROC glShaderStorageBlockBinding;
extern PFNGLSHADINGRATEEXTPROC glShadingRateEXT;
extern PFNGLSHADINGRATECOMBINEROPSEXTPROC glShadingRateCombinerOpsEXT;
extern PFNGLSHADINGRATEIMAGEBARRIERNVPROC glShadingRateImageBarrierNV;
extern PFNGLSHADINGRATEQCOMPROC glShadingRateQCOM;
extern PFNGLSHADINGRATEIMAGEPALETTENVPROC glShadingRateImagePaletteNV;
extern PFNGLSHADINGRATESAMPLEORDERNVPROC glShadingRateSampleOrderNV;
extern PFNGLSHADINGRATESAMPLEORDERCUSTOMNVPROC glShadingRateSampleOrderCustomNV;
extern PFNGLSHARPENTEXFUNCSGISPROC glSharpenTexFuncSGIS;
extern PFNGLSIGNALSEMAPHOREEXTPROC glSignalSemaphoreEXT;
extern PFNGLSIGNALSEMAPHOREUI64NVXPROC glSignalSemaphoreui64NVX;
extern PFNGLSPECIALIZESHADERPROC glSpecializeShader;
extern PFNGLSPECIALIZESHADERARBPROC glSpecializeShaderARB;
extern PFNGLSPRITEPARAMETERFSGIXPROC glSpriteParameterfSGIX;
extern PFNGLSPRITEPARAMETERFVSGIXPROC glSpriteParameterfvSGIX;
extern PFNGLSPRITEPARAMETERISGIXPROC glSpriteParameteriSGIX;
extern PFNGLSPRITEPARAMETERIVSGIXPROC glSpriteParameterivSGIX;
extern PFNGLSTARTINSTRUMENTSSGIXPROC glStartInstrumentsSGIX;
extern PFNGLSTARTTILINGQCOMPROC glStartTilingQCOM;
extern PFNGLSTATECAPTURENVPROC glStateCaptureNV;
extern PFNGLSTENCILCLEARTAGEXTPROC glStencilClearTagEXT;
extern PFNGLSTENCILFILLPATHINSTANCEDNVPROC glStencilFillPathInstancedNV;
extern PFNGLSTENCILFILLPATHNVPROC glStencilFillPathNV;
extern PFNGLSTENCILFUNCPROC glStencilFunc;
extern PFNGLSTENCILFUNCSEPARATEPROC glStencilFuncSeparate;
extern PFNGLSTENCILFUNCSEPARATEATIPROC glStencilFuncSeparateATI;
extern PFNGLSTENCILMASKPROC glStencilMask;
extern PFNGLSTENCILMASKSEPARATEPROC glStencilMaskSeparate;
extern PFNGLSTENCILOPPROC glStencilOp;
extern PFNGLSTENCILOPSEPARATEPROC glStencilOpSeparate;
extern PFNGLSTENCILOPSEPARATEATIPROC glStencilOpSeparateATI;
extern PFNGLSTENCILOPVALUEAMDPROC glStencilOpValueAMD;
extern PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC glStencilStrokePathInstancedNV;
extern PFNGLSTENCILSTROKEPATHNVPROC glStencilStrokePathNV;
extern PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC glStencilThenCoverFillPathInstancedNV;
extern PFNGLSTENCILTHENCOVERFILLPATHNVPROC glStencilThenCoverFillPathNV;
extern PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC glStencilThenCoverStrokePathInstancedNV;
extern PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC glStencilThenCoverStrokePathNV;
extern PFNGLSTOPINSTRUMENTSSGIXPROC glStopInstrumentsSGIX;
extern PFNGLSTRINGMARKERGREMEDYPROC glStringMarkerGREMEDY;
extern PFNGLSUBPIXELPRECISIONBIASNVPROC glSubpixelPrecisionBiasNV;
extern PFNGLSWIZZLEEXTPROC glSwizzleEXT;
extern PFNGLSYNCTEXTUREINTELPROC glSyncTextureINTEL;
extern PFNGLTAGSAMPLEBUFFERSGIXPROC glTagSampleBufferSGIX;
extern PFNGLTANGENT3BEXTPROC glTangent3bEXT;
extern PFNGLTANGENT3BVEXTPROC glTangent3bvEXT;
extern PFNGLTANGENT3DEXTPROC glTangent3dEXT;
extern PFNGLTANGENT3DVEXTPROC glTangent3dvEXT;
extern PFNGLTANGENT3FEXTPROC glTangent3fEXT;
extern PFNGLTANGENT3FVEXTPROC glTangent3fvEXT;
extern PFNGLTANGENT3IEXTPROC glTangent3iEXT;
extern PFNGLTANGENT3IVEXTPROC glTangent3ivEXT;
extern PFNGLTANGENT3SEXTPROC glTangent3sEXT;
extern PFNGLTANGENT3SVEXTPROC glTangent3svEXT;
extern PFNGLTANGENTPOINTEREXTPROC glTangentPointerEXT;
extern PFNGLTBUFFERMASK3DFXPROC glTbufferMask3DFX;
extern PFNGLTESSELLATIONFACTORAMDPROC glTessellationFactorAMD;
extern PFNGLTESSELLATIONMODEAMDPROC glTessellationModeAMD;
extern PFNGLTESTFENCEAPPLEPROC glTestFenceAPPLE;
extern PFNGLTESTFENCENVPROC glTestFenceNV;
extern PFNGLTESTOBJECTAPPLEPROC glTestObjectAPPLE;
extern PFNGLTEXATTACHMEMORYNVPROC glTexAttachMemoryNV;
extern PFNGLTEXBUFFERPROC glTexBuffer;
extern PFNGLTEXBUFFERARBPROC glTexBufferARB;
extern PFNGLTEXBUFFEREXTPROC glTexBufferEXT;
extern PFNGLTEXBUFFEROESPROC glTexBufferOES;
extern PFNGLTEXBUFFERRANGEPROC glTexBufferRange;
extern PFNGLTEXBUFFERRANGEEXTPROC glTexBufferRangeEXT;
extern PFNGLTEXBUFFERRANGEOESPROC glTexBufferRangeOES;
extern PFNGLTEXBUMPPARAMETERFVATIPROC glTexBumpParameterfvATI;
extern PFNGLTEXBUMPPARAMETERIVATIPROC glTexBumpParameterivATI;
extern PFNGLTEXCOORD1BOESPROC glTexCoord1bOES;
extern PFNGLTEXCOORD1BVOESPROC glTexCoord1bvOES;
extern PFNGLTEXCOORD1DPROC glTexCoord1d;
extern PFNGLTEXCOORD1DVPROC glTexCoord1dv;
extern PFNGLTEXCOORD1FPROC glTexCoord1f;
extern PFNGLTEXCOORD1FVPROC glTexCoord1fv;
extern PFNGLTEXCOORD1HNVPROC glTexCoord1hNV;
extern PFNGLTEXCOORD1HVNVPROC glTexCoord1hvNV;
extern PFNGLTEXCOORD1IPROC glTexCoord1i;
extern PFNGLTEXCOORD1IVPROC glTexCoord1iv;
extern PFNGLTEXCOORD1SPROC glTexCoord1s;
extern PFNGLTEXCOORD1SVPROC glTexCoord1sv;
extern PFNGLTEXCOORD1XOESPROC glTexCoord1xOES;
extern PFNGLTEXCOORD1XVOESPROC glTexCoord1xvOES;
extern PFNGLTEXCOORD2BOESPROC glTexCoord2bOES;
extern PFNGLTEXCOORD2BVOESPROC glTexCoord2bvOES;
extern PFNGLTEXCOORD2DPROC glTexCoord2d;
extern PFNGLTEXCOORD2DVPROC glTexCoord2dv;
extern PFNGLTEXCOORD2FPROC glTexCoord2f;
extern PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC glTexCoord2fColor3fVertex3fSUN;
extern PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC glTexCoord2fColor3fVertex3fvSUN;
extern PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC glTexCoord2fColor4fNormal3fVertex3fSUN;
extern PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC glTexCoord2fColor4fNormal3fVertex3fvSUN;
extern PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC glTexCoord2fColor4ubVertex3fSUN;
extern PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC glTexCoord2fColor4ubVertex3fvSUN;
extern PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC glTexCoord2fNormal3fVertex3fSUN;
extern PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC glTexCoord2fNormal3fVertex3fvSUN;
extern PFNGLTEXCOORD2FVERTEX3FSUNPROC glTexCoord2fVertex3fSUN;
extern PFNGLTEXCOORD2FVERTEX3FVSUNPROC glTexCoord2fVertex3fvSUN;
extern PFNGLTEXCOORD2FVPROC glTexCoord2fv;
extern PFNGLTEXCOORD2HNVPROC glTexCoord2hNV;
extern PFNGLTEXCOORD2HVNVPROC glTexCoord2hvNV;
extern PFNGLTEXCOORD2IPROC glTexCoord2i;
extern PFNGLTEXCOORD2IVPROC glTexCoord2iv;
extern PFNGLTEXCOORD2SPROC glTexCoord2s;
extern PFNGLTEXCOORD2SVPROC glTexCoord2sv;
extern PFNGLTEXCOORD2XOESPROC glTexCoord2xOES;
extern PFNGLTEXCOORD2XVOESPROC glTexCoord2xvOES;
extern PFNGLTEXCOORD3BOESPROC glTexCoord3bOES;
extern PFNGLTEXCOORD3BVOESPROC glTexCoord3bvOES;
extern PFNGLTEXCOORD3DPROC glTexCoord3d;
extern PFNGLTEXCOORD3DVPROC glTexCoord3dv;
extern PFNGLTEXCOORD3FPROC glTexCoord3f;
extern PFNGLTEXCOORD3FVPROC glTexCoord3fv;
extern PFNGLTEXCOORD3HNVPROC glTexCoord3hNV;
extern PFNGLTEXCOORD3HVNVPROC glTexCoord3hvNV;
extern PFNGLTEXCOORD3IPROC glTexCoord3i;
extern PFNGLTEXCOORD3IVPROC glTexCoord3iv;
extern PFNGLTEXCOORD3SPROC glTexCoord3s;
extern PFNGLTEXCOORD3SVPROC glTexCoord3sv;
extern PFNGLTEXCOORD3XOESPROC glTexCoord3xOES;
extern PFNGLTEXCOORD3XVOESPROC glTexCoord3xvOES;
extern PFNGLTEXCOORD4BOESPROC glTexCoord4bOES;
extern PFNGLTEXCOORD4BVOESPROC glTexCoord4bvOES;
extern PFNGLTEXCOORD4DPROC glTexCoord4d;
extern PFNGLTEXCOORD4DVPROC glTexCoord4dv;
extern PFNGLTEXCOORD4FPROC glTexCoord4f;
extern PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC glTexCoord4fColor4fNormal3fVertex4fSUN;
extern PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC glTexCoord4fColor4fNormal3fVertex4fvSUN;
extern PFNGLTEXCOORD4FVERTEX4FSUNPROC glTexCoord4fVertex4fSUN;
extern PFNGLTEXCOORD4FVERTEX4FVSUNPROC glTexCoord4fVertex4fvSUN;
extern PFNGLTEXCOORD4FVPROC glTexCoord4fv;
extern PFNGLTEXCOORD4HNVPROC glTexCoord4hNV;
extern PFNGLTEXCOORD4HVNVPROC glTexCoord4hvNV;
extern PFNGLTEXCOORD4IPROC glTexCoord4i;
extern PFNGLTEXCOORD4IVPROC glTexCoord4iv;
extern PFNGLTEXCOORD4SPROC glTexCoord4s;
extern PFNGLTEXCOORD4SVPROC glTexCoord4sv;
extern PFNGLTEXCOORD4XOESPROC glTexCoord4xOES;
extern PFNGLTEXCOORD4XVOESPROC glTexCoord4xvOES;
extern PFNGLTEXCOORDFORMATNVPROC glTexCoordFormatNV;
extern PFNGLTEXCOORDP1UIPROC glTexCoordP1ui;
extern PFNGLTEXCOORDP1UIVPROC glTexCoordP1uiv;
extern PFNGLTEXCOORDP2UIPROC glTexCoordP2ui;
extern PFNGLTEXCOORDP2UIVPROC glTexCoordP2uiv;
extern PFNGLTEXCOORDP3UIPROC glTexCoordP3ui;
extern PFNGLTEXCOORDP3UIVPROC glTexCoordP3uiv;
extern PFNGLTEXCOORDP4UIPROC glTexCoordP4ui;
extern PFNGLTEXCOORDP4UIVPROC glTexCoordP4uiv;
extern PFNGLTEXCOORDPOINTERPROC glTexCoordPointer;
extern PFNGLTEXCOORDPOINTEREXTPROC glTexCoordPointerEXT;
extern PFNGLTEXCOORDPOINTERLISTIBMPROC glTexCoordPointerListIBM;
extern PFNGLTEXCOORDPOINTERVINTELPROC glTexCoordPointervINTEL;
extern PFNGLTEXENVFPROC glTexEnvf;
extern PFNGLTEXENVFVPROC glTexEnvfv;
extern PFNGLTEXENVIPROC glTexEnvi;
extern PFNGLTEXENVIVPROC glTexEnviv;
extern PFNGLTEXENVXPROC glTexEnvx;
extern PFNGLTEXENVXOESPROC glTexEnvxOES;
extern PFNGLTEXENVXVPROC glTexEnvxv;
extern PFNGLTEXENVXVOESPROC glTexEnvxvOES;
extern PFNGLTEXESTIMATEMOTIONQCOMPROC glTexEstimateMotionQCOM;
extern PFNGLTEXESTIMATEMOTIONREGIONSQCOMPROC glTexEstimateMotionRegionsQCOM;
extern PFNGLEXTRAPOLATETEX2DQCOMPROC glExtrapolateTex2DQCOM;
extern PFNGLTEXFILTERFUNCSGISPROC glTexFilterFuncSGIS;
extern PFNGLTEXGENDPROC glTexGend;
extern PFNGLTEXGENDVPROC glTexGendv;
extern PFNGLTEXGENFPROC glTexGenf;
extern PFNGLTEXGENFOESPROC glTexGenfOES;
extern PFNGLTEXGENFVPROC glTexGenfv;
extern PFNGLTEXGENFVOESPROC glTexGenfvOES;
extern PFNGLTEXGENIPROC glTexGeni;
extern PFNGLTEXGENIOESPROC glTexGeniOES;
extern PFNGLTEXGENIVPROC glTexGeniv;
extern PFNGLTEXGENIVOESPROC glTexGenivOES;
extern PFNGLTEXGENXOESPROC glTexGenxOES;
extern PFNGLTEXGENXVOESPROC glTexGenxvOES;
extern PFNGLTEXIMAGE1DPROC glTexImage1D;
extern PFNGLTEXIMAGE2DPROC glTexImage2D;
extern PFNGLTEXIMAGE2DMULTISAMPLEPROC glTexImage2DMultisample;
extern PFNGLTEXIMAGE2DMULTISAMPLECOVERAGENVPROC glTexImage2DMultisampleCoverageNV;
extern PFNGLTEXIMAGE3DPROC glTexImage3D;
extern PFNGLTEXIMAGE3DEXTPROC glTexImage3DEXT;
extern PFNGLTEXIMAGE3DMULTISAMPLEPROC glTexImage3DMultisample;
extern PFNGLTEXIMAGE3DMULTISAMPLECOVERAGENVPROC glTexImage3DMultisampleCoverageNV;
extern PFNGLTEXIMAGE3DOESPROC glTexImage3DOES;
extern PFNGLTEXIMAGE4DSGISPROC glTexImage4DSGIS;
extern PFNGLTEXPAGECOMMITMENTARBPROC glTexPageCommitmentARB;
extern PFNGLTEXPAGECOMMITMENTEXTPROC glTexPageCommitmentEXT;
extern PFNGLTEXPAGECOMMITMENTMEMNVPROC glTexPageCommitmentMemNV;
extern PFNGLTEXPARAMETERIIVPROC glTexParameterIiv;
extern PFNGLTEXPARAMETERIIVEXTPROC glTexParameterIivEXT;
extern PFNGLTEXPARAMETERIIVOESPROC glTexParameterIivOES;
extern PFNGLTEXPARAMETERIUIVPROC glTexParameterIuiv;
extern PFNGLTEXPARAMETERIUIVEXTPROC glTexParameterIuivEXT;
extern PFNGLTEXPARAMETERIUIVOESPROC glTexParameterIuivOES;
extern PFNGLTEXPARAMETERFPROC glTexParameterf;
extern PFNGLTEXPARAMETERFVPROC glTexParameterfv;
extern PFNGLTEXPARAMETERIPROC glTexParameteri;
extern PFNGLTEXPARAMETERIVPROC glTexParameteriv;
extern PFNGLTEXPARAMETERXPROC glTexParameterx;
extern PFNGLTEXPARAMETERXOESPROC glTexParameterxOES;
extern PFNGLTEXPARAMETERXVPROC glTexParameterxv;
extern PFNGLTEXPARAMETERXVOESPROC glTexParameterxvOES;
extern PFNGLTEXRENDERBUFFERNVPROC glTexRenderbufferNV;
extern PFNGLTEXSTORAGE1DPROC glTexStorage1D;
extern PFNGLTEXSTORAGE1DEXTPROC glTexStorage1DEXT;
extern PFNGLTEXSTORAGE2DPROC glTexStorage2D;
extern PFNGLTEXSTORAGE2DEXTPROC glTexStorage2DEXT;
extern PFNGLTEXSTORAGE2DMULTISAMPLEPROC glTexStorage2DMultisample;
extern PFNGLTEXSTORAGE3DPROC glTexStorage3D;
extern PFNGLTEXSTORAGE3DEXTPROC glTexStorage3DEXT;
extern PFNGLTEXSTORAGE3DMULTISAMPLEPROC glTexStorage3DMultisample;
extern PFNGLTEXSTORAGE3DMULTISAMPLEOESPROC glTexStorage3DMultisampleOES;
extern PFNGLTEXSTORAGEATTRIBS2DEXTPROC glTexStorageAttribs2DEXT;
extern PFNGLTEXSTORAGEATTRIBS3DEXTPROC glTexStorageAttribs3DEXT;
extern PFNGLTEXSTORAGEMEM1DEXTPROC glTexStorageMem1DEXT;
extern PFNGLTEXSTORAGEMEM2DEXTPROC glTexStorageMem2DEXT;
extern PFNGLTEXSTORAGEMEM2DMULTISAMPLEEXTPROC glTexStorageMem2DMultisampleEXT;
extern PFNGLTEXSTORAGEMEM3DEXTPROC glTexStorageMem3DEXT;
extern PFNGLTEXSTORAGEMEM3DMULTISAMPLEEXTPROC glTexStorageMem3DMultisampleEXT;
extern PFNGLTEXSTORAGESPARSEAMDPROC glTexStorageSparseAMD;
extern PFNGLTEXSUBIMAGE1DPROC glTexSubImage1D;
extern PFNGLTEXSUBIMAGE1DEXTPROC glTexSubImage1DEXT;
extern PFNGLTEXSUBIMAGE2DPROC glTexSubImage2D;
extern PFNGLTEXSUBIMAGE2DEXTPROC glTexSubImage2DEXT;
extern PFNGLTEXSUBIMAGE3DPROC glTexSubImage3D;
extern PFNGLTEXSUBIMAGE3DEXTPROC glTexSubImage3DEXT;
extern PFNGLTEXSUBIMAGE3DOESPROC glTexSubImage3DOES;
extern PFNGLTEXSUBIMAGE4DSGISPROC glTexSubImage4DSGIS;
extern PFNGLTEXTUREATTACHMEMORYNVPROC glTextureAttachMemoryNV;
extern PFNGLTEXTUREBARRIERPROC glTextureBarrier;
extern PFNGLTEXTUREBARRIERNVPROC glTextureBarrierNV;
extern PFNGLTEXTUREBUFFERPROC glTextureBuffer;
extern PFNGLTEXTUREBUFFEREXTPROC glTextureBufferEXT;
extern PFNGLTEXTUREBUFFERRANGEPROC glTextureBufferRange;
extern PFNGLTEXTUREBUFFERRANGEEXTPROC glTextureBufferRangeEXT;
extern PFNGLTEXTURECOLORMASKSGISPROC glTextureColorMaskSGIS;
extern PFNGLTEXTUREFOVEATIONPARAMETERSQCOMPROC glTextureFoveationParametersQCOM;
extern PFNGLTEXTUREIMAGE1DEXTPROC glTextureImage1DEXT;
extern PFNGLTEXTUREIMAGE2DEXTPROC glTextureImage2DEXT;
extern PFNGLTEXTUREIMAGE2DMULTISAMPLECOVERAGENVPROC glTextureImage2DMultisampleCoverageNV;
extern PFNGLTEXTUREIMAGE2DMULTISAMPLENVPROC glTextureImage2DMultisampleNV;
extern PFNGLTEXTUREIMAGE3DEXTPROC glTextureImage3DEXT;
extern PFNGLTEXTUREIMAGE3DMULTISAMPLECOVERAGENVPROC glTextureImage3DMultisampleCoverageNV;
extern PFNGLTEXTUREIMAGE3DMULTISAMPLENVPROC glTextureImage3DMultisampleNV;
extern PFNGLTEXTURELIGHTEXTPROC glTextureLightEXT;
extern PFNGLTEXTUREMATERIALEXTPROC glTextureMaterialEXT;
extern PFNGLTEXTURENORMALEXTPROC glTextureNormalEXT;
extern PFNGLTEXTUREPAGECOMMITMENTEXTPROC glTexturePageCommitmentEXT;
extern PFNGLTEXTUREPAGECOMMITMENTMEMNVPROC glTexturePageCommitmentMemNV;
extern PFNGLTEXTUREPARAMETERIIVPROC glTextureParameterIiv;
extern PFNGLTEXTUREPARAMETERIIVEXTPROC glTextureParameterIivEXT;
extern PFNGLTEXTUREPARAMETERIUIVPROC glTextureParameterIuiv;
extern PFNGLTEXTUREPARAMETERIUIVEXTPROC glTextureParameterIuivEXT;
extern PFNGLTEXTUREPARAMETERFPROC glTextureParameterf;
extern PFNGLTEXTUREPARAMETERFEXTPROC glTextureParameterfEXT;
extern PFNGLTEXTUREPARAMETERFVPROC glTextureParameterfv;
extern PFNGLTEXTUREPARAMETERFVEXTPROC glTextureParameterfvEXT;
extern PFNGLTEXTUREPARAMETERIPROC glTextureParameteri;
extern PFNGLTEXTUREPARAMETERIEXTPROC glTextureParameteriEXT;
extern PFNGLTEXTUREPARAMETERIVPROC glTextureParameteriv;
extern PFNGLTEXTUREPARAMETERIVEXTPROC glTextureParameterivEXT;
extern PFNGLTEXTURERANGEAPPLEPROC glTextureRangeAPPLE;
extern PFNGLTEXTURERENDERBUFFEREXTPROC glTextureRenderbufferEXT;
extern PFNGLTEXTURESTORAGE1DPROC glTextureStorage1D;
extern PFNGLTEXTURESTORAGE1DEXTPROC glTextureStorage1DEXT;
extern PFNGLTEXTURESTORAGE2DPROC glTextureStorage2D;
extern PFNGLTEXTURESTORAGE2DEXTPROC glTextureStorage2DEXT;
extern PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC glTextureStorage2DMultisample;
extern PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC glTextureStorage2DMultisampleEXT;
extern PFNGLTEXTURESTORAGE3DPROC glTextureStorage3D;
extern PFNGLTEXTURESTORAGE3DEXTPROC glTextureStorage3DEXT;
extern PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC glTextureStorage3DMultisample;
extern PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC glTextureStorage3DMultisampleEXT;
extern PFNGLTEXTURESTORAGEMEM1DEXTPROC glTextureStorageMem1DEXT;
extern PFNGLTEXTURESTORAGEMEM2DEXTPROC glTextureStorageMem2DEXT;
extern PFNGLTEXTURESTORAGEMEM2DMULTISAMPLEEXTPROC glTextureStorageMem2DMultisampleEXT;
extern PFNGLTEXTURESTORAGEMEM3DEXTPROC glTextureStorageMem3DEXT;
extern PFNGLTEXTURESTORAGEMEM3DMULTISAMPLEEXTPROC glTextureStorageMem3DMultisampleEXT;
extern PFNGLTEXTURESTORAGESPARSEAMDPROC glTextureStorageSparseAMD;
extern PFNGLTEXTURESUBIMAGE1DPROC glTextureSubImage1D;
extern PFNGLTEXTURESUBIMAGE1DEXTPROC glTextureSubImage1DEXT;
extern PFNGLTEXTURESUBIMAGE2DPROC glTextureSubImage2D;
extern PFNGLTEXTURESUBIMAGE2DEXTPROC glTextureSubImage2DEXT;
extern PFNGLTEXTURESUBIMAGE3DPROC glTextureSubImage3D;
extern PFNGLTEXTURESUBIMAGE3DEXTPROC glTextureSubImage3DEXT;
extern PFNGLTEXTUREVIEWPROC glTextureView;
extern PFNGLTEXTUREVIEWEXTPROC glTextureViewEXT;
extern PFNGLTEXTUREVIEWOESPROC glTextureViewOES;
extern PFNGLTRACKMATRIXNVPROC glTrackMatrixNV;
extern PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC glTransformFeedbackAttribsNV;
extern PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC glTransformFeedbackBufferBase;
extern PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC glTransformFeedbackBufferRange;
extern PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC glTransformFeedbackStreamAttribsNV;
extern PFNGLTRANSFORMFEEDBACKVARYINGSPROC glTransformFeedbackVaryings;
extern PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC glTransformFeedbackVaryingsEXT;
extern PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC glTransformFeedbackVaryingsNV;
extern PFNGLTRANSFORMPATHNVPROC glTransformPathNV;
extern PFNGLTRANSLATEDPROC glTranslated;
extern PFNGLTRANSLATEFPROC glTranslatef;
extern PFNGLTRANSLATEXPROC glTranslatex;
extern PFNGLTRANSLATEXOESPROC glTranslatexOES;
extern PFNGLUNIFORM1DPROC glUniform1d;
extern PFNGLUNIFORM1DVPROC glUniform1dv;
extern PFNGLUNIFORM1FPROC glUniform1f;
extern PFNGLUNIFORM1FARBPROC glUniform1fARB;
extern PFNGLUNIFORM1FVPROC glUniform1fv;
extern PFNGLUNIFORM1FVARBPROC glUniform1fvARB;
extern PFNGLUNIFORM1IPROC glUniform1i;
extern PFNGLUNIFORM1I64ARBPROC glUniform1i64ARB;
extern PFNGLUNIFORM1I64NVPROC glUniform1i64NV;
extern PFNGLUNIFORM1I64VARBPROC glUniform1i64vARB;
extern PFNGLUNIFORM1I64VNVPROC glUniform1i64vNV;
extern PFNGLUNIFORM1IARBPROC glUniform1iARB;
extern PFNGLUNIFORM1IVPROC glUniform1iv;
extern PFNGLUNIFORM1IVARBPROC glUniform1ivARB;
extern PFNGLUNIFORM1UIPROC glUniform1ui;
extern PFNGLUNIFORM1UI64ARBPROC glUniform1ui64ARB;
extern PFNGLUNIFORM1UI64NVPROC glUniform1ui64NV;
extern PFNGLUNIFORM1UI64VARBPROC glUniform1ui64vARB;
extern PFNGLUNIFORM1UI64VNVPROC glUniform1ui64vNV;
extern PFNGLUNIFORM1UIEXTPROC glUniform1uiEXT;
extern PFNGLUNIFORM1UIVPROC glUniform1uiv;
extern PFNGLUNIFORM1UIVEXTPROC glUniform1uivEXT;
extern PFNGLUNIFORM2DPROC glUniform2d;
extern PFNGLUNIFORM2DVPROC glUniform2dv;
extern PFNGLUNIFORM2FPROC glUniform2f;
extern PFNGLUNIFORM2FARBPROC glUniform2fARB;
extern PFNGLUNIFORM2FVPROC glUniform2fv;
extern PFNGLUNIFORM2FVARBPROC glUniform2fvARB;
extern PFNGLUNIFORM2IPROC glUniform2i;
extern PFNGLUNIFORM2I64ARBPROC glUniform2i64ARB;
extern PFNGLUNIFORM2I64NVPROC glUniform2i64NV;
extern PFNGLUNIFORM2I64VARBPROC glUniform2i64vARB;
extern PFNGLUNIFORM2I64VNVPROC glUniform2i64vNV;
extern PFNGLUNIFORM2IARBPROC glUniform2iARB;
extern PFNGLUNIFORM2IVPROC glUniform2iv;
extern PFNGLUNIFORM2IVARBPROC glUniform2ivARB;
extern PFNGLUNIFORM2UIPROC glUniform2ui;
extern PFNGLUNIFORM2UI64ARBPROC glUniform2ui64ARB;
extern PFNGLUNIFORM2UI64NVPROC glUniform2ui64NV;
extern PFNGLUNIFORM2UI64VARBPROC glUniform2ui64vARB;
extern PFNGLUNIFORM2UI64VNVPROC glUniform2ui64vNV;
extern PFNGLUNIFORM2UIEXTPROC glUniform2uiEXT;
extern PFNGLUNIFORM2UIVPROC glUniform2uiv;
extern PFNGLUNIFORM2UIVEXTPROC glUniform2uivEXT;
extern PFNGLUNIFORM3DPROC glUniform3d;
extern PFNGLUNIFORM3DVPROC glUniform3dv;
extern PFNGLUNIFORM3FPROC glUniform3f;
extern PFNGLUNIFORM3FARBPROC glUniform3fARB;
extern PFNGLUNIFORM3FVPROC glUniform3fv;
extern PFNGLUNIFORM3FVARBPROC glUniform3fvARB;
extern PFNGLUNIFORM3IPROC glUniform3i;
extern PFNGLUNIFORM3I64ARBPROC glUniform3i64ARB;
extern PFNGLUNIFORM3I64NVPROC glUniform3i64NV;
extern PFNGLUNIFORM3I64VARBPROC glUniform3i64vARB;
extern PFNGLUNIFORM3I64VNVPROC glUniform3i64vNV;
extern PFNGLUNIFORM3IARBPROC glUniform3iARB;
extern PFNGLUNIFORM3IVPROC glUniform3iv;
extern PFNGLUNIFORM3IVARBPROC glUniform3ivARB;
extern PFNGLUNIFORM3UIPROC glUniform3ui;
extern PFNGLUNIFORM3UI64ARBPROC glUniform3ui64ARB;
extern PFNGLUNIFORM3UI64NVPROC glUniform3ui64NV;
extern PFNGLUNIFORM3UI64VARBPROC glUniform3ui64vARB;
extern PFNGLUNIFORM3UI64VNVPROC glUniform3ui64vNV;
extern PFNGLUNIFORM3UIEXTPROC glUniform3uiEXT;
extern PFNGLUNIFORM3UIVPROC glUniform3uiv;
extern PFNGLUNIFORM3UIVEXTPROC glUniform3uivEXT;
extern PFNGLUNIFORM4DPROC glUniform4d;
extern PFNGLUNIFORM4DVPROC glUniform4dv;
extern PFNGLUNIFORM4FPROC glUniform4f;
extern PFNGLUNIFORM4FARBPROC glUniform4fARB;
extern PFNGLUNIFORM4FVPROC glUniform4fv;
extern PFNGLUNIFORM4FVARBPROC glUniform4fvARB;
extern PFNGLUNIFORM4IPROC glUniform4i;
extern PFNGLUNIFORM4I64ARBPROC glUniform4i64ARB;
extern PFNGLUNIFORM4I64NVPROC glUniform4i64NV;
extern PFNGLUNIFORM4I64VARBPROC glUniform4i64vARB;
extern PFNGLUNIFORM4I64VNVPROC glUniform4i64vNV;
extern PFNGLUNIFORM4IARBPROC glUniform4iARB;
extern PFNGLUNIFORM4IVPROC glUniform4iv;
extern PFNGLUNIFORM4IVARBPROC glUniform4ivARB;
extern PFNGLUNIFORM4UIPROC glUniform4ui;
extern PFNGLUNIFORM4UI64ARBPROC glUniform4ui64ARB;
extern PFNGLUNIFORM4UI64NVPROC glUniform4ui64NV;
extern PFNGLUNIFORM4UI64VARBPROC glUniform4ui64vARB;
extern PFNGLUNIFORM4UI64VNVPROC glUniform4ui64vNV;
extern PFNGLUNIFORM4UIEXTPROC glUniform4uiEXT;
extern PFNGLUNIFORM4UIVPROC glUniform4uiv;
extern PFNGLUNIFORM4UIVEXTPROC glUniform4uivEXT;
extern PFNGLUNIFORMBLOCKBINDINGPROC glUniformBlockBinding;
extern PFNGLUNIFORMBUFFEREXTPROC glUniformBufferEXT;
extern PFNGLUNIFORMHANDLEUI64ARBPROC glUniformHandleui64ARB;
extern PFNGLUNIFORMHANDLEUI64IMGPROC glUniformHandleui64IMG;
extern PFNGLUNIFORMHANDLEUI64NVPROC glUniformHandleui64NV;
extern PFNGLUNIFORMHANDLEUI64VARBPROC glUniformHandleui64vARB;
extern PFNGLUNIFORMHANDLEUI64VIMGPROC glUniformHandleui64vIMG;
extern PFNGLUNIFORMHANDLEUI64VNVPROC glUniformHandleui64vNV;
extern PFNGLUNIFORMMATRIX2DVPROC glUniformMatrix2dv;
extern PFNGLUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
extern PFNGLUNIFORMMATRIX2FVARBPROC glUniformMatrix2fvARB;
extern PFNGLUNIFORMMATRIX2X3DVPROC glUniformMatrix2x3dv;
extern PFNGLUNIFORMMATRIX2X3FVPROC glUniformMatrix2x3fv;
extern PFNGLUNIFORMMATRIX2X3FVNVPROC glUniformMatrix2x3fvNV;
extern PFNGLUNIFORMMATRIX2X4DVPROC glUniformMatrix2x4dv;
extern PFNGLUNIFORMMATRIX2X4FVPROC glUniformMatrix2x4fv;
extern PFNGLUNIFORMMATRIX2X4FVNVPROC glUniformMatrix2x4fvNV;
extern PFNGLUNIFORMMATRIX3DVPROC glUniformMatrix3dv;
extern PFNGLUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
extern PFNGLUNIFORMMATRIX3FVARBPROC glUniformMatrix3fvARB;
extern PFNGLUNIFORMMATRIX3X2DVPROC glUniformMatrix3x2dv;
extern PFNGLUNIFORMMATRIX3X2FVPROC glUniformMatrix3x2fv;
extern PFNGLUNIFORMMATRIX3X2FVNVPROC glUniformMatrix3x2fvNV;
extern PFNGLUNIFORMMATRIX3X4DVPROC glUniformMatrix3x4dv;
extern PFNGLUNIFORMMATRIX3X4FVPROC glUniformMatrix3x4fv;
extern PFNGLUNIFORMMATRIX3X4FVNVPROC glUniformMatrix3x4fvNV;
extern PFNGLUNIFORMMATRIX4DVPROC glUniformMatrix4dv;
extern PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv;
extern PFNGLUNIFORMMATRIX4FVARBPROC glUniformMatrix4fvARB;
extern PFNGLUNIFORMMATRIX4X2DVPROC glUniformMatrix4x2dv;
extern PFNGLUNIFORMMATRIX4X2FVPROC glUniformMatrix4x2fv;
extern PFNGLUNIFORMMATRIX4X2FVNVPROC glUniformMatrix4x2fvNV;
extern PFNGLUNIFORMMATRIX4X3DVPROC glUniformMatrix4x3dv;
extern PFNGLUNIFORMMATRIX4X3FVPROC glUniformMatrix4x3fv;
extern PFNGLUNIFORMMATRIX4X3FVNVPROC glUniformMatrix4x3fvNV;
extern PFNGLUNIFORMSUBROUTINESUIVPROC glUniformSubroutinesuiv;
extern PFNGLUNIFORMUI64NVPROC glUniformui64NV;
extern PFNGLUNIFORMUI64VNVPROC glUniformui64vNV;
extern PFNGLUNLOCKARRAYSEXTPROC glUnlockArraysEXT;
extern PFNGLUNMAPBUFFERPROC glUnmapBuffer;
extern PFNGLUNMAPBUFFERARBPROC glUnmapBufferARB;
extern PFNGLUNMAPBUFFEROESPROC glUnmapBufferOES;
extern PFNGLUNMAPNAMEDBUFFERPROC glUnmapNamedBuffer;
extern PFNGLUNMAPNAMEDBUFFEREXTPROC glUnmapNamedBufferEXT;
extern PFNGLUNMAPOBJECTBUFFERATIPROC glUnmapObjectBufferATI;
extern PFNGLUNMAPTEXTURE2DINTELPROC glUnmapTexture2DINTEL;
extern PFNGLUPDATEOBJECTBUFFERATIPROC glUpdateObjectBufferATI;
extern PFNGLUPLOADGPUMASKNVXPROC glUploadGpuMaskNVX;
extern PFNGLUSEPROGRAMPROC glUseProgram;
extern PFNGLUSEPROGRAMOBJECTARBPROC glUseProgramObjectARB;
extern PFNGLUSEPROGRAMSTAGESPROC glUseProgramStages;
extern PFNGLUSEPROGRAMSTAGESEXTPROC glUseProgramStagesEXT;
extern PFNGLUSESHADERPROGRAMEXTPROC glUseShaderProgramEXT;
extern PFNGLVDPAUFININVPROC glVDPAUFiniNV;
extern PFNGLVDPAUGETSURFACEIVNVPROC glVDPAUGetSurfaceivNV;
extern PFNGLVDPAUINITNVPROC glVDPAUInitNV;
extern PFNGLVDPAUISSURFACENVPROC glVDPAUIsSurfaceNV;
extern PFNGLVDPAUMAPSURFACESNVPROC glVDPAUMapSurfacesNV;
extern PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC glVDPAURegisterOutputSurfaceNV;
extern PFNGLVDPAUREGISTERVIDEOSURFACENVPROC glVDPAURegisterVideoSurfaceNV;
extern PFNGLVDPAUREGISTERVIDEOSURFACEWITHPICTURESTRUCTURENVPROC glVDPAURegisterVideoSurfaceWithPictureStructureNV;
extern PFNGLVDPAUSURFACEACCESSNVPROC glVDPAUSurfaceAccessNV;
extern PFNGLVDPAUUNMAPSURFACESNVPROC glVDPAUUnmapSurfacesNV;
extern PFNGLVDPAUUNREGISTERSURFACENVPROC glVDPAUUnregisterSurfaceNV;
extern PFNGLVALIDATEPROGRAMPROC glValidateProgram;
extern PFNGLVALIDATEPROGRAMARBPROC glValidateProgramARB;
extern PFNGLVALIDATEPROGRAMPIPELINEPROC glValidateProgramPipeline;
extern PFNGLVALIDATEPROGRAMPIPELINEEXTPROC glValidateProgramPipelineEXT;
extern PFNGLVARIANTARRAYOBJECTATIPROC glVariantArrayObjectATI;
extern PFNGLVARIANTPOINTEREXTPROC glVariantPointerEXT;
extern PFNGLVARIANTBVEXTPROC glVariantbvEXT;
extern PFNGLVARIANTDVEXTPROC glVariantdvEXT;
extern PFNGLVARIANTFVEXTPROC glVariantfvEXT;
extern PFNGLVARIANTIVEXTPROC glVariantivEXT;
extern PFNGLVARIANTSVEXTPROC glVariantsvEXT;
extern PFNGLVARIANTUBVEXTPROC glVariantubvEXT;
extern PFNGLVARIANTUIVEXTPROC glVariantuivEXT;
extern PFNGLVARIANTUSVEXTPROC glVariantusvEXT;
extern PFNGLVERTEX2BOESPROC glVertex2bOES;
extern PFNGLVERTEX2BVOESPROC glVertex2bvOES;
extern PFNGLVERTEX2DPROC glVertex2d;
extern PFNGLVERTEX2DVPROC glVertex2dv;
extern PFNGLVERTEX2FPROC glVertex2f;
extern PFNGLVERTEX2FVPROC glVertex2fv;
extern PFNGLVERTEX2HNVPROC glVertex2hNV;
extern PFNGLVERTEX2HVNVPROC glVertex2hvNV;
extern PFNGLVERTEX2IPROC glVertex2i;
extern PFNGLVERTEX2IVPROC glVertex2iv;
extern PFNGLVERTEX2SPROC glVertex2s;
extern PFNGLVERTEX2SVPROC glVertex2sv;
extern PFNGLVERTEX2XOESPROC glVertex2xOES;
extern PFNGLVERTEX2XVOESPROC glVertex2xvOES;
extern PFNGLVERTEX3BOESPROC glVertex3bOES;
extern PFNGLVERTEX3BVOESPROC glVertex3bvOES;
extern PFNGLVERTEX3DPROC glVertex3d;
extern PFNGLVERTEX3DVPROC glVertex3dv;
extern PFNGLVERTEX3FPROC glVertex3f;
extern PFNGLVERTEX3FVPROC glVertex3fv;
extern PFNGLVERTEX3HNVPROC glVertex3hNV;
extern PFNGLVERTEX3HVNVPROC glVertex3hvNV;
extern PFNGLVERTEX3IPROC glVertex3i;
extern PFNGLVERTEX3IVPROC glVertex3iv;
extern PFNGLVERTEX3SPROC glVertex3s;
extern PFNGLVERTEX3SVPROC glVertex3sv;
extern PFNGLVERTEX3XOESPROC glVertex3xOES;
extern PFNGLVERTEX3XVOESPROC glVertex3xvOES;
extern PFNGLVERTEX4BOESPROC glVertex4bOES;
extern PFNGLVERTEX4BVOESPROC glVertex4bvOES;
extern PFNGLVERTEX4DPROC glVertex4d;
extern PFNGLVERTEX4DVPROC glVertex4dv;
extern PFNGLVERTEX4FPROC glVertex4f;
extern PFNGLVERTEX4FVPROC glVertex4fv;
extern PFNGLVERTEX4HNVPROC glVertex4hNV;
extern PFNGLVERTEX4HVNVPROC glVertex4hvNV;
extern PFNGLVERTEX4IPROC glVertex4i;
extern PFNGLVERTEX4IVPROC glVertex4iv;
extern PFNGLVERTEX4SPROC glVertex4s;
extern PFNGLVERTEX4SVPROC glVertex4sv;
extern PFNGLVERTEX4XOESPROC glVertex4xOES;
extern PFNGLVERTEX4XVOESPROC glVertex4xvOES;
extern PFNGLVERTEXARRAYATTRIBBINDINGPROC glVertexArrayAttribBinding;
extern PFNGLVERTEXARRAYATTRIBFORMATPROC glVertexArrayAttribFormat;
extern PFNGLVERTEXARRAYATTRIBIFORMATPROC glVertexArrayAttribIFormat;
extern PFNGLVERTEXARRAYATTRIBLFORMATPROC glVertexArrayAttribLFormat;
extern PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC glVertexArrayBindVertexBufferEXT;
extern PFNGLVERTEXARRAYBINDINGDIVISORPROC glVertexArrayBindingDivisor;
extern PFNGLVERTEXARRAYCOLOROFFSETEXTPROC glVertexArrayColorOffsetEXT;
extern PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC glVertexArrayEdgeFlagOffsetEXT;
extern PFNGLVERTEXARRAYELEMENTBUFFERPROC glVertexArrayElementBuffer;
extern PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC glVertexArrayFogCoordOffsetEXT;
extern PFNGLVERTEXARRAYINDEXOFFSETEXTPROC glVertexArrayIndexOffsetEXT;
extern PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC glVertexArrayMultiTexCoordOffsetEXT;
extern PFNGLVERTEXARRAYNORMALOFFSETEXTPROC glVertexArrayNormalOffsetEXT;
extern PFNGLVERTEXARRAYPARAMETERIAPPLEPROC glVertexArrayParameteriAPPLE;
extern PFNGLVERTEXARRAYRANGEAPPLEPROC glVertexArrayRangeAPPLE;
extern PFNGLVERTEXARRAYRANGENVPROC glVertexArrayRangeNV;
extern PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC glVertexArraySecondaryColorOffsetEXT;
extern PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC glVertexArrayTexCoordOffsetEXT;
extern PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC glVertexArrayVertexAttribBindingEXT;
extern PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC glVertexArrayVertexAttribDivisorEXT;
extern PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC glVertexArrayVertexAttribFormatEXT;
extern PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC glVertexArrayVertexAttribIFormatEXT;
extern PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC glVertexArrayVertexAttribIOffsetEXT;
extern PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC glVertexArrayVertexAttribLFormatEXT;
extern PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC glVertexArrayVertexAttribLOffsetEXT;
extern PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC glVertexArrayVertexAttribOffsetEXT;
extern PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC glVertexArrayVertexBindingDivisorEXT;
extern PFNGLVERTEXARRAYVERTEXBUFFERPROC glVertexArrayVertexBuffer;
extern PFNGLVERTEXARRAYVERTEXBUFFERSPROC glVertexArrayVertexBuffers;
extern PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC glVertexArrayVertexOffsetEXT;
extern PFNGLVERTEXATTRIB1DPROC glVertexAttrib1d;
extern PFNGLVERTEXATTRIB1DARBPROC glVertexAttrib1dARB;
extern PFNGLVERTEXATTRIB1DNVPROC glVertexAttrib1dNV;
extern PFNGLVERTEXATTRIB1DVPROC glVertexAttrib1dv;
extern PFNGLVERTEXATTRIB1DVARBPROC glVertexAttrib1dvARB;
extern PFNGLVERTEXATTRIB1DVNVPROC glVertexAttrib1dvNV;
extern PFNGLVERTEXATTRIB1FPROC glVertexAttrib1f;
extern PFNGLVERTEXATTRIB1FARBPROC glVertexAttrib1fARB;
extern PFNGLVERTEXATTRIB1FNVPROC glVertexAttrib1fNV;
extern PFNGLVERTEXATTRIB1FVPROC glVertexAttrib1fv;
extern PFNGLVERTEXATTRIB1FVARBPROC glVertexAttrib1fvARB;
extern PFNGLVERTEXATTRIB1FVNVPROC glVertexAttrib1fvNV;
extern PFNGLVERTEXATTRIB1HNVPROC glVertexAttrib1hNV;
extern PFNGLVERTEXATTRIB1HVNVPROC glVertexAttrib1hvNV;
extern PFNGLVERTEXATTRIB1SPROC glVertexAttrib1s;
extern PFNGLVERTEXATTRIB1SARBPROC glVertexAttrib1sARB;
extern PFNGLVERTEXATTRIB1SNVPROC glVertexAttrib1sNV;
extern PFNGLVERTEXATTRIB1SVPROC glVertexAttrib1sv;
extern PFNGLVERTEXATTRIB1SVARBPROC glVertexAttrib1svARB;
extern PFNGLVERTEXATTRIB1SVNVPROC glVertexAttrib1svNV;
extern PFNGLVERTEXATTRIB2DPROC glVertexAttrib2d;
extern PFNGLVERTEXATTRIB2DARBPROC glVertexAttrib2dARB;
extern PFNGLVERTEXATTRIB2DNVPROC glVertexAttrib2dNV;
extern PFNGLVERTEXATTRIB2DVPROC glVertexAttrib2dv;
extern PFNGLVERTEXATTRIB2DVARBPROC glVertexAttrib2dvARB;
extern PFNGLVERTEXATTRIB2DVNVPROC glVertexAttrib2dvNV;
extern PFNGLVERTEXATTRIB2FPROC glVertexAttrib2f;
extern PFNGLVERTEXATTRIB2FARBPROC glVertexAttrib2fARB;
extern PFNGLVERTEXATTRIB2FNVPROC glVertexAttrib2fNV;
extern PFNGLVERTEXATTRIB2FVPROC glVertexAttrib2fv;
extern PFNGLVERTEXATTRIB2FVARBPROC glVertexAttrib2fvARB;
extern PFNGLVERTEXATTRIB2FVNVPROC glVertexAttrib2fvNV;
extern PFNGLVERTEXATTRIB2HNVPROC glVertexAttrib2hNV;
extern PFNGLVERTEXATTRIB2HVNVPROC glVertexAttrib2hvNV;
extern PFNGLVERTEXATTRIB2SPROC glVertexAttrib2s;
extern PFNGLVERTEXATTRIB2SARBPROC glVertexAttrib2sARB;
extern PFNGLVERTEXATTRIB2SNVPROC glVertexAttrib2sNV;
extern PFNGLVERTEXATTRIB2SVPROC glVertexAttrib2sv;
extern PFNGLVERTEXATTRIB2SVARBPROC glVertexAttrib2svARB;
extern PFNGLVERTEXATTRIB2SVNVPROC glVertexAttrib2svNV;
extern PFNGLVERTEXATTRIB3DPROC glVertexAttrib3d;
extern PFNGLVERTEXATTRIB3DARBPROC glVertexAttrib3dARB;
extern PFNGLVERTEXATTRIB3DNVPROC glVertexAttrib3dNV;
extern PFNGLVERTEXATTRIB3DVPROC glVertexAttrib3dv;
extern PFNGLVERTEXATTRIB3DVARBPROC glVertexAttrib3dvARB;
extern PFNGLVERTEXATTRIB3DVNVPROC glVertexAttrib3dvNV;
extern PFNGLVERTEXATTRIB3FPROC glVertexAttrib3f;
extern PFNGLVERTEXATTRIB3FARBPROC glVertexAttrib3fARB;
extern PFNGLVERTEXATTRIB3FNVPROC glVertexAttrib3fNV;
extern PFNGLVERTEXATTRIB3FVPROC glVertexAttrib3fv;
extern PFNGLVERTEXATTRIB3FVARBPROC glVertexAttrib3fvARB;
extern PFNGLVERTEXATTRIB3FVNVPROC glVertexAttrib3fvNV;
extern PFNGLVERTEXATTRIB3HNVPROC glVertexAttrib3hNV;
extern PFNGLVERTEXATTRIB3HVNVPROC glVertexAttrib3hvNV;
extern PFNGLVERTEXATTRIB3SPROC glVertexAttrib3s;
extern PFNGLVERTEXATTRIB3SARBPROC glVertexAttrib3sARB;
extern PFNGLVERTEXATTRIB3SNVPROC glVertexAttrib3sNV;
extern PFNGLVERTEXATTRIB3SVPROC glVertexAttrib3sv;
extern PFNGLVERTEXATTRIB3SVARBPROC glVertexAttrib3svARB;
extern PFNGLVERTEXATTRIB3SVNVPROC glVertexAttrib3svNV;
extern PFNGLVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv;
extern PFNGLVERTEXATTRIB4NBVARBPROC glVertexAttrib4NbvARB;
extern PFNGLVERTEXATTRIB4NIVPROC glVertexAttrib4Niv;
extern PFNGLVERTEXATTRIB4NIVARBPROC glVertexAttrib4NivARB;
extern PFNGLVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv;
extern PFNGLVERTEXATTRIB4NSVARBPROC glVertexAttrib4NsvARB;
extern PFNGLVERTEXATTRIB4NUBPROC glVertexAttrib4Nub;
extern PFNGLVERTEXATTRIB4NUBARBPROC glVertexAttrib4NubARB;
extern PFNGLVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv;
extern PFNGLVERTEXATTRIB4NUBVARBPROC glVertexAttrib4NubvARB;
extern PFNGLVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv;
extern PFNGLVERTEXATTRIB4NUIVARBPROC glVertexAttrib4NuivARB;
extern PFNGLVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv;
extern PFNGLVERTEXATTRIB4NUSVARBPROC glVertexAttrib4NusvARB;
extern PFNGLVERTEXATTRIB4BVPROC glVertexAttrib4bv;
extern PFNGLVERTEXATTRIB4BVARBPROC glVertexAttrib4bvARB;
extern PFNGLVERTEXATTRIB4DPROC glVertexAttrib4d;
extern PFNGLVERTEXATTRIB4DARBPROC glVertexAttrib4dARB;
extern PFNGLVERTEXATTRIB4DNVPROC glVertexAttrib4dNV;
extern PFNGLVERTEXATTRIB4DVPROC glVertexAttrib4dv;
extern PFNGLVERTEXATTRIB4DVARBPROC glVertexAttrib4dvARB;
extern PFNGLVERTEXATTRIB4DVNVPROC glVertexAttrib4dvNV;
extern PFNGLVERTEXATTRIB4FPROC glVertexAttrib4f;
extern PFNGLVERTEXATTRIB4FARBPROC glVertexAttrib4fARB;
extern PFNGLVERTEXATTRIB4FNVPROC glVertexAttrib4fNV;
extern PFNGLVERTEXATTRIB4FVPROC glVertexAttrib4fv;
extern PFNGLVERTEXATTRIB4FVARBPROC glVertexAttrib4fvARB;
extern PFNGLVERTEXATTRIB4FVNVPROC glVertexAttrib4fvNV;
extern PFNGLVERTEXATTRIB4HNVPROC glVertexAttrib4hNV;
extern PFNGLVERTEXATTRIB4HVNVPROC glVertexAttrib4hvNV;
extern PFNGLVERTEXATTRIB4IVPROC glVertexAttrib4iv;
extern PFNGLVERTEXATTRIB4IVARBPROC glVertexAttrib4ivARB;
extern PFNGLVERTEXATTRIB4SPROC glVertexAttrib4s;
extern PFNGLVERTEXATTRIB4SARBPROC glVertexAttrib4sARB;
extern PFNGLVERTEXATTRIB4SNVPROC glVertexAttrib4sNV;
extern PFNGLVERTEXATTRIB4SVPROC glVertexAttrib4sv;
extern PFNGLVERTEXATTRIB4SVARBPROC glVertexAttrib4svARB;
extern PFNGLVERTEXATTRIB4SVNVPROC glVertexAttrib4svNV;
extern PFNGLVERTEXATTRIB4UBNVPROC glVertexAttrib4ubNV;
extern PFNGLVERTEXATTRIB4UBVPROC glVertexAttrib4ubv;
extern PFNGLVERTEXATTRIB4UBVARBPROC glVertexAttrib4ubvARB;
extern PFNGLVERTEXATTRIB4UBVNVPROC glVertexAttrib4ubvNV;
extern PFNGLVERTEXATTRIB4UIVPROC glVertexAttrib4uiv;
extern PFNGLVERTEXATTRIB4UIVARBPROC glVertexAttrib4uivARB;
extern PFNGLVERTEXATTRIB4USVPROC glVertexAttrib4usv;
extern PFNGLVERTEXATTRIB4USVARBPROC glVertexAttrib4usvARB;
extern PFNGLVERTEXATTRIBARRAYOBJECTATIPROC glVertexAttribArrayObjectATI;
extern PFNGLVERTEXATTRIBBINDINGPROC glVertexAttribBinding;
extern PFNGLVERTEXATTRIBDIVISORPROC glVertexAttribDivisor;
extern PFNGLVERTEXATTRIBDIVISORANGLEPROC glVertexAttribDivisorANGLE;
extern PFNGLVERTEXATTRIBDIVISORARBPROC glVertexAttribDivisorARB;
extern PFNGLVERTEXATTRIBDIVISOREXTPROC glVertexAttribDivisorEXT;
extern PFNGLVERTEXATTRIBDIVISORNVPROC glVertexAttribDivisorNV;
extern PFNGLVERTEXATTRIBFORMATPROC glVertexAttribFormat;
extern PFNGLVERTEXATTRIBFORMATNVPROC glVertexAttribFormatNV;
extern PFNGLVERTEXATTRIBI1IPROC glVertexAttribI1i;
extern PFNGLVERTEXATTRIBI1IEXTPROC glVertexAttribI1iEXT;
extern PFNGLVERTEXATTRIBI1IVPROC glVertexAttribI1iv;
extern PFNGLVERTEXATTRIBI1IVEXTPROC glVertexAttribI1ivEXT;
extern PFNGLVERTEXATTRIBI1UIPROC glVertexAttribI1ui;
extern PFNGLVERTEXATTRIBI1UIEXTPROC glVertexAttribI1uiEXT;
extern PFNGLVERTEXATTRIBI1UIVPROC glVertexAttribI1uiv;
extern PFNGLVERTEXATTRIBI1UIVEXTPROC glVertexAttribI1uivEXT;
extern PFNGLVERTEXATTRIBI2IPROC glVertexAttribI2i;
extern PFNGLVERTEXATTRIBI2IEXTPROC glVertexAttribI2iEXT;
extern PFNGLVERTEXATTRIBI2IVPROC glVertexAttribI2iv;
extern PFNGLVERTEXATTRIBI2IVEXTPROC glVertexAttribI2ivEXT;
extern PFNGLVERTEXATTRIBI2UIPROC glVertexAttribI2ui;
extern PFNGLVERTEXATTRIBI2UIEXTPROC glVertexAttribI2uiEXT;
extern PFNGLVERTEXATTRIBI2UIVPROC glVertexAttribI2uiv;
extern PFNGLVERTEXATTRIBI2UIVEXTPROC glVertexAttribI2uivEXT;
extern PFNGLVERTEXATTRIBI3IPROC glVertexAttribI3i;
extern PFNGLVERTEXATTRIBI3IEXTPROC glVertexAttribI3iEXT;
extern PFNGLVERTEXATTRIBI3IVPROC glVertexAttribI3iv;
extern PFNGLVERTEXATTRIBI3IVEXTPROC glVertexAttribI3ivEXT;
extern PFNGLVERTEXATTRIBI3UIPROC glVertexAttribI3ui;
extern PFNGLVERTEXATTRIBI3UIEXTPROC glVertexAttribI3uiEXT;
extern PFNGLVERTEXATTRIBI3UIVPROC glVertexAttribI3uiv;
extern PFNGLVERTEXATTRIBI3UIVEXTPROC glVertexAttribI3uivEXT;
extern PFNGLVERTEXATTRIBI4BVPROC glVertexAttribI4bv;
extern PFNGLVERTEXATTRIBI4BVEXTPROC glVertexAttribI4bvEXT;
extern PFNGLVERTEXATTRIBI4IPROC glVertexAttribI4i;
extern PFNGLVERTEXATTRIBI4IEXTPROC glVertexAttribI4iEXT;
extern PFNGLVERTEXATTRIBI4IVPROC glVertexAttribI4iv;
extern PFNGLVERTEXATTRIBI4IVEXTPROC glVertexAttribI4ivEXT;
extern PFNGLVERTEXATTRIBI4SVPROC glVertexAttribI4sv;
extern PFNGLVERTEXATTRIBI4SVEXTPROC glVertexAttribI4svEXT;
extern PFNGLVERTEXATTRIBI4UBVPROC glVertexAttribI4ubv;
extern PFNGLVERTEXATTRIBI4UBVEXTPROC glVertexAttribI4ubvEXT;
extern PFNGLVERTEXATTRIBI4UIPROC glVertexAttribI4ui;
extern PFNGLVERTEXATTRIBI4UIEXTPROC glVertexAttribI4uiEXT;
extern PFNGLVERTEXATTRIBI4UIVPROC glVertexAttribI4uiv;
extern PFNGLVERTEXATTRIBI4UIVEXTPROC glVertexAttribI4uivEXT;
extern PFNGLVERTEXATTRIBI4USVPROC glVertexAttribI4usv;
extern PFNGLVERTEXATTRIBI4USVEXTPROC glVertexAttribI4usvEXT;
extern PFNGLVERTEXATTRIBIFORMATPROC glVertexAttribIFormat;
extern PFNGLVERTEXATTRIBIFORMATNVPROC glVertexAttribIFormatNV;
extern PFNGLVERTEXATTRIBIPOINTERPROC glVertexAttribIPointer;
extern PFNGLVERTEXATTRIBIPOINTEREXTPROC glVertexAttribIPointerEXT;
extern PFNGLVERTEXATTRIBL1DPROC glVertexAttribL1d;
extern PFNGLVERTEXATTRIBL1DEXTPROC glVertexAttribL1dEXT;
extern PFNGLVERTEXATTRIBL1DVPROC glVertexAttribL1dv;
extern PFNGLVERTEXATTRIBL1DVEXTPROC glVertexAttribL1dvEXT;
extern PFNGLVERTEXATTRIBL1I64NVPROC glVertexAttribL1i64NV;
extern PFNGLVERTEXATTRIBL1I64VNVPROC glVertexAttribL1i64vNV;
extern PFNGLVERTEXATTRIBL1UI64ARBPROC glVertexAttribL1ui64ARB;
extern PFNGLVERTEXATTRIBL1UI64NVPROC glVertexAttribL1ui64NV;
extern PFNGLVERTEXATTRIBL1UI64VARBPROC glVertexAttribL1ui64vARB;
extern PFNGLVERTEXATTRIBL1UI64VNVPROC glVertexAttribL1ui64vNV;
extern PFNGLVERTEXATTRIBL2DPROC glVertexAttribL2d;
extern PFNGLVERTEXATTRIBL2DEXTPROC glVertexAttribL2dEXT;
extern PFNGLVERTEXATTRIBL2DVPROC glVertexAttribL2dv;
extern PFNGLVERTEXATTRIBL2DVEXTPROC glVertexAttribL2dvEXT;
extern PFNGLVERTEXATTRIBL2I64NVPROC glVertexAttribL2i64NV;
extern PFNGLVERTEXATTRIBL2I64VNVPROC glVertexAttribL2i64vNV;
extern PFNGLVERTEXATTRIBL2UI64NVPROC glVertexAttribL2ui64NV;
extern PFNGLVERTEXATTRIBL2UI64VNVPROC glVertexAttribL2ui64vNV;
extern PFNGLVERTEXATTRIBL3DPROC glVertexAttribL3d;
extern PFNGLVERTEXATTRIBL3DEXTPROC glVertexAttribL3dEXT;
extern PFNGLVERTEXATTRIBL3DVPROC glVertexAttribL3dv;
extern PFNGLVERTEXATTRIBL3DVEXTPROC glVertexAttribL3dvEXT;
extern PFNGLVERTEXATTRIBL3I64NVPROC glVertexAttribL3i64NV;
extern PFNGLVERTEXATTRIBL3I64VNVPROC glVertexAttribL3i64vNV;
extern PFNGLVERTEXATTRIBL3UI64NVPROC glVertexAttribL3ui64NV;
extern PFNGLVERTEXATTRIBL3UI64VNVPROC glVertexAttribL3ui64vNV;
extern PFNGLVERTEXATTRIBL4DPROC glVertexAttribL4d;
extern PFNGLVERTEXATTRIBL4DEXTPROC glVertexAttribL4dEXT;
extern PFNGLVERTEXATTRIBL4DVPROC glVertexAttribL4dv;
extern PFNGLVERTEXATTRIBL4DVEXTPROC glVertexAttribL4dvEXT;
extern PFNGLVERTEXATTRIBL4I64NVPROC glVertexAttribL4i64NV;
extern PFNGLVERTEXATTRIBL4I64VNVPROC glVertexAttribL4i64vNV;
extern PFNGLVERTEXATTRIBL4UI64NVPROC glVertexAttribL4ui64NV;
extern PFNGLVERTEXATTRIBL4UI64VNVPROC glVertexAttribL4ui64vNV;
extern PFNGLVERTEXATTRIBLFORMATPROC glVertexAttribLFormat;
extern PFNGLVERTEXATTRIBLFORMATNVPROC glVertexAttribLFormatNV;
extern PFNGLVERTEXATTRIBLPOINTERPROC glVertexAttribLPointer;
extern PFNGLVERTEXATTRIBLPOINTEREXTPROC glVertexAttribLPointerEXT;
extern PFNGLVERTEXATTRIBP1UIPROC glVertexAttribP1ui;
extern PFNGLVERTEXATTRIBP1UIVPROC glVertexAttribP1uiv;
extern PFNGLVERTEXATTRIBP2UIPROC glVertexAttribP2ui;
extern PFNGLVERTEXATTRIBP2UIVPROC glVertexAttribP2uiv;
extern PFNGLVERTEXATTRIBP3UIPROC glVertexAttribP3ui;
extern PFNGLVERTEXATTRIBP3UIVPROC glVertexAttribP3uiv;
extern PFNGLVERTEXATTRIBP4UIPROC glVertexAttribP4ui;
extern PFNGLVERTEXATTRIBP4UIVPROC glVertexAttribP4uiv;
extern PFNGLVERTEXATTRIBPARAMETERIAMDPROC glVertexAttribParameteriAMD;
extern PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer;
extern PFNGLVERTEXATTRIBPOINTERARBPROC glVertexAttribPointerARB;
extern PFNGLVERTEXATTRIBPOINTERNVPROC glVertexAttribPointerNV;
extern PFNGLVERTEXATTRIBS1DVNVPROC glVertexAttribs1dvNV;
extern PFNGLVERTEXATTRIBS1FVNVPROC glVertexAttribs1fvNV;
extern PFNGLVERTEXATTRIBS1HVNVPROC glVertexAttribs1hvNV;
extern PFNGLVERTEXATTRIBS1SVNVPROC glVertexAttribs1svNV;
extern PFNGLVERTEXATTRIBS2DVNVPROC glVertexAttribs2dvNV;
extern PFNGLVERTEXATTRIBS2FVNVPROC glVertexAttribs2fvNV;
extern PFNGLVERTEXATTRIBS2HVNVPROC glVertexAttribs2hvNV;
extern PFNGLVERTEXATTRIBS2SVNVPROC glVertexAttribs2svNV;
extern PFNGLVERTEXATTRIBS3DVNVPROC glVertexAttribs3dvNV;
extern PFNGLVERTEXATTRIBS3FVNVPROC glVertexAttribs3fvNV;
extern PFNGLVERTEXATTRIBS3HVNVPROC glVertexAttribs3hvNV;
extern PFNGLVERTEXATTRIBS3SVNVPROC glVertexAttribs3svNV;
extern PFNGLVERTEXATTRIBS4DVNVPROC glVertexAttribs4dvNV;
extern PFNGLVERTEXATTRIBS4FVNVPROC glVertexAttribs4fvNV;
extern PFNGLVERTEXATTRIBS4HVNVPROC glVertexAttribs4hvNV;
extern PFNGLVERTEXATTRIBS4SVNVPROC glVertexAttribs4svNV;
extern PFNGLVERTEXATTRIBS4UBVNVPROC glVertexAttribs4ubvNV;
extern PFNGLVERTEXBINDINGDIVISORPROC glVertexBindingDivisor;
extern PFNGLVERTEXBLENDARBPROC glVertexBlendARB;
extern PFNGLVERTEXBLENDENVFATIPROC glVertexBlendEnvfATI;
extern PFNGLVERTEXBLENDENVIATIPROC glVertexBlendEnviATI;
extern PFNGLVERTEXFORMATNVPROC glVertexFormatNV;
extern PFNGLVERTEXP2UIPROC glVertexP2ui;
extern PFNGLVERTEXP2UIVPROC glVertexP2uiv;
extern PFNGLVERTEXP3UIPROC glVertexP3ui;
extern PFNGLVERTEXP3UIVPROC glVertexP3uiv;
extern PFNGLVERTEXP4UIPROC glVertexP4ui;
extern PFNGLVERTEXP4UIVPROC glVertexP4uiv;
extern PFNGLVERTEXPOINTERPROC glVertexPointer;
extern PFNGLVERTEXPOINTEREXTPROC glVertexPointerEXT;
extern PFNGLVERTEXPOINTERLISTIBMPROC glVertexPointerListIBM;
extern PFNGLVERTEXPOINTERVINTELPROC glVertexPointervINTEL;
extern PFNGLVERTEXSTREAM1DATIPROC glVertexStream1dATI;
extern PFNGLVERTEXSTREAM1DVATIPROC glVertexStream1dvATI;
extern PFNGLVERTEXSTREAM1FATIPROC glVertexStream1fATI;
extern PFNGLVERTEXSTREAM1FVATIPROC glVertexStream1fvATI;
extern PFNGLVERTEXSTREAM1IATIPROC glVertexStream1iATI;
extern PFNGLVERTEXSTREAM1IVATIPROC glVertexStream1ivATI;
extern PFNGLVERTEXSTREAM1SATIPROC glVertexStream1sATI;
extern PFNGLVERTEXSTREAM1SVATIPROC glVertexStream1svATI;
extern PFNGLVERTEXSTREAM2DATIPROC glVertexStream2dATI;
extern PFNGLVERTEXSTREAM2DVATIPROC glVertexStream2dvATI;
extern PFNGLVERTEXSTREAM2FATIPROC glVertexStream2fATI;
extern PFNGLVERTEXSTREAM2FVATIPROC glVertexStream2fvATI;
extern PFNGLVERTEXSTREAM2IATIPROC glVertexStream2iATI;
extern PFNGLVERTEXSTREAM2IVATIPROC glVertexStream2ivATI;
extern PFNGLVERTEXSTREAM2SATIPROC glVertexStream2sATI;
extern PFNGLVERTEXSTREAM2SVATIPROC glVertexStream2svATI;
extern PFNGLVERTEXSTREAM3DATIPROC glVertexStream3dATI;
extern PFNGLVERTEXSTREAM3DVATIPROC glVertexStream3dvATI;
extern PFNGLVERTEXSTREAM3FATIPROC glVertexStream3fATI;
extern PFNGLVERTEXSTREAM3FVATIPROC glVertexStream3fvATI;
extern PFNGLVERTEXSTREAM3IATIPROC glVertexStream3iATI;
extern PFNGLVERTEXSTREAM3IVATIPROC glVertexStream3ivATI;
extern PFNGLVERTEXSTREAM3SATIPROC glVertexStream3sATI;
extern PFNGLVERTEXSTREAM3SVATIPROC glVertexStream3svATI;
extern PFNGLVERTEXSTREAM4DATIPROC glVertexStream4dATI;
extern PFNGLVERTEXSTREAM4DVATIPROC glVertexStream4dvATI;
extern PFNGLVERTEXSTREAM4FATIPROC glVertexStream4fATI;
extern PFNGLVERTEXSTREAM4FVATIPROC glVertexStream4fvATI;
extern PFNGLVERTEXSTREAM4IATIPROC glVertexStream4iATI;
extern PFNGLVERTEXSTREAM4IVATIPROC glVertexStream4ivATI;
extern PFNGLVERTEXSTREAM4SATIPROC glVertexStream4sATI;
extern PFNGLVERTEXSTREAM4SVATIPROC glVertexStream4svATI;
extern PFNGLVERTEXWEIGHTPOINTEREXTPROC glVertexWeightPointerEXT;
extern PFNGLVERTEXWEIGHTFEXTPROC glVertexWeightfEXT;
extern PFNGLVERTEXWEIGHTFVEXTPROC glVertexWeightfvEXT;
extern PFNGLVERTEXWEIGHTHNVPROC glVertexWeighthNV;
extern PFNGLVERTEXWEIGHTHVNVPROC glVertexWeighthvNV;
extern PFNGLVIDEOCAPTURENVPROC glVideoCaptureNV;
extern PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC glVideoCaptureStreamParameterdvNV;
extern PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC glVideoCaptureStreamParameterfvNV;
extern PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC glVideoCaptureStreamParameterivNV;
extern PFNGLVIEWPORTPROC glViewport;
extern PFNGLVIEWPORTARRAYVPROC glViewportArrayv;
extern PFNGLVIEWPORTARRAYVNVPROC glViewportArrayvNV;
extern PFNGLVIEWPORTARRAYVOESPROC glViewportArrayvOES;
extern PFNGLVIEWPORTINDEXEDFPROC glViewportIndexedf;
extern PFNGLVIEWPORTINDEXEDFOESPROC glViewportIndexedfOES;
extern PFNGLVIEWPORTINDEXEDFNVPROC glViewportIndexedfNV;
extern PFNGLVIEWPORTINDEXEDFVPROC glViewportIndexedfv;
extern PFNGLVIEWPORTINDEXEDFVOESPROC glViewportIndexedfvOES;
extern PFNGLVIEWPORTINDEXEDFVNVPROC glViewportIndexedfvNV;
extern PFNGLVIEWPORTPOSITIONWSCALENVPROC glViewportPositionWScaleNV;
extern PFNGLVIEWPORTSWIZZLENVPROC glViewportSwizzleNV;
extern PFNGLWAITSEMAPHOREEXTPROC glWaitSemaphoreEXT;
extern PFNGLWAITSEMAPHOREUI64NVXPROC glWaitSemaphoreui64NVX;
extern PFNGLWAITSYNCPROC glWaitSync;
extern PFNGLWAITSYNCAPPLEPROC glWaitSyncAPPLE;
extern PFNGLWEIGHTPATHSNVPROC glWeightPathsNV;
extern PFNGLWEIGHTPOINTERARBPROC glWeightPointerARB;
extern PFNGLWEIGHTPOINTEROESPROC glWeightPointerOES;
extern PFNGLWEIGHTBVARBPROC glWeightbvARB;
extern PFNGLWEIGHTDVARBPROC glWeightdvARB;
extern PFNGLWEIGHTFVARBPROC glWeightfvARB;
extern PFNGLWEIGHTIVARBPROC glWeightivARB;
extern PFNGLWEIGHTSVARBPROC glWeightsvARB;
extern PFNGLWEIGHTUBVARBPROC glWeightubvARB;
extern PFNGLWEIGHTUIVARBPROC glWeightuivARB;
extern PFNGLWEIGHTUSVARBPROC glWeightusvARB;
extern PFNGLWINDOWPOS2DPROC glWindowPos2d;
extern PFNGLWINDOWPOS2DARBPROC glWindowPos2dARB;
extern PFNGLWINDOWPOS2DMESAPROC glWindowPos2dMESA;
extern PFNGLWINDOWPOS2DVPROC glWindowPos2dv;
extern PFNGLWINDOWPOS2DVARBPROC glWindowPos2dvARB;
extern PFNGLWINDOWPOS2DVMESAPROC glWindowPos2dvMESA;
extern PFNGLWINDOWPOS2FPROC glWindowPos2f;
extern PFNGLWINDOWPOS2FARBPROC glWindowPos2fARB;
extern PFNGLWINDOWPOS2FMESAPROC glWindowPos2fMESA;
extern PFNGLWINDOWPOS2FVPROC glWindowPos2fv;
extern PFNGLWINDOWPOS2FVARBPROC glWindowPos2fvARB;
extern PFNGLWINDOWPOS2FVMESAPROC glWindowPos2fvMESA;
extern PFNGLWINDOWPOS2IPROC glWindowPos2i;
extern PFNGLWINDOWPOS2IARBPROC glWindowPos2iARB;
extern PFNGLWINDOWPOS2IMESAPROC glWindowPos2iMESA;
extern PFNGLWINDOWPOS2IVPROC glWindowPos2iv;
extern PFNGLWINDOWPOS2IVARBPROC glWindowPos2ivARB;
extern PFNGLWINDOWPOS2IVMESAPROC glWindowPos2ivMESA;
extern PFNGLWINDOWPOS2SPROC glWindowPos2s;
extern PFNGLWINDOWPOS2SARBPROC glWindowPos2sARB;
extern PFNGLWINDOWPOS2SMESAPROC glWindowPos2sMESA;
extern PFNGLWINDOWPOS2SVPROC glWindowPos2sv;
extern PFNGLWINDOWPOS2SVARBPROC glWindowPos2svARB;
extern PFNGLWINDOWPOS2SVMESAPROC glWindowPos2svMESA;
extern PFNGLWINDOWPOS3DPROC glWindowPos3d;
extern PFNGLWINDOWPOS3DARBPROC glWindowPos3dARB;
extern PFNGLWINDOWPOS3DMESAPROC glWindowPos3dMESA;
extern PFNGLWINDOWPOS3DVPROC glWindowPos3dv;
extern PFNGLWINDOWPOS3DVARBPROC glWindowPos3dvARB;
extern PFNGLWINDOWPOS3DVMESAPROC glWindowPos3dvMESA;
extern PFNGLWINDOWPOS3FPROC glWindowPos3f;
extern PFNGLWINDOWPOS3FARBPROC glWindowPos3fARB;
extern PFNGLWINDOWPOS3FMESAPROC glWindowPos3fMESA;
extern PFNGLWINDOWPOS3FVPROC glWindowPos3fv;
extern PFNGLWINDOWPOS3FVARBPROC glWindowPos3fvARB;
extern PFNGLWINDOWPOS3FVMESAPROC glWindowPos3fvMESA;
extern PFNGLWINDOWPOS3IPROC glWindowPos3i;
extern PFNGLWINDOWPOS3IARBPROC glWindowPos3iARB;
extern PFNGLWINDOWPOS3IMESAPROC glWindowPos3iMESA;
extern PFNGLWINDOWPOS3IVPROC glWindowPos3iv;
extern PFNGLWINDOWPOS3IVARBPROC glWindowPos3ivARB;
extern PFNGLWINDOWPOS3IVMESAPROC glWindowPos3ivMESA;
extern PFNGLWINDOWPOS3SPROC glWindowPos3s;
extern PFNGLWINDOWPOS3SARBPROC glWindowPos3sARB;
extern PFNGLWINDOWPOS3SMESAPROC glWindowPos3sMESA;
extern PFNGLWINDOWPOS3SVPROC glWindowPos3sv;
extern PFNGLWINDOWPOS3SVARBPROC glWindowPos3svARB;
extern PFNGLWINDOWPOS3SVMESAPROC glWindowPos3svMESA;
extern PFNGLWINDOWPOS4DMESAPROC glWindowPos4dMESA;
extern PFNGLWINDOWPOS4DVMESAPROC glWindowPos4dvMESA;
extern PFNGLWINDOWPOS4FMESAPROC glWindowPos4fMESA;
extern PFNGLWINDOWPOS4FVMESAPROC glWindowPos4fvMESA;
extern PFNGLWINDOWPOS4IMESAPROC glWindowPos4iMESA;
extern PFNGLWINDOWPOS4IVMESAPROC glWindowPos4ivMESA;
extern PFNGLWINDOWPOS4SMESAPROC glWindowPos4sMESA;
extern PFNGLWINDOWPOS4SVMESAPROC glWindowPos4svMESA;
extern PFNGLWINDOWRECTANGLESEXTPROC glWindowRectanglesEXT;
extern PFNGLWRITEMASKEXTPROC glWriteMaskEXT;
extern PFNGLDRAWVKIMAGENVPROC glDrawVkImageNV;
extern PFNGLGETVKPROCADDRNVPROC glGetVkProcAddrNV;
extern PFNGLWAITVKSEMAPHORENVPROC glWaitVkSemaphoreNV;
extern PFNGLSIGNALVKSEMAPHORENVPROC glSignalVkSemaphoreNV;
extern PFNGLSIGNALVKFENCENVPROC glSignalVkFenceNV;
extern PFNGLFRAMEBUFFERPARAMETERIMESAPROC glFramebufferParameteriMESA;
extern PFNGLGETFRAMEBUFFERPARAMETERIVMESAPROC glGetFramebufferParameterivMESA;

// ======================================

bool qgl_init();
void qgl_shutdown();

#endif /* QGL_H_INCLUDED */
